# coding: utf-8

"""
    NHL v3 Odds

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class NhlOddsGameInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'game_id': 'int',
        'season': 'int',
        'season_type': 'int',
        'day': 'str',
        'date_time': 'str',
        'status': 'str',
        'away_team_id': 'int',
        'home_team_id': 'int',
        'away_team_name': 'str',
        'home_team_name': 'str',
        'global_game_id': 'int',
        'global_away_team_id': 'int',
        'global_home_team_id': 'int',
        'pregame_odds': 'list[NhlOddsGameOdd]',
        'live_odds': 'list[NhlOddsGameOdd]',
        'home_team_score': 'int',
        'away_team_score': 'int',
        'total_score': 'int',
        'home_rotation_number': 'int',
        'away_rotation_number': 'int',
        'alternate_market_pregame_odds': 'list[NhlOddsGameOdd]'
    }

    attribute_map = {
        'game_id': 'GameId',
        'season': 'Season',
        'season_type': 'SeasonType',
        'day': 'Day',
        'date_time': 'DateTime',
        'status': 'Status',
        'away_team_id': 'AwayTeamId',
        'home_team_id': 'HomeTeamId',
        'away_team_name': 'AwayTeamName',
        'home_team_name': 'HomeTeamName',
        'global_game_id': 'GlobalGameId',
        'global_away_team_id': 'GlobalAwayTeamId',
        'global_home_team_id': 'GlobalHomeTeamId',
        'pregame_odds': 'PregameOdds',
        'live_odds': 'LiveOdds',
        'home_team_score': 'HomeTeamScore',
        'away_team_score': 'AwayTeamScore',
        'total_score': 'TotalScore',
        'home_rotation_number': 'HomeRotationNumber',
        'away_rotation_number': 'AwayRotationNumber',
        'alternate_market_pregame_odds': 'AlternateMarketPregameOdds'
    }

    def __init__(self, game_id=None, season=None, season_type=None, day=None, date_time=None, status=None, away_team_id=None, home_team_id=None, away_team_name=None, home_team_name=None, global_game_id=None, global_away_team_id=None, global_home_team_id=None, pregame_odds=None, live_odds=None, home_team_score=None, away_team_score=None, total_score=None, home_rotation_number=None, away_rotation_number=None, alternate_market_pregame_odds=None):  # noqa: E501
        """NhlOddsGameInfo - a model defined in Swagger"""  # noqa: E501
        self._game_id = None
        self._season = None
        self._season_type = None
        self._day = None
        self._date_time = None
        self._status = None
        self._away_team_id = None
        self._home_team_id = None
        self._away_team_name = None
        self._home_team_name = None
        self._global_game_id = None
        self._global_away_team_id = None
        self._global_home_team_id = None
        self._pregame_odds = None
        self._live_odds = None
        self._home_team_score = None
        self._away_team_score = None
        self._total_score = None
        self._home_rotation_number = None
        self._away_rotation_number = None
        self._alternate_market_pregame_odds = None
        self.discriminator = None
        if game_id is not None:
            self.game_id = game_id
        if season is not None:
            self.season = season
        if season_type is not None:
            self.season_type = season_type
        if day is not None:
            self.day = day
        if date_time is not None:
            self.date_time = date_time
        if status is not None:
            self.status = status
        if away_team_id is not None:
            self.away_team_id = away_team_id
        if home_team_id is not None:
            self.home_team_id = home_team_id
        if away_team_name is not None:
            self.away_team_name = away_team_name
        if home_team_name is not None:
            self.home_team_name = home_team_name
        if global_game_id is not None:
            self.global_game_id = global_game_id
        if global_away_team_id is not None:
            self.global_away_team_id = global_away_team_id
        if global_home_team_id is not None:
            self.global_home_team_id = global_home_team_id
        if pregame_odds is not None:
            self.pregame_odds = pregame_odds
        if live_odds is not None:
            self.live_odds = live_odds
        if home_team_score is not None:
            self.home_team_score = home_team_score
        if away_team_score is not None:
            self.away_team_score = away_team_score
        if total_score is not None:
            self.total_score = total_score
        if home_rotation_number is not None:
            self.home_rotation_number = home_rotation_number
        if away_rotation_number is not None:
            self.away_rotation_number = away_rotation_number
        if alternate_market_pregame_odds is not None:
            self.alternate_market_pregame_odds = alternate_market_pregame_odds

    @property
    def game_id(self):
        """Gets the game_id of this NhlOddsGameInfo.  # noqa: E501


        :return: The game_id of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this NhlOddsGameInfo.


        :param game_id: The game_id of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._game_id = game_id

    @property
    def season(self):
        """Gets the season of this NhlOddsGameInfo.  # noqa: E501


        :return: The season of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this NhlOddsGameInfo.


        :param season: The season of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this NhlOddsGameInfo.  # noqa: E501


        :return: The season_type of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this NhlOddsGameInfo.


        :param season_type: The season_type of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._season_type = season_type

    @property
    def day(self):
        """Gets the day of this NhlOddsGameInfo.  # noqa: E501


        :return: The day of this NhlOddsGameInfo.  # noqa: E501
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this NhlOddsGameInfo.


        :param day: The day of this NhlOddsGameInfo.  # noqa: E501
        :type: str
        """

        self._day = day

    @property
    def date_time(self):
        """Gets the date_time of this NhlOddsGameInfo.  # noqa: E501


        :return: The date_time of this NhlOddsGameInfo.  # noqa: E501
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this NhlOddsGameInfo.


        :param date_time: The date_time of this NhlOddsGameInfo.  # noqa: E501
        :type: str
        """

        self._date_time = date_time

    @property
    def status(self):
        """Gets the status of this NhlOddsGameInfo.  # noqa: E501


        :return: The status of this NhlOddsGameInfo.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this NhlOddsGameInfo.


        :param status: The status of this NhlOddsGameInfo.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def away_team_id(self):
        """Gets the away_team_id of this NhlOddsGameInfo.  # noqa: E501


        :return: The away_team_id of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._away_team_id

    @away_team_id.setter
    def away_team_id(self, away_team_id):
        """Sets the away_team_id of this NhlOddsGameInfo.


        :param away_team_id: The away_team_id of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._away_team_id = away_team_id

    @property
    def home_team_id(self):
        """Gets the home_team_id of this NhlOddsGameInfo.  # noqa: E501


        :return: The home_team_id of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._home_team_id

    @home_team_id.setter
    def home_team_id(self, home_team_id):
        """Sets the home_team_id of this NhlOddsGameInfo.


        :param home_team_id: The home_team_id of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._home_team_id = home_team_id

    @property
    def away_team_name(self):
        """Gets the away_team_name of this NhlOddsGameInfo.  # noqa: E501


        :return: The away_team_name of this NhlOddsGameInfo.  # noqa: E501
        :rtype: str
        """
        return self._away_team_name

    @away_team_name.setter
    def away_team_name(self, away_team_name):
        """Sets the away_team_name of this NhlOddsGameInfo.


        :param away_team_name: The away_team_name of this NhlOddsGameInfo.  # noqa: E501
        :type: str
        """

        self._away_team_name = away_team_name

    @property
    def home_team_name(self):
        """Gets the home_team_name of this NhlOddsGameInfo.  # noqa: E501


        :return: The home_team_name of this NhlOddsGameInfo.  # noqa: E501
        :rtype: str
        """
        return self._home_team_name

    @home_team_name.setter
    def home_team_name(self, home_team_name):
        """Sets the home_team_name of this NhlOddsGameInfo.


        :param home_team_name: The home_team_name of this NhlOddsGameInfo.  # noqa: E501
        :type: str
        """

        self._home_team_name = home_team_name

    @property
    def global_game_id(self):
        """Gets the global_game_id of this NhlOddsGameInfo.  # noqa: E501


        :return: The global_game_id of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._global_game_id

    @global_game_id.setter
    def global_game_id(self, global_game_id):
        """Sets the global_game_id of this NhlOddsGameInfo.


        :param global_game_id: The global_game_id of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._global_game_id = global_game_id

    @property
    def global_away_team_id(self):
        """Gets the global_away_team_id of this NhlOddsGameInfo.  # noqa: E501


        :return: The global_away_team_id of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._global_away_team_id

    @global_away_team_id.setter
    def global_away_team_id(self, global_away_team_id):
        """Sets the global_away_team_id of this NhlOddsGameInfo.


        :param global_away_team_id: The global_away_team_id of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._global_away_team_id = global_away_team_id

    @property
    def global_home_team_id(self):
        """Gets the global_home_team_id of this NhlOddsGameInfo.  # noqa: E501


        :return: The global_home_team_id of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._global_home_team_id

    @global_home_team_id.setter
    def global_home_team_id(self, global_home_team_id):
        """Sets the global_home_team_id of this NhlOddsGameInfo.


        :param global_home_team_id: The global_home_team_id of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._global_home_team_id = global_home_team_id

    @property
    def pregame_odds(self):
        """Gets the pregame_odds of this NhlOddsGameInfo.  # noqa: E501


        :return: The pregame_odds of this NhlOddsGameInfo.  # noqa: E501
        :rtype: list[NhlOddsGameOdd]
        """
        return self._pregame_odds

    @pregame_odds.setter
    def pregame_odds(self, pregame_odds):
        """Sets the pregame_odds of this NhlOddsGameInfo.


        :param pregame_odds: The pregame_odds of this NhlOddsGameInfo.  # noqa: E501
        :type: list[NhlOddsGameOdd]
        """

        self._pregame_odds = pregame_odds

    @property
    def live_odds(self):
        """Gets the live_odds of this NhlOddsGameInfo.  # noqa: E501


        :return: The live_odds of this NhlOddsGameInfo.  # noqa: E501
        :rtype: list[NhlOddsGameOdd]
        """
        return self._live_odds

    @live_odds.setter
    def live_odds(self, live_odds):
        """Sets the live_odds of this NhlOddsGameInfo.


        :param live_odds: The live_odds of this NhlOddsGameInfo.  # noqa: E501
        :type: list[NhlOddsGameOdd]
        """

        self._live_odds = live_odds

    @property
    def home_team_score(self):
        """Gets the home_team_score of this NhlOddsGameInfo.  # noqa: E501


        :return: The home_team_score of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._home_team_score

    @home_team_score.setter
    def home_team_score(self, home_team_score):
        """Sets the home_team_score of this NhlOddsGameInfo.


        :param home_team_score: The home_team_score of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._home_team_score = home_team_score

    @property
    def away_team_score(self):
        """Gets the away_team_score of this NhlOddsGameInfo.  # noqa: E501


        :return: The away_team_score of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._away_team_score

    @away_team_score.setter
    def away_team_score(self, away_team_score):
        """Sets the away_team_score of this NhlOddsGameInfo.


        :param away_team_score: The away_team_score of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._away_team_score = away_team_score

    @property
    def total_score(self):
        """Gets the total_score of this NhlOddsGameInfo.  # noqa: E501


        :return: The total_score of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._total_score

    @total_score.setter
    def total_score(self, total_score):
        """Sets the total_score of this NhlOddsGameInfo.


        :param total_score: The total_score of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._total_score = total_score

    @property
    def home_rotation_number(self):
        """Gets the home_rotation_number of this NhlOddsGameInfo.  # noqa: E501


        :return: The home_rotation_number of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._home_rotation_number

    @home_rotation_number.setter
    def home_rotation_number(self, home_rotation_number):
        """Sets the home_rotation_number of this NhlOddsGameInfo.


        :param home_rotation_number: The home_rotation_number of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._home_rotation_number = home_rotation_number

    @property
    def away_rotation_number(self):
        """Gets the away_rotation_number of this NhlOddsGameInfo.  # noqa: E501


        :return: The away_rotation_number of this NhlOddsGameInfo.  # noqa: E501
        :rtype: int
        """
        return self._away_rotation_number

    @away_rotation_number.setter
    def away_rotation_number(self, away_rotation_number):
        """Sets the away_rotation_number of this NhlOddsGameInfo.


        :param away_rotation_number: The away_rotation_number of this NhlOddsGameInfo.  # noqa: E501
        :type: int
        """

        self._away_rotation_number = away_rotation_number

    @property
    def alternate_market_pregame_odds(self):
        """Gets the alternate_market_pregame_odds of this NhlOddsGameInfo.  # noqa: E501


        :return: The alternate_market_pregame_odds of this NhlOddsGameInfo.  # noqa: E501
        :rtype: list[NhlOddsGameOdd]
        """
        return self._alternate_market_pregame_odds

    @alternate_market_pregame_odds.setter
    def alternate_market_pregame_odds(self, alternate_market_pregame_odds):
        """Sets the alternate_market_pregame_odds of this NhlOddsGameInfo.


        :param alternate_market_pregame_odds: The alternate_market_pregame_odds of this NhlOddsGameInfo.  # noqa: E501
        :type: list[NhlOddsGameOdd]
        """

        self._alternate_market_pregame_odds = alternate_market_pregame_odds

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NhlOddsGameInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NhlOddsGameInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
