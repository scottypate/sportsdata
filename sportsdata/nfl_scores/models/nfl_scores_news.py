# coding: utf-8

"""
    NFL v3 Scores

    NFL schedules, scores, odds, weather, and news API.  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class NflScoresNews(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'news_id': 'int',
        'source': 'str',
        'updated': 'str',
        'time_ago': 'str',
        'title': 'str',
        'content': 'str',
        'url': 'str',
        'terms_of_use': 'str',
        'author': 'str',
        'categories': 'str',
        'player_id': 'int',
        'team_id': 'int',
        'team': 'str',
        'player_id2': 'int',
        'team_id2': 'int',
        'team2': 'str',
        'original_source': 'str',
        'original_source_url': 'str'
    }

    attribute_map = {
        'news_id': 'NewsID',
        'source': 'Source',
        'updated': 'Updated',
        'time_ago': 'TimeAgo',
        'title': 'Title',
        'content': 'Content',
        'url': 'Url',
        'terms_of_use': 'TermsOfUse',
        'author': 'Author',
        'categories': 'Categories',
        'player_id': 'PlayerID',
        'team_id': 'TeamID',
        'team': 'Team',
        'player_id2': 'PlayerID2',
        'team_id2': 'TeamID2',
        'team2': 'Team2',
        'original_source': 'OriginalSource',
        'original_source_url': 'OriginalSourceUrl'
    }

    def __init__(self, news_id=None, source=None, updated=None, time_ago=None, title=None, content=None, url=None, terms_of_use=None, author=None, categories=None, player_id=None, team_id=None, team=None, player_id2=None, team_id2=None, team2=None, original_source=None, original_source_url=None):  # noqa: E501
        """NflScoresNews - a model defined in Swagger"""  # noqa: E501
        self._news_id = None
        self._source = None
        self._updated = None
        self._time_ago = None
        self._title = None
        self._content = None
        self._url = None
        self._terms_of_use = None
        self._author = None
        self._categories = None
        self._player_id = None
        self._team_id = None
        self._team = None
        self._player_id2 = None
        self._team_id2 = None
        self._team2 = None
        self._original_source = None
        self._original_source_url = None
        self.discriminator = None
        if news_id is not None:
            self.news_id = news_id
        if source is not None:
            self.source = source
        if updated is not None:
            self.updated = updated
        if time_ago is not None:
            self.time_ago = time_ago
        if title is not None:
            self.title = title
        if content is not None:
            self.content = content
        if url is not None:
            self.url = url
        if terms_of_use is not None:
            self.terms_of_use = terms_of_use
        if author is not None:
            self.author = author
        if categories is not None:
            self.categories = categories
        if player_id is not None:
            self.player_id = player_id
        if team_id is not None:
            self.team_id = team_id
        if team is not None:
            self.team = team
        if player_id2 is not None:
            self.player_id2 = player_id2
        if team_id2 is not None:
            self.team_id2 = team_id2
        if team2 is not None:
            self.team2 = team2
        if original_source is not None:
            self.original_source = original_source
        if original_source_url is not None:
            self.original_source_url = original_source_url

    @property
    def news_id(self):
        """Gets the news_id of this NflScoresNews.  # noqa: E501


        :return: The news_id of this NflScoresNews.  # noqa: E501
        :rtype: int
        """
        return self._news_id

    @news_id.setter
    def news_id(self, news_id):
        """Sets the news_id of this NflScoresNews.


        :param news_id: The news_id of this NflScoresNews.  # noqa: E501
        :type: int
        """

        self._news_id = news_id

    @property
    def source(self):
        """Gets the source of this NflScoresNews.  # noqa: E501


        :return: The source of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this NflScoresNews.


        :param source: The source of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def updated(self):
        """Gets the updated of this NflScoresNews.  # noqa: E501


        :return: The updated of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this NflScoresNews.


        :param updated: The updated of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._updated = updated

    @property
    def time_ago(self):
        """Gets the time_ago of this NflScoresNews.  # noqa: E501


        :return: The time_ago of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._time_ago

    @time_ago.setter
    def time_ago(self, time_ago):
        """Sets the time_ago of this NflScoresNews.


        :param time_ago: The time_ago of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._time_ago = time_ago

    @property
    def title(self):
        """Gets the title of this NflScoresNews.  # noqa: E501


        :return: The title of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this NflScoresNews.


        :param title: The title of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def content(self):
        """Gets the content of this NflScoresNews.  # noqa: E501


        :return: The content of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this NflScoresNews.


        :param content: The content of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._content = content

    @property
    def url(self):
        """Gets the url of this NflScoresNews.  # noqa: E501


        :return: The url of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NflScoresNews.


        :param url: The url of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def terms_of_use(self):
        """Gets the terms_of_use of this NflScoresNews.  # noqa: E501


        :return: The terms_of_use of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._terms_of_use

    @terms_of_use.setter
    def terms_of_use(self, terms_of_use):
        """Sets the terms_of_use of this NflScoresNews.


        :param terms_of_use: The terms_of_use of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._terms_of_use = terms_of_use

    @property
    def author(self):
        """Gets the author of this NflScoresNews.  # noqa: E501


        :return: The author of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this NflScoresNews.


        :param author: The author of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._author = author

    @property
    def categories(self):
        """Gets the categories of this NflScoresNews.  # noqa: E501


        :return: The categories of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this NflScoresNews.


        :param categories: The categories of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._categories = categories

    @property
    def player_id(self):
        """Gets the player_id of this NflScoresNews.  # noqa: E501


        :return: The player_id of this NflScoresNews.  # noqa: E501
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this NflScoresNews.


        :param player_id: The player_id of this NflScoresNews.  # noqa: E501
        :type: int
        """

        self._player_id = player_id

    @property
    def team_id(self):
        """Gets the team_id of this NflScoresNews.  # noqa: E501


        :return: The team_id of this NflScoresNews.  # noqa: E501
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this NflScoresNews.


        :param team_id: The team_id of this NflScoresNews.  # noqa: E501
        :type: int
        """

        self._team_id = team_id

    @property
    def team(self):
        """Gets the team of this NflScoresNews.  # noqa: E501


        :return: The team of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this NflScoresNews.


        :param team: The team of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._team = team

    @property
    def player_id2(self):
        """Gets the player_id2 of this NflScoresNews.  # noqa: E501


        :return: The player_id2 of this NflScoresNews.  # noqa: E501
        :rtype: int
        """
        return self._player_id2

    @player_id2.setter
    def player_id2(self, player_id2):
        """Sets the player_id2 of this NflScoresNews.


        :param player_id2: The player_id2 of this NflScoresNews.  # noqa: E501
        :type: int
        """

        self._player_id2 = player_id2

    @property
    def team_id2(self):
        """Gets the team_id2 of this NflScoresNews.  # noqa: E501


        :return: The team_id2 of this NflScoresNews.  # noqa: E501
        :rtype: int
        """
        return self._team_id2

    @team_id2.setter
    def team_id2(self, team_id2):
        """Sets the team_id2 of this NflScoresNews.


        :param team_id2: The team_id2 of this NflScoresNews.  # noqa: E501
        :type: int
        """

        self._team_id2 = team_id2

    @property
    def team2(self):
        """Gets the team2 of this NflScoresNews.  # noqa: E501


        :return: The team2 of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._team2

    @team2.setter
    def team2(self, team2):
        """Sets the team2 of this NflScoresNews.


        :param team2: The team2 of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._team2 = team2

    @property
    def original_source(self):
        """Gets the original_source of this NflScoresNews.  # noqa: E501


        :return: The original_source of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._original_source

    @original_source.setter
    def original_source(self, original_source):
        """Sets the original_source of this NflScoresNews.


        :param original_source: The original_source of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._original_source = original_source

    @property
    def original_source_url(self):
        """Gets the original_source_url of this NflScoresNews.  # noqa: E501


        :return: The original_source_url of this NflScoresNews.  # noqa: E501
        :rtype: str
        """
        return self._original_source_url

    @original_source_url.setter
    def original_source_url(self, original_source_url):
        """Sets the original_source_url of this NflScoresNews.


        :param original_source_url: The original_source_url of this NflScoresNews.  # noqa: E501
        :type: str
        """

        self._original_source_url = original_source_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NflScoresNews, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NflScoresNews):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
