# coding: utf-8

"""
    NFL v3 Advanced Metrics

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class NflAdvancedMetricsAdvancedPlayer(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'player_id': 'int',
        'name': 'str',
        'team_id': 'int',
        'team': 'str',
        'position': 'str',
        'fantasy_position': 'str',
        'position_group': 'str',
        'bmi': 'float',
        'bmi_rank': 'int',
        'hand_size': 'float',
        'hand_size_rank': 'int',
        'arm_length': 'float',
        'arm_length_rank': 'int',
        'quality_score': 'float',
        'quality_score_rank': 'int',
        'forty_yard_dash': 'float',
        'forty_yard_dash_rank': 'int',
        'three_cone_drill': 'float',
        'three_cone_drill_rank': 'int',
        'twenty_yard_shuttle': 'float',
        'twenty_yard_shuttle_rank': 'int',
        'agility_score': 'float',
        'agility_score_rank': 'int',
        'vertical_jump': 'float',
        'vertical_jump_rank': 'int',
        'broad_jump': 'float',
        'broad_jump_rank': 'int',
        'burst_score': 'float',
        'burst_score_rank': 'int',
        'spar_qx': 'float',
        'spar_qx_rank': 'int',
        'athleticism_score': 'float',
        'athleticism_score_rank': 'int',
        'speed_score': 'float',
        'speed_score_rank': 'int',
        'throw_velocity': 'float',
        'throw_velocity_rank': 'int',
        'wonderlic_score': 'float',
        'wonderlic_score_rank': 'int',
        'height_adjusted_speed_score': 'float',
        'height_adjusted_speed_score_rank': 'int',
        'catch_radius': 'float',
        'catch_radius_rank': 'int',
        'bench_press': 'float',
        'bench_press_rank': 'int',
        'playmaking_radius': 'float',
        'playmaking_radius_rank': 'int',
        'highlight_clip': 'str',
        'medical_history': 'list[NflAdvancedMetricsAdvancedPlayerMedical]',
        'comparable_players': 'list[NflAdvancedMetricsPlayerInfo]',
        'advanced_player_seasons': 'list[NflAdvancedMetricsAdvancedPlayerSeason]',
        'advanced_player_games': 'list[NflAdvancedMetricsAdvancedPlayerGame]'
    }

    attribute_map = {
        'player_id': 'PlayerID',
        'name': 'Name',
        'team_id': 'TeamID',
        'team': 'Team',
        'position': 'Position',
        'fantasy_position': 'FantasyPosition',
        'position_group': 'PositionGroup',
        'bmi': 'BMI',
        'bmi_rank': 'BMIRank',
        'hand_size': 'HandSize',
        'hand_size_rank': 'HandSizeRank',
        'arm_length': 'ArmLength',
        'arm_length_rank': 'ArmLengthRank',
        'quality_score': 'QualityScore',
        'quality_score_rank': 'QualityScoreRank',
        'forty_yard_dash': 'FortyYardDash',
        'forty_yard_dash_rank': 'FortyYardDashRank',
        'three_cone_drill': 'ThreeConeDrill',
        'three_cone_drill_rank': 'ThreeConeDrillRank',
        'twenty_yard_shuttle': 'TwentyYardShuttle',
        'twenty_yard_shuttle_rank': 'TwentyYardShuttleRank',
        'agility_score': 'AgilityScore',
        'agility_score_rank': 'AgilityScoreRank',
        'vertical_jump': 'VerticalJump',
        'vertical_jump_rank': 'VerticalJumpRank',
        'broad_jump': 'BroadJump',
        'broad_jump_rank': 'BroadJumpRank',
        'burst_score': 'BurstScore',
        'burst_score_rank': 'BurstScoreRank',
        'spar_qx': 'SPARQx',
        'spar_qx_rank': 'SPARQxRank',
        'athleticism_score': 'AthleticismScore',
        'athleticism_score_rank': 'AthleticismScoreRank',
        'speed_score': 'SpeedScore',
        'speed_score_rank': 'SpeedScoreRank',
        'throw_velocity': 'ThrowVelocity',
        'throw_velocity_rank': 'ThrowVelocityRank',
        'wonderlic_score': 'WonderlicScore',
        'wonderlic_score_rank': 'WonderlicScoreRank',
        'height_adjusted_speed_score': 'HeightAdjustedSpeedScore',
        'height_adjusted_speed_score_rank': 'HeightAdjustedSpeedScoreRank',
        'catch_radius': 'CatchRadius',
        'catch_radius_rank': 'CatchRadiusRank',
        'bench_press': 'BenchPress',
        'bench_press_rank': 'BenchPressRank',
        'playmaking_radius': 'PlaymakingRadius',
        'playmaking_radius_rank': 'PlaymakingRadiusRank',
        'highlight_clip': 'HighlightClip',
        'medical_history': 'MedicalHistory',
        'comparable_players': 'ComparablePlayers',
        'advanced_player_seasons': 'AdvancedPlayerSeasons',
        'advanced_player_games': 'AdvancedPlayerGames'
    }

    def __init__(self, player_id=None, name=None, team_id=None, team=None, position=None, fantasy_position=None, position_group=None, bmi=None, bmi_rank=None, hand_size=None, hand_size_rank=None, arm_length=None, arm_length_rank=None, quality_score=None, quality_score_rank=None, forty_yard_dash=None, forty_yard_dash_rank=None, three_cone_drill=None, three_cone_drill_rank=None, twenty_yard_shuttle=None, twenty_yard_shuttle_rank=None, agility_score=None, agility_score_rank=None, vertical_jump=None, vertical_jump_rank=None, broad_jump=None, broad_jump_rank=None, burst_score=None, burst_score_rank=None, spar_qx=None, spar_qx_rank=None, athleticism_score=None, athleticism_score_rank=None, speed_score=None, speed_score_rank=None, throw_velocity=None, throw_velocity_rank=None, wonderlic_score=None, wonderlic_score_rank=None, height_adjusted_speed_score=None, height_adjusted_speed_score_rank=None, catch_radius=None, catch_radius_rank=None, bench_press=None, bench_press_rank=None, playmaking_radius=None, playmaking_radius_rank=None, highlight_clip=None, medical_history=None, comparable_players=None, advanced_player_seasons=None, advanced_player_games=None):  # noqa: E501
        """NflAdvancedMetricsAdvancedPlayer - a model defined in Swagger"""  # noqa: E501
        self._player_id = None
        self._name = None
        self._team_id = None
        self._team = None
        self._position = None
        self._fantasy_position = None
        self._position_group = None
        self._bmi = None
        self._bmi_rank = None
        self._hand_size = None
        self._hand_size_rank = None
        self._arm_length = None
        self._arm_length_rank = None
        self._quality_score = None
        self._quality_score_rank = None
        self._forty_yard_dash = None
        self._forty_yard_dash_rank = None
        self._three_cone_drill = None
        self._three_cone_drill_rank = None
        self._twenty_yard_shuttle = None
        self._twenty_yard_shuttle_rank = None
        self._agility_score = None
        self._agility_score_rank = None
        self._vertical_jump = None
        self._vertical_jump_rank = None
        self._broad_jump = None
        self._broad_jump_rank = None
        self._burst_score = None
        self._burst_score_rank = None
        self._spar_qx = None
        self._spar_qx_rank = None
        self._athleticism_score = None
        self._athleticism_score_rank = None
        self._speed_score = None
        self._speed_score_rank = None
        self._throw_velocity = None
        self._throw_velocity_rank = None
        self._wonderlic_score = None
        self._wonderlic_score_rank = None
        self._height_adjusted_speed_score = None
        self._height_adjusted_speed_score_rank = None
        self._catch_radius = None
        self._catch_radius_rank = None
        self._bench_press = None
        self._bench_press_rank = None
        self._playmaking_radius = None
        self._playmaking_radius_rank = None
        self._highlight_clip = None
        self._medical_history = None
        self._comparable_players = None
        self._advanced_player_seasons = None
        self._advanced_player_games = None
        self.discriminator = None
        if player_id is not None:
            self.player_id = player_id
        if name is not None:
            self.name = name
        if team_id is not None:
            self.team_id = team_id
        if team is not None:
            self.team = team
        if position is not None:
            self.position = position
        if fantasy_position is not None:
            self.fantasy_position = fantasy_position
        if position_group is not None:
            self.position_group = position_group
        if bmi is not None:
            self.bmi = bmi
        if bmi_rank is not None:
            self.bmi_rank = bmi_rank
        if hand_size is not None:
            self.hand_size = hand_size
        if hand_size_rank is not None:
            self.hand_size_rank = hand_size_rank
        if arm_length is not None:
            self.arm_length = arm_length
        if arm_length_rank is not None:
            self.arm_length_rank = arm_length_rank
        if quality_score is not None:
            self.quality_score = quality_score
        if quality_score_rank is not None:
            self.quality_score_rank = quality_score_rank
        if forty_yard_dash is not None:
            self.forty_yard_dash = forty_yard_dash
        if forty_yard_dash_rank is not None:
            self.forty_yard_dash_rank = forty_yard_dash_rank
        if three_cone_drill is not None:
            self.three_cone_drill = three_cone_drill
        if three_cone_drill_rank is not None:
            self.three_cone_drill_rank = three_cone_drill_rank
        if twenty_yard_shuttle is not None:
            self.twenty_yard_shuttle = twenty_yard_shuttle
        if twenty_yard_shuttle_rank is not None:
            self.twenty_yard_shuttle_rank = twenty_yard_shuttle_rank
        if agility_score is not None:
            self.agility_score = agility_score
        if agility_score_rank is not None:
            self.agility_score_rank = agility_score_rank
        if vertical_jump is not None:
            self.vertical_jump = vertical_jump
        if vertical_jump_rank is not None:
            self.vertical_jump_rank = vertical_jump_rank
        if broad_jump is not None:
            self.broad_jump = broad_jump
        if broad_jump_rank is not None:
            self.broad_jump_rank = broad_jump_rank
        if burst_score is not None:
            self.burst_score = burst_score
        if burst_score_rank is not None:
            self.burst_score_rank = burst_score_rank
        if spar_qx is not None:
            self.spar_qx = spar_qx
        if spar_qx_rank is not None:
            self.spar_qx_rank = spar_qx_rank
        if athleticism_score is not None:
            self.athleticism_score = athleticism_score
        if athleticism_score_rank is not None:
            self.athleticism_score_rank = athleticism_score_rank
        if speed_score is not None:
            self.speed_score = speed_score
        if speed_score_rank is not None:
            self.speed_score_rank = speed_score_rank
        if throw_velocity is not None:
            self.throw_velocity = throw_velocity
        if throw_velocity_rank is not None:
            self.throw_velocity_rank = throw_velocity_rank
        if wonderlic_score is not None:
            self.wonderlic_score = wonderlic_score
        if wonderlic_score_rank is not None:
            self.wonderlic_score_rank = wonderlic_score_rank
        if height_adjusted_speed_score is not None:
            self.height_adjusted_speed_score = height_adjusted_speed_score
        if height_adjusted_speed_score_rank is not None:
            self.height_adjusted_speed_score_rank = height_adjusted_speed_score_rank
        if catch_radius is not None:
            self.catch_radius = catch_radius
        if catch_radius_rank is not None:
            self.catch_radius_rank = catch_radius_rank
        if bench_press is not None:
            self.bench_press = bench_press
        if bench_press_rank is not None:
            self.bench_press_rank = bench_press_rank
        if playmaking_radius is not None:
            self.playmaking_radius = playmaking_radius
        if playmaking_radius_rank is not None:
            self.playmaking_radius_rank = playmaking_radius_rank
        if highlight_clip is not None:
            self.highlight_clip = highlight_clip
        if medical_history is not None:
            self.medical_history = medical_history
        if comparable_players is not None:
            self.comparable_players = comparable_players
        if advanced_player_seasons is not None:
            self.advanced_player_seasons = advanced_player_seasons
        if advanced_player_games is not None:
            self.advanced_player_games = advanced_player_games

    @property
    def player_id(self):
        """Gets the player_id of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The player_id of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this NflAdvancedMetricsAdvancedPlayer.


        :param player_id: The player_id of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._player_id = player_id

    @property
    def name(self):
        """Gets the name of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The name of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NflAdvancedMetricsAdvancedPlayer.


        :param name: The name of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def team_id(self):
        """Gets the team_id of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The team_id of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this NflAdvancedMetricsAdvancedPlayer.


        :param team_id: The team_id of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._team_id = team_id

    @property
    def team(self):
        """Gets the team of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The team of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this NflAdvancedMetricsAdvancedPlayer.


        :param team: The team of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: str
        """

        self._team = team

    @property
    def position(self):
        """Gets the position of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The position of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this NflAdvancedMetricsAdvancedPlayer.


        :param position: The position of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: str
        """

        self._position = position

    @property
    def fantasy_position(self):
        """Gets the fantasy_position of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The fantasy_position of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: str
        """
        return self._fantasy_position

    @fantasy_position.setter
    def fantasy_position(self, fantasy_position):
        """Sets the fantasy_position of this NflAdvancedMetricsAdvancedPlayer.


        :param fantasy_position: The fantasy_position of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: str
        """

        self._fantasy_position = fantasy_position

    @property
    def position_group(self):
        """Gets the position_group of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The position_group of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: str
        """
        return self._position_group

    @position_group.setter
    def position_group(self, position_group):
        """Sets the position_group of this NflAdvancedMetricsAdvancedPlayer.


        :param position_group: The position_group of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: str
        """

        self._position_group = position_group

    @property
    def bmi(self):
        """Gets the bmi of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The bmi of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._bmi

    @bmi.setter
    def bmi(self, bmi):
        """Sets the bmi of this NflAdvancedMetricsAdvancedPlayer.


        :param bmi: The bmi of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._bmi = bmi

    @property
    def bmi_rank(self):
        """Gets the bmi_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The bmi_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._bmi_rank

    @bmi_rank.setter
    def bmi_rank(self, bmi_rank):
        """Sets the bmi_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param bmi_rank: The bmi_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._bmi_rank = bmi_rank

    @property
    def hand_size(self):
        """Gets the hand_size of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The hand_size of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._hand_size

    @hand_size.setter
    def hand_size(self, hand_size):
        """Sets the hand_size of this NflAdvancedMetricsAdvancedPlayer.


        :param hand_size: The hand_size of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._hand_size = hand_size

    @property
    def hand_size_rank(self):
        """Gets the hand_size_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The hand_size_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._hand_size_rank

    @hand_size_rank.setter
    def hand_size_rank(self, hand_size_rank):
        """Sets the hand_size_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param hand_size_rank: The hand_size_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._hand_size_rank = hand_size_rank

    @property
    def arm_length(self):
        """Gets the arm_length of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The arm_length of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._arm_length

    @arm_length.setter
    def arm_length(self, arm_length):
        """Sets the arm_length of this NflAdvancedMetricsAdvancedPlayer.


        :param arm_length: The arm_length of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._arm_length = arm_length

    @property
    def arm_length_rank(self):
        """Gets the arm_length_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The arm_length_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._arm_length_rank

    @arm_length_rank.setter
    def arm_length_rank(self, arm_length_rank):
        """Sets the arm_length_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param arm_length_rank: The arm_length_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._arm_length_rank = arm_length_rank

    @property
    def quality_score(self):
        """Gets the quality_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The quality_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._quality_score

    @quality_score.setter
    def quality_score(self, quality_score):
        """Sets the quality_score of this NflAdvancedMetricsAdvancedPlayer.


        :param quality_score: The quality_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._quality_score = quality_score

    @property
    def quality_score_rank(self):
        """Gets the quality_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The quality_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._quality_score_rank

    @quality_score_rank.setter
    def quality_score_rank(self, quality_score_rank):
        """Sets the quality_score_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param quality_score_rank: The quality_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._quality_score_rank = quality_score_rank

    @property
    def forty_yard_dash(self):
        """Gets the forty_yard_dash of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The forty_yard_dash of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._forty_yard_dash

    @forty_yard_dash.setter
    def forty_yard_dash(self, forty_yard_dash):
        """Sets the forty_yard_dash of this NflAdvancedMetricsAdvancedPlayer.


        :param forty_yard_dash: The forty_yard_dash of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._forty_yard_dash = forty_yard_dash

    @property
    def forty_yard_dash_rank(self):
        """Gets the forty_yard_dash_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The forty_yard_dash_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._forty_yard_dash_rank

    @forty_yard_dash_rank.setter
    def forty_yard_dash_rank(self, forty_yard_dash_rank):
        """Sets the forty_yard_dash_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param forty_yard_dash_rank: The forty_yard_dash_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._forty_yard_dash_rank = forty_yard_dash_rank

    @property
    def three_cone_drill(self):
        """Gets the three_cone_drill of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The three_cone_drill of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._three_cone_drill

    @three_cone_drill.setter
    def three_cone_drill(self, three_cone_drill):
        """Sets the three_cone_drill of this NflAdvancedMetricsAdvancedPlayer.


        :param three_cone_drill: The three_cone_drill of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._three_cone_drill = three_cone_drill

    @property
    def three_cone_drill_rank(self):
        """Gets the three_cone_drill_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The three_cone_drill_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._three_cone_drill_rank

    @three_cone_drill_rank.setter
    def three_cone_drill_rank(self, three_cone_drill_rank):
        """Sets the three_cone_drill_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param three_cone_drill_rank: The three_cone_drill_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._three_cone_drill_rank = three_cone_drill_rank

    @property
    def twenty_yard_shuttle(self):
        """Gets the twenty_yard_shuttle of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The twenty_yard_shuttle of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._twenty_yard_shuttle

    @twenty_yard_shuttle.setter
    def twenty_yard_shuttle(self, twenty_yard_shuttle):
        """Sets the twenty_yard_shuttle of this NflAdvancedMetricsAdvancedPlayer.


        :param twenty_yard_shuttle: The twenty_yard_shuttle of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._twenty_yard_shuttle = twenty_yard_shuttle

    @property
    def twenty_yard_shuttle_rank(self):
        """Gets the twenty_yard_shuttle_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The twenty_yard_shuttle_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._twenty_yard_shuttle_rank

    @twenty_yard_shuttle_rank.setter
    def twenty_yard_shuttle_rank(self, twenty_yard_shuttle_rank):
        """Sets the twenty_yard_shuttle_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param twenty_yard_shuttle_rank: The twenty_yard_shuttle_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._twenty_yard_shuttle_rank = twenty_yard_shuttle_rank

    @property
    def agility_score(self):
        """Gets the agility_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The agility_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._agility_score

    @agility_score.setter
    def agility_score(self, agility_score):
        """Sets the agility_score of this NflAdvancedMetricsAdvancedPlayer.


        :param agility_score: The agility_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._agility_score = agility_score

    @property
    def agility_score_rank(self):
        """Gets the agility_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The agility_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._agility_score_rank

    @agility_score_rank.setter
    def agility_score_rank(self, agility_score_rank):
        """Sets the agility_score_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param agility_score_rank: The agility_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._agility_score_rank = agility_score_rank

    @property
    def vertical_jump(self):
        """Gets the vertical_jump of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The vertical_jump of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._vertical_jump

    @vertical_jump.setter
    def vertical_jump(self, vertical_jump):
        """Sets the vertical_jump of this NflAdvancedMetricsAdvancedPlayer.


        :param vertical_jump: The vertical_jump of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._vertical_jump = vertical_jump

    @property
    def vertical_jump_rank(self):
        """Gets the vertical_jump_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The vertical_jump_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._vertical_jump_rank

    @vertical_jump_rank.setter
    def vertical_jump_rank(self, vertical_jump_rank):
        """Sets the vertical_jump_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param vertical_jump_rank: The vertical_jump_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._vertical_jump_rank = vertical_jump_rank

    @property
    def broad_jump(self):
        """Gets the broad_jump of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The broad_jump of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._broad_jump

    @broad_jump.setter
    def broad_jump(self, broad_jump):
        """Sets the broad_jump of this NflAdvancedMetricsAdvancedPlayer.


        :param broad_jump: The broad_jump of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._broad_jump = broad_jump

    @property
    def broad_jump_rank(self):
        """Gets the broad_jump_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The broad_jump_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._broad_jump_rank

    @broad_jump_rank.setter
    def broad_jump_rank(self, broad_jump_rank):
        """Sets the broad_jump_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param broad_jump_rank: The broad_jump_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._broad_jump_rank = broad_jump_rank

    @property
    def burst_score(self):
        """Gets the burst_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The burst_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._burst_score

    @burst_score.setter
    def burst_score(self, burst_score):
        """Sets the burst_score of this NflAdvancedMetricsAdvancedPlayer.


        :param burst_score: The burst_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._burst_score = burst_score

    @property
    def burst_score_rank(self):
        """Gets the burst_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The burst_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._burst_score_rank

    @burst_score_rank.setter
    def burst_score_rank(self, burst_score_rank):
        """Sets the burst_score_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param burst_score_rank: The burst_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._burst_score_rank = burst_score_rank

    @property
    def spar_qx(self):
        """Gets the spar_qx of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The spar_qx of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._spar_qx

    @spar_qx.setter
    def spar_qx(self, spar_qx):
        """Sets the spar_qx of this NflAdvancedMetricsAdvancedPlayer.


        :param spar_qx: The spar_qx of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._spar_qx = spar_qx

    @property
    def spar_qx_rank(self):
        """Gets the spar_qx_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The spar_qx_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._spar_qx_rank

    @spar_qx_rank.setter
    def spar_qx_rank(self, spar_qx_rank):
        """Sets the spar_qx_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param spar_qx_rank: The spar_qx_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._spar_qx_rank = spar_qx_rank

    @property
    def athleticism_score(self):
        """Gets the athleticism_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The athleticism_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._athleticism_score

    @athleticism_score.setter
    def athleticism_score(self, athleticism_score):
        """Sets the athleticism_score of this NflAdvancedMetricsAdvancedPlayer.


        :param athleticism_score: The athleticism_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._athleticism_score = athleticism_score

    @property
    def athleticism_score_rank(self):
        """Gets the athleticism_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The athleticism_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._athleticism_score_rank

    @athleticism_score_rank.setter
    def athleticism_score_rank(self, athleticism_score_rank):
        """Sets the athleticism_score_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param athleticism_score_rank: The athleticism_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._athleticism_score_rank = athleticism_score_rank

    @property
    def speed_score(self):
        """Gets the speed_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The speed_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._speed_score

    @speed_score.setter
    def speed_score(self, speed_score):
        """Sets the speed_score of this NflAdvancedMetricsAdvancedPlayer.


        :param speed_score: The speed_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._speed_score = speed_score

    @property
    def speed_score_rank(self):
        """Gets the speed_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The speed_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._speed_score_rank

    @speed_score_rank.setter
    def speed_score_rank(self, speed_score_rank):
        """Sets the speed_score_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param speed_score_rank: The speed_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._speed_score_rank = speed_score_rank

    @property
    def throw_velocity(self):
        """Gets the throw_velocity of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The throw_velocity of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._throw_velocity

    @throw_velocity.setter
    def throw_velocity(self, throw_velocity):
        """Sets the throw_velocity of this NflAdvancedMetricsAdvancedPlayer.


        :param throw_velocity: The throw_velocity of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._throw_velocity = throw_velocity

    @property
    def throw_velocity_rank(self):
        """Gets the throw_velocity_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The throw_velocity_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._throw_velocity_rank

    @throw_velocity_rank.setter
    def throw_velocity_rank(self, throw_velocity_rank):
        """Sets the throw_velocity_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param throw_velocity_rank: The throw_velocity_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._throw_velocity_rank = throw_velocity_rank

    @property
    def wonderlic_score(self):
        """Gets the wonderlic_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The wonderlic_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._wonderlic_score

    @wonderlic_score.setter
    def wonderlic_score(self, wonderlic_score):
        """Sets the wonderlic_score of this NflAdvancedMetricsAdvancedPlayer.


        :param wonderlic_score: The wonderlic_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._wonderlic_score = wonderlic_score

    @property
    def wonderlic_score_rank(self):
        """Gets the wonderlic_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The wonderlic_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._wonderlic_score_rank

    @wonderlic_score_rank.setter
    def wonderlic_score_rank(self, wonderlic_score_rank):
        """Sets the wonderlic_score_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param wonderlic_score_rank: The wonderlic_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._wonderlic_score_rank = wonderlic_score_rank

    @property
    def height_adjusted_speed_score(self):
        """Gets the height_adjusted_speed_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The height_adjusted_speed_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._height_adjusted_speed_score

    @height_adjusted_speed_score.setter
    def height_adjusted_speed_score(self, height_adjusted_speed_score):
        """Sets the height_adjusted_speed_score of this NflAdvancedMetricsAdvancedPlayer.


        :param height_adjusted_speed_score: The height_adjusted_speed_score of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._height_adjusted_speed_score = height_adjusted_speed_score

    @property
    def height_adjusted_speed_score_rank(self):
        """Gets the height_adjusted_speed_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The height_adjusted_speed_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._height_adjusted_speed_score_rank

    @height_adjusted_speed_score_rank.setter
    def height_adjusted_speed_score_rank(self, height_adjusted_speed_score_rank):
        """Sets the height_adjusted_speed_score_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param height_adjusted_speed_score_rank: The height_adjusted_speed_score_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._height_adjusted_speed_score_rank = height_adjusted_speed_score_rank

    @property
    def catch_radius(self):
        """Gets the catch_radius of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The catch_radius of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._catch_radius

    @catch_radius.setter
    def catch_radius(self, catch_radius):
        """Sets the catch_radius of this NflAdvancedMetricsAdvancedPlayer.


        :param catch_radius: The catch_radius of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._catch_radius = catch_radius

    @property
    def catch_radius_rank(self):
        """Gets the catch_radius_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The catch_radius_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._catch_radius_rank

    @catch_radius_rank.setter
    def catch_radius_rank(self, catch_radius_rank):
        """Sets the catch_radius_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param catch_radius_rank: The catch_radius_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._catch_radius_rank = catch_radius_rank

    @property
    def bench_press(self):
        """Gets the bench_press of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The bench_press of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._bench_press

    @bench_press.setter
    def bench_press(self, bench_press):
        """Sets the bench_press of this NflAdvancedMetricsAdvancedPlayer.


        :param bench_press: The bench_press of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._bench_press = bench_press

    @property
    def bench_press_rank(self):
        """Gets the bench_press_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The bench_press_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._bench_press_rank

    @bench_press_rank.setter
    def bench_press_rank(self, bench_press_rank):
        """Sets the bench_press_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param bench_press_rank: The bench_press_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._bench_press_rank = bench_press_rank

    @property
    def playmaking_radius(self):
        """Gets the playmaking_radius of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The playmaking_radius of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: float
        """
        return self._playmaking_radius

    @playmaking_radius.setter
    def playmaking_radius(self, playmaking_radius):
        """Sets the playmaking_radius of this NflAdvancedMetricsAdvancedPlayer.


        :param playmaking_radius: The playmaking_radius of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: float
        """

        self._playmaking_radius = playmaking_radius

    @property
    def playmaking_radius_rank(self):
        """Gets the playmaking_radius_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The playmaking_radius_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: int
        """
        return self._playmaking_radius_rank

    @playmaking_radius_rank.setter
    def playmaking_radius_rank(self, playmaking_radius_rank):
        """Sets the playmaking_radius_rank of this NflAdvancedMetricsAdvancedPlayer.


        :param playmaking_radius_rank: The playmaking_radius_rank of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: int
        """

        self._playmaking_radius_rank = playmaking_radius_rank

    @property
    def highlight_clip(self):
        """Gets the highlight_clip of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The highlight_clip of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: str
        """
        return self._highlight_clip

    @highlight_clip.setter
    def highlight_clip(self, highlight_clip):
        """Sets the highlight_clip of this NflAdvancedMetricsAdvancedPlayer.


        :param highlight_clip: The highlight_clip of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: str
        """

        self._highlight_clip = highlight_clip

    @property
    def medical_history(self):
        """Gets the medical_history of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The medical_history of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: list[NflAdvancedMetricsAdvancedPlayerMedical]
        """
        return self._medical_history

    @medical_history.setter
    def medical_history(self, medical_history):
        """Sets the medical_history of this NflAdvancedMetricsAdvancedPlayer.


        :param medical_history: The medical_history of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: list[NflAdvancedMetricsAdvancedPlayerMedical]
        """

        self._medical_history = medical_history

    @property
    def comparable_players(self):
        """Gets the comparable_players of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The comparable_players of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: list[NflAdvancedMetricsPlayerInfo]
        """
        return self._comparable_players

    @comparable_players.setter
    def comparable_players(self, comparable_players):
        """Sets the comparable_players of this NflAdvancedMetricsAdvancedPlayer.


        :param comparable_players: The comparable_players of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: list[NflAdvancedMetricsPlayerInfo]
        """

        self._comparable_players = comparable_players

    @property
    def advanced_player_seasons(self):
        """Gets the advanced_player_seasons of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The advanced_player_seasons of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: list[NflAdvancedMetricsAdvancedPlayerSeason]
        """
        return self._advanced_player_seasons

    @advanced_player_seasons.setter
    def advanced_player_seasons(self, advanced_player_seasons):
        """Sets the advanced_player_seasons of this NflAdvancedMetricsAdvancedPlayer.


        :param advanced_player_seasons: The advanced_player_seasons of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: list[NflAdvancedMetricsAdvancedPlayerSeason]
        """

        self._advanced_player_seasons = advanced_player_seasons

    @property
    def advanced_player_games(self):
        """Gets the advanced_player_games of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501


        :return: The advanced_player_games of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :rtype: list[NflAdvancedMetricsAdvancedPlayerGame]
        """
        return self._advanced_player_games

    @advanced_player_games.setter
    def advanced_player_games(self, advanced_player_games):
        """Sets the advanced_player_games of this NflAdvancedMetricsAdvancedPlayer.


        :param advanced_player_games: The advanced_player_games of this NflAdvancedMetricsAdvancedPlayer.  # noqa: E501
        :type: list[NflAdvancedMetricsAdvancedPlayerGame]
        """

        self._advanced_player_games = advanced_player_games

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NflAdvancedMetricsAdvancedPlayer, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NflAdvancedMetricsAdvancedPlayer):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
