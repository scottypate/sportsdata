# coding: utf-8

"""
    NFL v3 Advanced Metrics

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class NflAdvancedMetricsAdvancedPlayerGame(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'player_id': 'int',
        'name': 'str',
        'team_id': 'int',
        'team': 'str',
        'position': 'str',
        'fantasy_position': 'str',
        'position_group': 'str',
        'season': 'int',
        'season_type': 'int',
        'week': 'int',
        'opponent': 'str',
        'opponent_id': 'int',
        'snaps': 'float',
        'snap_share': 'float',
        'passing_attempts': 'float',
        'completions': 'float',
        'completion_percentage': 'float',
        'passing_yards': 'float',
        'passing_yards_per_attempt': 'float',
        'passing_touchdowns': 'float',
        'passing_t_ds': 'float',
        'interceptions': 'float',
        'red_zone_attempts': 'float',
        'red_zone_completion_percentage': 'float',
        'deep_ball_attempts': 'float',
        'deep_ball_completions': 'float',
        'carries': 'float',
        'rushing_yards': 'float',
        'rushing_touchdowns': 'float',
        'targets': 'float',
        'receptions': 'float',
        'receiving_yards': 'float',
        'receiving_touchdowns': 'float',
        'total_yards': 'float',
        'total_touches': 'float',
        'yards_per_touch': 'float',
        'opportunities': 'float',
        'opportunity_share': 'float',
        'total_touchdowns': 'float',
        'evaded_tackles': 'float',
        'juke_rate': 'float',
        'catch_rate': 'float',
        'target_share': 'float',
        'hog_rate': 'float',
        'contested_targets': 'float',
        'contested_catches': 'float',
        'red_zone_carries': 'float',
        'red_zone_targets': 'float',
        'red_zone_opportunities': 'float',
        'red_zone_touches': 'float',
        'red_zone_receptions': 'float',
        'red_zone_catch_rate': 'float',
        'yards_per_carry': 'float',
        'yards_per_target': 'float',
        'yards_per_opportunity': 'float',
        'yards_per_reception': 'float',
        'end_zone_targets': 'float',
        'routes_run': 'float',
        'burns': 'float',
        'hurries': 'float',
        'yards_created': 'float',
        'pass_attempts_inside5': 'float',
        'pass_attempts_inside10': 'float',
        'carries_inside5': 'float',
        'carries_inside10': 'float',
        'targets_inside5': 'float',
        'targets_inside10': 'float',
        'primary_corner': 'float',
        'routes_defended': 'float',
        'targets_allowed': 'float',
        'receptions_allowed': 'float',
        'yards_allowed': 'float',
        'burns_cb': 'float',
        'pass_breakups': 'float',
        'interceptions_cb': 'float',
        'wr_matchup': 'float',
        'fantasy_points': 'float',
        'fantasy_points_rank': 'int',
        'fantasy_points_per_attempt': 'float',
        'fantasy_points_per_target': 'float',
        'fantasy_points_per_opportunity': 'float',
        'fantasy_points_allowed': 'float',
        'fantasy_points_allowed_week_rank': 'int'
    }

    attribute_map = {
        'player_id': 'PlayerID',
        'name': 'Name',
        'team_id': 'TeamID',
        'team': 'Team',
        'position': 'Position',
        'fantasy_position': 'FantasyPosition',
        'position_group': 'PositionGroup',
        'season': 'Season',
        'season_type': 'SeasonType',
        'week': 'Week',
        'opponent': 'Opponent',
        'opponent_id': 'OpponentID',
        'snaps': 'Snaps',
        'snap_share': 'SnapShare',
        'passing_attempts': 'PassingAttempts',
        'completions': 'Completions',
        'completion_percentage': 'CompletionPercentage',
        'passing_yards': 'PassingYards',
        'passing_yards_per_attempt': 'PassingYardsPerAttempt',
        'passing_touchdowns': 'PassingTouchdowns',
        'passing_t_ds': 'PassingTDs',
        'interceptions': 'Interceptions',
        'red_zone_attempts': 'RedZoneAttempts',
        'red_zone_completion_percentage': 'RedZoneCompletionPercentage',
        'deep_ball_attempts': 'DeepBallAttempts',
        'deep_ball_completions': 'DeepBallCompletions',
        'carries': 'Carries',
        'rushing_yards': 'RushingYards',
        'rushing_touchdowns': 'RushingTouchdowns',
        'targets': 'Targets',
        'receptions': 'Receptions',
        'receiving_yards': 'ReceivingYards',
        'receiving_touchdowns': 'ReceivingTouchdowns',
        'total_yards': 'TotalYards',
        'total_touches': 'TotalTouches',
        'yards_per_touch': 'YardsPerTouch',
        'opportunities': 'Opportunities',
        'opportunity_share': 'OpportunityShare',
        'total_touchdowns': 'TotalTouchdowns',
        'evaded_tackles': 'EvadedTackles',
        'juke_rate': 'JukeRate',
        'catch_rate': 'CatchRate',
        'target_share': 'TargetShare',
        'hog_rate': 'HogRate',
        'contested_targets': 'ContestedTargets',
        'contested_catches': 'ContestedCatches',
        'red_zone_carries': 'RedZoneCarries',
        'red_zone_targets': 'RedZoneTargets',
        'red_zone_opportunities': 'RedZoneOpportunities',
        'red_zone_touches': 'RedZoneTouches',
        'red_zone_receptions': 'RedZoneReceptions',
        'red_zone_catch_rate': 'RedZoneCatchRate',
        'yards_per_carry': 'YardsPerCarry',
        'yards_per_target': 'YardsPerTarget',
        'yards_per_opportunity': 'YardsPerOpportunity',
        'yards_per_reception': 'YardsPerReception',
        'end_zone_targets': 'EndZoneTargets',
        'routes_run': 'RoutesRun',
        'burns': 'Burns',
        'hurries': 'Hurries',
        'yards_created': 'YardsCreated',
        'pass_attempts_inside5': 'PassAttemptsInside5',
        'pass_attempts_inside10': 'PassAttemptsInside10',
        'carries_inside5': 'CarriesInside5',
        'carries_inside10': 'CarriesInside10',
        'targets_inside5': 'TargetsInside5',
        'targets_inside10': 'TargetsInside10',
        'primary_corner': 'PrimaryCorner',
        'routes_defended': 'RoutesDefended',
        'targets_allowed': 'TargetsAllowed',
        'receptions_allowed': 'ReceptionsAllowed',
        'yards_allowed': 'YardsAllowed',
        'burns_cb': 'BurnsCB',
        'pass_breakups': 'PassBreakups',
        'interceptions_cb': 'InterceptionsCB',
        'wr_matchup': 'WRMatchup',
        'fantasy_points': 'FantasyPoints',
        'fantasy_points_rank': 'FantasyPointsRank',
        'fantasy_points_per_attempt': 'FantasyPointsPerAttempt',
        'fantasy_points_per_target': 'FantasyPointsPerTarget',
        'fantasy_points_per_opportunity': 'FantasyPointsPerOpportunity',
        'fantasy_points_allowed': 'FantasyPointsAllowed',
        'fantasy_points_allowed_week_rank': 'FantasyPointsAllowedWeekRank'
    }

    def __init__(self, player_id=None, name=None, team_id=None, team=None, position=None, fantasy_position=None, position_group=None, season=None, season_type=None, week=None, opponent=None, opponent_id=None, snaps=None, snap_share=None, passing_attempts=None, completions=None, completion_percentage=None, passing_yards=None, passing_yards_per_attempt=None, passing_touchdowns=None, passing_t_ds=None, interceptions=None, red_zone_attempts=None, red_zone_completion_percentage=None, deep_ball_attempts=None, deep_ball_completions=None, carries=None, rushing_yards=None, rushing_touchdowns=None, targets=None, receptions=None, receiving_yards=None, receiving_touchdowns=None, total_yards=None, total_touches=None, yards_per_touch=None, opportunities=None, opportunity_share=None, total_touchdowns=None, evaded_tackles=None, juke_rate=None, catch_rate=None, target_share=None, hog_rate=None, contested_targets=None, contested_catches=None, red_zone_carries=None, red_zone_targets=None, red_zone_opportunities=None, red_zone_touches=None, red_zone_receptions=None, red_zone_catch_rate=None, yards_per_carry=None, yards_per_target=None, yards_per_opportunity=None, yards_per_reception=None, end_zone_targets=None, routes_run=None, burns=None, hurries=None, yards_created=None, pass_attempts_inside5=None, pass_attempts_inside10=None, carries_inside5=None, carries_inside10=None, targets_inside5=None, targets_inside10=None, primary_corner=None, routes_defended=None, targets_allowed=None, receptions_allowed=None, yards_allowed=None, burns_cb=None, pass_breakups=None, interceptions_cb=None, wr_matchup=None, fantasy_points=None, fantasy_points_rank=None, fantasy_points_per_attempt=None, fantasy_points_per_target=None, fantasy_points_per_opportunity=None, fantasy_points_allowed=None, fantasy_points_allowed_week_rank=None):  # noqa: E501
        """NflAdvancedMetricsAdvancedPlayerGame - a model defined in Swagger"""  # noqa: E501
        self._player_id = None
        self._name = None
        self._team_id = None
        self._team = None
        self._position = None
        self._fantasy_position = None
        self._position_group = None
        self._season = None
        self._season_type = None
        self._week = None
        self._opponent = None
        self._opponent_id = None
        self._snaps = None
        self._snap_share = None
        self._passing_attempts = None
        self._completions = None
        self._completion_percentage = None
        self._passing_yards = None
        self._passing_yards_per_attempt = None
        self._passing_touchdowns = None
        self._passing_t_ds = None
        self._interceptions = None
        self._red_zone_attempts = None
        self._red_zone_completion_percentage = None
        self._deep_ball_attempts = None
        self._deep_ball_completions = None
        self._carries = None
        self._rushing_yards = None
        self._rushing_touchdowns = None
        self._targets = None
        self._receptions = None
        self._receiving_yards = None
        self._receiving_touchdowns = None
        self._total_yards = None
        self._total_touches = None
        self._yards_per_touch = None
        self._opportunities = None
        self._opportunity_share = None
        self._total_touchdowns = None
        self._evaded_tackles = None
        self._juke_rate = None
        self._catch_rate = None
        self._target_share = None
        self._hog_rate = None
        self._contested_targets = None
        self._contested_catches = None
        self._red_zone_carries = None
        self._red_zone_targets = None
        self._red_zone_opportunities = None
        self._red_zone_touches = None
        self._red_zone_receptions = None
        self._red_zone_catch_rate = None
        self._yards_per_carry = None
        self._yards_per_target = None
        self._yards_per_opportunity = None
        self._yards_per_reception = None
        self._end_zone_targets = None
        self._routes_run = None
        self._burns = None
        self._hurries = None
        self._yards_created = None
        self._pass_attempts_inside5 = None
        self._pass_attempts_inside10 = None
        self._carries_inside5 = None
        self._carries_inside10 = None
        self._targets_inside5 = None
        self._targets_inside10 = None
        self._primary_corner = None
        self._routes_defended = None
        self._targets_allowed = None
        self._receptions_allowed = None
        self._yards_allowed = None
        self._burns_cb = None
        self._pass_breakups = None
        self._interceptions_cb = None
        self._wr_matchup = None
        self._fantasy_points = None
        self._fantasy_points_rank = None
        self._fantasy_points_per_attempt = None
        self._fantasy_points_per_target = None
        self._fantasy_points_per_opportunity = None
        self._fantasy_points_allowed = None
        self._fantasy_points_allowed_week_rank = None
        self.discriminator = None
        if player_id is not None:
            self.player_id = player_id
        if name is not None:
            self.name = name
        if team_id is not None:
            self.team_id = team_id
        if team is not None:
            self.team = team
        if position is not None:
            self.position = position
        if fantasy_position is not None:
            self.fantasy_position = fantasy_position
        if position_group is not None:
            self.position_group = position_group
        if season is not None:
            self.season = season
        if season_type is not None:
            self.season_type = season_type
        if week is not None:
            self.week = week
        if opponent is not None:
            self.opponent = opponent
        if opponent_id is not None:
            self.opponent_id = opponent_id
        if snaps is not None:
            self.snaps = snaps
        if snap_share is not None:
            self.snap_share = snap_share
        if passing_attempts is not None:
            self.passing_attempts = passing_attempts
        if completions is not None:
            self.completions = completions
        if completion_percentage is not None:
            self.completion_percentage = completion_percentage
        if passing_yards is not None:
            self.passing_yards = passing_yards
        if passing_yards_per_attempt is not None:
            self.passing_yards_per_attempt = passing_yards_per_attempt
        if passing_touchdowns is not None:
            self.passing_touchdowns = passing_touchdowns
        if passing_t_ds is not None:
            self.passing_t_ds = passing_t_ds
        if interceptions is not None:
            self.interceptions = interceptions
        if red_zone_attempts is not None:
            self.red_zone_attempts = red_zone_attempts
        if red_zone_completion_percentage is not None:
            self.red_zone_completion_percentage = red_zone_completion_percentage
        if deep_ball_attempts is not None:
            self.deep_ball_attempts = deep_ball_attempts
        if deep_ball_completions is not None:
            self.deep_ball_completions = deep_ball_completions
        if carries is not None:
            self.carries = carries
        if rushing_yards is not None:
            self.rushing_yards = rushing_yards
        if rushing_touchdowns is not None:
            self.rushing_touchdowns = rushing_touchdowns
        if targets is not None:
            self.targets = targets
        if receptions is not None:
            self.receptions = receptions
        if receiving_yards is not None:
            self.receiving_yards = receiving_yards
        if receiving_touchdowns is not None:
            self.receiving_touchdowns = receiving_touchdowns
        if total_yards is not None:
            self.total_yards = total_yards
        if total_touches is not None:
            self.total_touches = total_touches
        if yards_per_touch is not None:
            self.yards_per_touch = yards_per_touch
        if opportunities is not None:
            self.opportunities = opportunities
        if opportunity_share is not None:
            self.opportunity_share = opportunity_share
        if total_touchdowns is not None:
            self.total_touchdowns = total_touchdowns
        if evaded_tackles is not None:
            self.evaded_tackles = evaded_tackles
        if juke_rate is not None:
            self.juke_rate = juke_rate
        if catch_rate is not None:
            self.catch_rate = catch_rate
        if target_share is not None:
            self.target_share = target_share
        if hog_rate is not None:
            self.hog_rate = hog_rate
        if contested_targets is not None:
            self.contested_targets = contested_targets
        if contested_catches is not None:
            self.contested_catches = contested_catches
        if red_zone_carries is not None:
            self.red_zone_carries = red_zone_carries
        if red_zone_targets is not None:
            self.red_zone_targets = red_zone_targets
        if red_zone_opportunities is not None:
            self.red_zone_opportunities = red_zone_opportunities
        if red_zone_touches is not None:
            self.red_zone_touches = red_zone_touches
        if red_zone_receptions is not None:
            self.red_zone_receptions = red_zone_receptions
        if red_zone_catch_rate is not None:
            self.red_zone_catch_rate = red_zone_catch_rate
        if yards_per_carry is not None:
            self.yards_per_carry = yards_per_carry
        if yards_per_target is not None:
            self.yards_per_target = yards_per_target
        if yards_per_opportunity is not None:
            self.yards_per_opportunity = yards_per_opportunity
        if yards_per_reception is not None:
            self.yards_per_reception = yards_per_reception
        if end_zone_targets is not None:
            self.end_zone_targets = end_zone_targets
        if routes_run is not None:
            self.routes_run = routes_run
        if burns is not None:
            self.burns = burns
        if hurries is not None:
            self.hurries = hurries
        if yards_created is not None:
            self.yards_created = yards_created
        if pass_attempts_inside5 is not None:
            self.pass_attempts_inside5 = pass_attempts_inside5
        if pass_attempts_inside10 is not None:
            self.pass_attempts_inside10 = pass_attempts_inside10
        if carries_inside5 is not None:
            self.carries_inside5 = carries_inside5
        if carries_inside10 is not None:
            self.carries_inside10 = carries_inside10
        if targets_inside5 is not None:
            self.targets_inside5 = targets_inside5
        if targets_inside10 is not None:
            self.targets_inside10 = targets_inside10
        if primary_corner is not None:
            self.primary_corner = primary_corner
        if routes_defended is not None:
            self.routes_defended = routes_defended
        if targets_allowed is not None:
            self.targets_allowed = targets_allowed
        if receptions_allowed is not None:
            self.receptions_allowed = receptions_allowed
        if yards_allowed is not None:
            self.yards_allowed = yards_allowed
        if burns_cb is not None:
            self.burns_cb = burns_cb
        if pass_breakups is not None:
            self.pass_breakups = pass_breakups
        if interceptions_cb is not None:
            self.interceptions_cb = interceptions_cb
        if wr_matchup is not None:
            self.wr_matchup = wr_matchup
        if fantasy_points is not None:
            self.fantasy_points = fantasy_points
        if fantasy_points_rank is not None:
            self.fantasy_points_rank = fantasy_points_rank
        if fantasy_points_per_attempt is not None:
            self.fantasy_points_per_attempt = fantasy_points_per_attempt
        if fantasy_points_per_target is not None:
            self.fantasy_points_per_target = fantasy_points_per_target
        if fantasy_points_per_opportunity is not None:
            self.fantasy_points_per_opportunity = fantasy_points_per_opportunity
        if fantasy_points_allowed is not None:
            self.fantasy_points_allowed = fantasy_points_allowed
        if fantasy_points_allowed_week_rank is not None:
            self.fantasy_points_allowed_week_rank = fantasy_points_allowed_week_rank

    @property
    def player_id(self):
        """Gets the player_id of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The player_id of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this NflAdvancedMetricsAdvancedPlayerGame.


        :param player_id: The player_id of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: int
        """

        self._player_id = player_id

    @property
    def name(self):
        """Gets the name of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The name of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NflAdvancedMetricsAdvancedPlayerGame.


        :param name: The name of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def team_id(self):
        """Gets the team_id of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The team_id of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this NflAdvancedMetricsAdvancedPlayerGame.


        :param team_id: The team_id of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: int
        """

        self._team_id = team_id

    @property
    def team(self):
        """Gets the team of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The team of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this NflAdvancedMetricsAdvancedPlayerGame.


        :param team: The team of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: str
        """

        self._team = team

    @property
    def position(self):
        """Gets the position of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The position of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this NflAdvancedMetricsAdvancedPlayerGame.


        :param position: The position of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: str
        """

        self._position = position

    @property
    def fantasy_position(self):
        """Gets the fantasy_position of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The fantasy_position of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._fantasy_position

    @fantasy_position.setter
    def fantasy_position(self, fantasy_position):
        """Sets the fantasy_position of this NflAdvancedMetricsAdvancedPlayerGame.


        :param fantasy_position: The fantasy_position of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: str
        """

        self._fantasy_position = fantasy_position

    @property
    def position_group(self):
        """Gets the position_group of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The position_group of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._position_group

    @position_group.setter
    def position_group(self, position_group):
        """Sets the position_group of this NflAdvancedMetricsAdvancedPlayerGame.


        :param position_group: The position_group of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: str
        """

        self._position_group = position_group

    @property
    def season(self):
        """Gets the season of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The season of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this NflAdvancedMetricsAdvancedPlayerGame.


        :param season: The season of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The season_type of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this NflAdvancedMetricsAdvancedPlayerGame.


        :param season_type: The season_type of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: int
        """

        self._season_type = season_type

    @property
    def week(self):
        """Gets the week of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The week of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this NflAdvancedMetricsAdvancedPlayerGame.


        :param week: The week of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: int
        """

        self._week = week

    @property
    def opponent(self):
        """Gets the opponent of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The opponent of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._opponent

    @opponent.setter
    def opponent(self, opponent):
        """Sets the opponent of this NflAdvancedMetricsAdvancedPlayerGame.


        :param opponent: The opponent of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: str
        """

        self._opponent = opponent

    @property
    def opponent_id(self):
        """Gets the opponent_id of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The opponent_id of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._opponent_id

    @opponent_id.setter
    def opponent_id(self, opponent_id):
        """Sets the opponent_id of this NflAdvancedMetricsAdvancedPlayerGame.


        :param opponent_id: The opponent_id of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: int
        """

        self._opponent_id = opponent_id

    @property
    def snaps(self):
        """Gets the snaps of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The snaps of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._snaps

    @snaps.setter
    def snaps(self, snaps):
        """Sets the snaps of this NflAdvancedMetricsAdvancedPlayerGame.


        :param snaps: The snaps of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._snaps = snaps

    @property
    def snap_share(self):
        """Gets the snap_share of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The snap_share of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._snap_share

    @snap_share.setter
    def snap_share(self, snap_share):
        """Sets the snap_share of this NflAdvancedMetricsAdvancedPlayerGame.


        :param snap_share: The snap_share of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._snap_share = snap_share

    @property
    def passing_attempts(self):
        """Gets the passing_attempts of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The passing_attempts of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_attempts

    @passing_attempts.setter
    def passing_attempts(self, passing_attempts):
        """Sets the passing_attempts of this NflAdvancedMetricsAdvancedPlayerGame.


        :param passing_attempts: The passing_attempts of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_attempts = passing_attempts

    @property
    def completions(self):
        """Gets the completions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The completions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._completions

    @completions.setter
    def completions(self, completions):
        """Sets the completions of this NflAdvancedMetricsAdvancedPlayerGame.


        :param completions: The completions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._completions = completions

    @property
    def completion_percentage(self):
        """Gets the completion_percentage of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The completion_percentage of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._completion_percentage

    @completion_percentage.setter
    def completion_percentage(self, completion_percentage):
        """Sets the completion_percentage of this NflAdvancedMetricsAdvancedPlayerGame.


        :param completion_percentage: The completion_percentage of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._completion_percentage = completion_percentage

    @property
    def passing_yards(self):
        """Gets the passing_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The passing_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_yards

    @passing_yards.setter
    def passing_yards(self, passing_yards):
        """Sets the passing_yards of this NflAdvancedMetricsAdvancedPlayerGame.


        :param passing_yards: The passing_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_yards = passing_yards

    @property
    def passing_yards_per_attempt(self):
        """Gets the passing_yards_per_attempt of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The passing_yards_per_attempt of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_yards_per_attempt

    @passing_yards_per_attempt.setter
    def passing_yards_per_attempt(self, passing_yards_per_attempt):
        """Sets the passing_yards_per_attempt of this NflAdvancedMetricsAdvancedPlayerGame.


        :param passing_yards_per_attempt: The passing_yards_per_attempt of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_yards_per_attempt = passing_yards_per_attempt

    @property
    def passing_touchdowns(self):
        """Gets the passing_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The passing_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_touchdowns

    @passing_touchdowns.setter
    def passing_touchdowns(self, passing_touchdowns):
        """Sets the passing_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.


        :param passing_touchdowns: The passing_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_touchdowns = passing_touchdowns

    @property
    def passing_t_ds(self):
        """Gets the passing_t_ds of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The passing_t_ds of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_t_ds

    @passing_t_ds.setter
    def passing_t_ds(self, passing_t_ds):
        """Sets the passing_t_ds of this NflAdvancedMetricsAdvancedPlayerGame.


        :param passing_t_ds: The passing_t_ds of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_t_ds = passing_t_ds

    @property
    def interceptions(self):
        """Gets the interceptions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The interceptions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._interceptions

    @interceptions.setter
    def interceptions(self, interceptions):
        """Sets the interceptions of this NflAdvancedMetricsAdvancedPlayerGame.


        :param interceptions: The interceptions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._interceptions = interceptions

    @property
    def red_zone_attempts(self):
        """Gets the red_zone_attempts of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The red_zone_attempts of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._red_zone_attempts

    @red_zone_attempts.setter
    def red_zone_attempts(self, red_zone_attempts):
        """Sets the red_zone_attempts of this NflAdvancedMetricsAdvancedPlayerGame.


        :param red_zone_attempts: The red_zone_attempts of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._red_zone_attempts = red_zone_attempts

    @property
    def red_zone_completion_percentage(self):
        """Gets the red_zone_completion_percentage of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The red_zone_completion_percentage of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._red_zone_completion_percentage

    @red_zone_completion_percentage.setter
    def red_zone_completion_percentage(self, red_zone_completion_percentage):
        """Sets the red_zone_completion_percentage of this NflAdvancedMetricsAdvancedPlayerGame.


        :param red_zone_completion_percentage: The red_zone_completion_percentage of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._red_zone_completion_percentage = red_zone_completion_percentage

    @property
    def deep_ball_attempts(self):
        """Gets the deep_ball_attempts of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The deep_ball_attempts of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._deep_ball_attempts

    @deep_ball_attempts.setter
    def deep_ball_attempts(self, deep_ball_attempts):
        """Sets the deep_ball_attempts of this NflAdvancedMetricsAdvancedPlayerGame.


        :param deep_ball_attempts: The deep_ball_attempts of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._deep_ball_attempts = deep_ball_attempts

    @property
    def deep_ball_completions(self):
        """Gets the deep_ball_completions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The deep_ball_completions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._deep_ball_completions

    @deep_ball_completions.setter
    def deep_ball_completions(self, deep_ball_completions):
        """Sets the deep_ball_completions of this NflAdvancedMetricsAdvancedPlayerGame.


        :param deep_ball_completions: The deep_ball_completions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._deep_ball_completions = deep_ball_completions

    @property
    def carries(self):
        """Gets the carries of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The carries of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._carries

    @carries.setter
    def carries(self, carries):
        """Sets the carries of this NflAdvancedMetricsAdvancedPlayerGame.


        :param carries: The carries of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._carries = carries

    @property
    def rushing_yards(self):
        """Gets the rushing_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The rushing_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._rushing_yards

    @rushing_yards.setter
    def rushing_yards(self, rushing_yards):
        """Sets the rushing_yards of this NflAdvancedMetricsAdvancedPlayerGame.


        :param rushing_yards: The rushing_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._rushing_yards = rushing_yards

    @property
    def rushing_touchdowns(self):
        """Gets the rushing_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The rushing_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._rushing_touchdowns

    @rushing_touchdowns.setter
    def rushing_touchdowns(self, rushing_touchdowns):
        """Sets the rushing_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.


        :param rushing_touchdowns: The rushing_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._rushing_touchdowns = rushing_touchdowns

    @property
    def targets(self):
        """Gets the targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._targets

    @targets.setter
    def targets(self, targets):
        """Sets the targets of this NflAdvancedMetricsAdvancedPlayerGame.


        :param targets: The targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._targets = targets

    @property
    def receptions(self):
        """Gets the receptions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The receptions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._receptions

    @receptions.setter
    def receptions(self, receptions):
        """Sets the receptions of this NflAdvancedMetricsAdvancedPlayerGame.


        :param receptions: The receptions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._receptions = receptions

    @property
    def receiving_yards(self):
        """Gets the receiving_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The receiving_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._receiving_yards

    @receiving_yards.setter
    def receiving_yards(self, receiving_yards):
        """Sets the receiving_yards of this NflAdvancedMetricsAdvancedPlayerGame.


        :param receiving_yards: The receiving_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._receiving_yards = receiving_yards

    @property
    def receiving_touchdowns(self):
        """Gets the receiving_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The receiving_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._receiving_touchdowns

    @receiving_touchdowns.setter
    def receiving_touchdowns(self, receiving_touchdowns):
        """Sets the receiving_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.


        :param receiving_touchdowns: The receiving_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._receiving_touchdowns = receiving_touchdowns

    @property
    def total_yards(self):
        """Gets the total_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The total_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_yards

    @total_yards.setter
    def total_yards(self, total_yards):
        """Sets the total_yards of this NflAdvancedMetricsAdvancedPlayerGame.


        :param total_yards: The total_yards of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_yards = total_yards

    @property
    def total_touches(self):
        """Gets the total_touches of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The total_touches of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_touches

    @total_touches.setter
    def total_touches(self, total_touches):
        """Sets the total_touches of this NflAdvancedMetricsAdvancedPlayerGame.


        :param total_touches: The total_touches of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_touches = total_touches

    @property
    def yards_per_touch(self):
        """Gets the yards_per_touch of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The yards_per_touch of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._yards_per_touch

    @yards_per_touch.setter
    def yards_per_touch(self, yards_per_touch):
        """Sets the yards_per_touch of this NflAdvancedMetricsAdvancedPlayerGame.


        :param yards_per_touch: The yards_per_touch of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._yards_per_touch = yards_per_touch

    @property
    def opportunities(self):
        """Gets the opportunities of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The opportunities of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._opportunities

    @opportunities.setter
    def opportunities(self, opportunities):
        """Sets the opportunities of this NflAdvancedMetricsAdvancedPlayerGame.


        :param opportunities: The opportunities of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._opportunities = opportunities

    @property
    def opportunity_share(self):
        """Gets the opportunity_share of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The opportunity_share of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._opportunity_share

    @opportunity_share.setter
    def opportunity_share(self, opportunity_share):
        """Sets the opportunity_share of this NflAdvancedMetricsAdvancedPlayerGame.


        :param opportunity_share: The opportunity_share of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._opportunity_share = opportunity_share

    @property
    def total_touchdowns(self):
        """Gets the total_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The total_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_touchdowns

    @total_touchdowns.setter
    def total_touchdowns(self, total_touchdowns):
        """Sets the total_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.


        :param total_touchdowns: The total_touchdowns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_touchdowns = total_touchdowns

    @property
    def evaded_tackles(self):
        """Gets the evaded_tackles of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The evaded_tackles of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._evaded_tackles

    @evaded_tackles.setter
    def evaded_tackles(self, evaded_tackles):
        """Sets the evaded_tackles of this NflAdvancedMetricsAdvancedPlayerGame.


        :param evaded_tackles: The evaded_tackles of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._evaded_tackles = evaded_tackles

    @property
    def juke_rate(self):
        """Gets the juke_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The juke_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._juke_rate

    @juke_rate.setter
    def juke_rate(self, juke_rate):
        """Sets the juke_rate of this NflAdvancedMetricsAdvancedPlayerGame.


        :param juke_rate: The juke_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._juke_rate = juke_rate

    @property
    def catch_rate(self):
        """Gets the catch_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The catch_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._catch_rate

    @catch_rate.setter
    def catch_rate(self, catch_rate):
        """Sets the catch_rate of this NflAdvancedMetricsAdvancedPlayerGame.


        :param catch_rate: The catch_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._catch_rate = catch_rate

    @property
    def target_share(self):
        """Gets the target_share of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The target_share of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._target_share

    @target_share.setter
    def target_share(self, target_share):
        """Sets the target_share of this NflAdvancedMetricsAdvancedPlayerGame.


        :param target_share: The target_share of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._target_share = target_share

    @property
    def hog_rate(self):
        """Gets the hog_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The hog_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._hog_rate

    @hog_rate.setter
    def hog_rate(self, hog_rate):
        """Sets the hog_rate of this NflAdvancedMetricsAdvancedPlayerGame.


        :param hog_rate: The hog_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._hog_rate = hog_rate

    @property
    def contested_targets(self):
        """Gets the contested_targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The contested_targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._contested_targets

    @contested_targets.setter
    def contested_targets(self, contested_targets):
        """Sets the contested_targets of this NflAdvancedMetricsAdvancedPlayerGame.


        :param contested_targets: The contested_targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._contested_targets = contested_targets

    @property
    def contested_catches(self):
        """Gets the contested_catches of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The contested_catches of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._contested_catches

    @contested_catches.setter
    def contested_catches(self, contested_catches):
        """Sets the contested_catches of this NflAdvancedMetricsAdvancedPlayerGame.


        :param contested_catches: The contested_catches of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._contested_catches = contested_catches

    @property
    def red_zone_carries(self):
        """Gets the red_zone_carries of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The red_zone_carries of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._red_zone_carries

    @red_zone_carries.setter
    def red_zone_carries(self, red_zone_carries):
        """Sets the red_zone_carries of this NflAdvancedMetricsAdvancedPlayerGame.


        :param red_zone_carries: The red_zone_carries of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._red_zone_carries = red_zone_carries

    @property
    def red_zone_targets(self):
        """Gets the red_zone_targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The red_zone_targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._red_zone_targets

    @red_zone_targets.setter
    def red_zone_targets(self, red_zone_targets):
        """Sets the red_zone_targets of this NflAdvancedMetricsAdvancedPlayerGame.


        :param red_zone_targets: The red_zone_targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._red_zone_targets = red_zone_targets

    @property
    def red_zone_opportunities(self):
        """Gets the red_zone_opportunities of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The red_zone_opportunities of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._red_zone_opportunities

    @red_zone_opportunities.setter
    def red_zone_opportunities(self, red_zone_opportunities):
        """Sets the red_zone_opportunities of this NflAdvancedMetricsAdvancedPlayerGame.


        :param red_zone_opportunities: The red_zone_opportunities of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._red_zone_opportunities = red_zone_opportunities

    @property
    def red_zone_touches(self):
        """Gets the red_zone_touches of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The red_zone_touches of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._red_zone_touches

    @red_zone_touches.setter
    def red_zone_touches(self, red_zone_touches):
        """Sets the red_zone_touches of this NflAdvancedMetricsAdvancedPlayerGame.


        :param red_zone_touches: The red_zone_touches of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._red_zone_touches = red_zone_touches

    @property
    def red_zone_receptions(self):
        """Gets the red_zone_receptions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The red_zone_receptions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._red_zone_receptions

    @red_zone_receptions.setter
    def red_zone_receptions(self, red_zone_receptions):
        """Sets the red_zone_receptions of this NflAdvancedMetricsAdvancedPlayerGame.


        :param red_zone_receptions: The red_zone_receptions of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._red_zone_receptions = red_zone_receptions

    @property
    def red_zone_catch_rate(self):
        """Gets the red_zone_catch_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The red_zone_catch_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._red_zone_catch_rate

    @red_zone_catch_rate.setter
    def red_zone_catch_rate(self, red_zone_catch_rate):
        """Sets the red_zone_catch_rate of this NflAdvancedMetricsAdvancedPlayerGame.


        :param red_zone_catch_rate: The red_zone_catch_rate of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._red_zone_catch_rate = red_zone_catch_rate

    @property
    def yards_per_carry(self):
        """Gets the yards_per_carry of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The yards_per_carry of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._yards_per_carry

    @yards_per_carry.setter
    def yards_per_carry(self, yards_per_carry):
        """Sets the yards_per_carry of this NflAdvancedMetricsAdvancedPlayerGame.


        :param yards_per_carry: The yards_per_carry of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._yards_per_carry = yards_per_carry

    @property
    def yards_per_target(self):
        """Gets the yards_per_target of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The yards_per_target of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._yards_per_target

    @yards_per_target.setter
    def yards_per_target(self, yards_per_target):
        """Sets the yards_per_target of this NflAdvancedMetricsAdvancedPlayerGame.


        :param yards_per_target: The yards_per_target of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._yards_per_target = yards_per_target

    @property
    def yards_per_opportunity(self):
        """Gets the yards_per_opportunity of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The yards_per_opportunity of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._yards_per_opportunity

    @yards_per_opportunity.setter
    def yards_per_opportunity(self, yards_per_opportunity):
        """Sets the yards_per_opportunity of this NflAdvancedMetricsAdvancedPlayerGame.


        :param yards_per_opportunity: The yards_per_opportunity of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._yards_per_opportunity = yards_per_opportunity

    @property
    def yards_per_reception(self):
        """Gets the yards_per_reception of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The yards_per_reception of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._yards_per_reception

    @yards_per_reception.setter
    def yards_per_reception(self, yards_per_reception):
        """Sets the yards_per_reception of this NflAdvancedMetricsAdvancedPlayerGame.


        :param yards_per_reception: The yards_per_reception of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._yards_per_reception = yards_per_reception

    @property
    def end_zone_targets(self):
        """Gets the end_zone_targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The end_zone_targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._end_zone_targets

    @end_zone_targets.setter
    def end_zone_targets(self, end_zone_targets):
        """Sets the end_zone_targets of this NflAdvancedMetricsAdvancedPlayerGame.


        :param end_zone_targets: The end_zone_targets of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._end_zone_targets = end_zone_targets

    @property
    def routes_run(self):
        """Gets the routes_run of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The routes_run of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._routes_run

    @routes_run.setter
    def routes_run(self, routes_run):
        """Sets the routes_run of this NflAdvancedMetricsAdvancedPlayerGame.


        :param routes_run: The routes_run of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._routes_run = routes_run

    @property
    def burns(self):
        """Gets the burns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The burns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._burns

    @burns.setter
    def burns(self, burns):
        """Sets the burns of this NflAdvancedMetricsAdvancedPlayerGame.


        :param burns: The burns of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._burns = burns

    @property
    def hurries(self):
        """Gets the hurries of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The hurries of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._hurries

    @hurries.setter
    def hurries(self, hurries):
        """Sets the hurries of this NflAdvancedMetricsAdvancedPlayerGame.


        :param hurries: The hurries of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._hurries = hurries

    @property
    def yards_created(self):
        """Gets the yards_created of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The yards_created of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._yards_created

    @yards_created.setter
    def yards_created(self, yards_created):
        """Sets the yards_created of this NflAdvancedMetricsAdvancedPlayerGame.


        :param yards_created: The yards_created of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._yards_created = yards_created

    @property
    def pass_attempts_inside5(self):
        """Gets the pass_attempts_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The pass_attempts_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._pass_attempts_inside5

    @pass_attempts_inside5.setter
    def pass_attempts_inside5(self, pass_attempts_inside5):
        """Sets the pass_attempts_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.


        :param pass_attempts_inside5: The pass_attempts_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._pass_attempts_inside5 = pass_attempts_inside5

    @property
    def pass_attempts_inside10(self):
        """Gets the pass_attempts_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The pass_attempts_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._pass_attempts_inside10

    @pass_attempts_inside10.setter
    def pass_attempts_inside10(self, pass_attempts_inside10):
        """Sets the pass_attempts_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.


        :param pass_attempts_inside10: The pass_attempts_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._pass_attempts_inside10 = pass_attempts_inside10

    @property
    def carries_inside5(self):
        """Gets the carries_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The carries_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._carries_inside5

    @carries_inside5.setter
    def carries_inside5(self, carries_inside5):
        """Sets the carries_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.


        :param carries_inside5: The carries_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._carries_inside5 = carries_inside5

    @property
    def carries_inside10(self):
        """Gets the carries_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The carries_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._carries_inside10

    @carries_inside10.setter
    def carries_inside10(self, carries_inside10):
        """Sets the carries_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.


        :param carries_inside10: The carries_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._carries_inside10 = carries_inside10

    @property
    def targets_inside5(self):
        """Gets the targets_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The targets_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._targets_inside5

    @targets_inside5.setter
    def targets_inside5(self, targets_inside5):
        """Sets the targets_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.


        :param targets_inside5: The targets_inside5 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._targets_inside5 = targets_inside5

    @property
    def targets_inside10(self):
        """Gets the targets_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The targets_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._targets_inside10

    @targets_inside10.setter
    def targets_inside10(self, targets_inside10):
        """Sets the targets_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.


        :param targets_inside10: The targets_inside10 of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._targets_inside10 = targets_inside10

    @property
    def primary_corner(self):
        """Gets the primary_corner of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The primary_corner of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._primary_corner

    @primary_corner.setter
    def primary_corner(self, primary_corner):
        """Sets the primary_corner of this NflAdvancedMetricsAdvancedPlayerGame.


        :param primary_corner: The primary_corner of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._primary_corner = primary_corner

    @property
    def routes_defended(self):
        """Gets the routes_defended of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The routes_defended of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._routes_defended

    @routes_defended.setter
    def routes_defended(self, routes_defended):
        """Sets the routes_defended of this NflAdvancedMetricsAdvancedPlayerGame.


        :param routes_defended: The routes_defended of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._routes_defended = routes_defended

    @property
    def targets_allowed(self):
        """Gets the targets_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The targets_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._targets_allowed

    @targets_allowed.setter
    def targets_allowed(self, targets_allowed):
        """Sets the targets_allowed of this NflAdvancedMetricsAdvancedPlayerGame.


        :param targets_allowed: The targets_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._targets_allowed = targets_allowed

    @property
    def receptions_allowed(self):
        """Gets the receptions_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The receptions_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._receptions_allowed

    @receptions_allowed.setter
    def receptions_allowed(self, receptions_allowed):
        """Sets the receptions_allowed of this NflAdvancedMetricsAdvancedPlayerGame.


        :param receptions_allowed: The receptions_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._receptions_allowed = receptions_allowed

    @property
    def yards_allowed(self):
        """Gets the yards_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The yards_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._yards_allowed

    @yards_allowed.setter
    def yards_allowed(self, yards_allowed):
        """Sets the yards_allowed of this NflAdvancedMetricsAdvancedPlayerGame.


        :param yards_allowed: The yards_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._yards_allowed = yards_allowed

    @property
    def burns_cb(self):
        """Gets the burns_cb of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The burns_cb of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._burns_cb

    @burns_cb.setter
    def burns_cb(self, burns_cb):
        """Sets the burns_cb of this NflAdvancedMetricsAdvancedPlayerGame.


        :param burns_cb: The burns_cb of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._burns_cb = burns_cb

    @property
    def pass_breakups(self):
        """Gets the pass_breakups of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The pass_breakups of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._pass_breakups

    @pass_breakups.setter
    def pass_breakups(self, pass_breakups):
        """Sets the pass_breakups of this NflAdvancedMetricsAdvancedPlayerGame.


        :param pass_breakups: The pass_breakups of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._pass_breakups = pass_breakups

    @property
    def interceptions_cb(self):
        """Gets the interceptions_cb of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The interceptions_cb of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._interceptions_cb

    @interceptions_cb.setter
    def interceptions_cb(self, interceptions_cb):
        """Sets the interceptions_cb of this NflAdvancedMetricsAdvancedPlayerGame.


        :param interceptions_cb: The interceptions_cb of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._interceptions_cb = interceptions_cb

    @property
    def wr_matchup(self):
        """Gets the wr_matchup of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The wr_matchup of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._wr_matchup

    @wr_matchup.setter
    def wr_matchup(self, wr_matchup):
        """Sets the wr_matchup of this NflAdvancedMetricsAdvancedPlayerGame.


        :param wr_matchup: The wr_matchup of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._wr_matchup = wr_matchup

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The fantasy_points of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this NflAdvancedMetricsAdvancedPlayerGame.


        :param fantasy_points: The fantasy_points of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._fantasy_points = fantasy_points

    @property
    def fantasy_points_rank(self):
        """Gets the fantasy_points_rank of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The fantasy_points_rank of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._fantasy_points_rank

    @fantasy_points_rank.setter
    def fantasy_points_rank(self, fantasy_points_rank):
        """Sets the fantasy_points_rank of this NflAdvancedMetricsAdvancedPlayerGame.


        :param fantasy_points_rank: The fantasy_points_rank of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: int
        """

        self._fantasy_points_rank = fantasy_points_rank

    @property
    def fantasy_points_per_attempt(self):
        """Gets the fantasy_points_per_attempt of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The fantasy_points_per_attempt of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points_per_attempt

    @fantasy_points_per_attempt.setter
    def fantasy_points_per_attempt(self, fantasy_points_per_attempt):
        """Sets the fantasy_points_per_attempt of this NflAdvancedMetricsAdvancedPlayerGame.


        :param fantasy_points_per_attempt: The fantasy_points_per_attempt of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._fantasy_points_per_attempt = fantasy_points_per_attempt

    @property
    def fantasy_points_per_target(self):
        """Gets the fantasy_points_per_target of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The fantasy_points_per_target of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points_per_target

    @fantasy_points_per_target.setter
    def fantasy_points_per_target(self, fantasy_points_per_target):
        """Sets the fantasy_points_per_target of this NflAdvancedMetricsAdvancedPlayerGame.


        :param fantasy_points_per_target: The fantasy_points_per_target of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._fantasy_points_per_target = fantasy_points_per_target

    @property
    def fantasy_points_per_opportunity(self):
        """Gets the fantasy_points_per_opportunity of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The fantasy_points_per_opportunity of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points_per_opportunity

    @fantasy_points_per_opportunity.setter
    def fantasy_points_per_opportunity(self, fantasy_points_per_opportunity):
        """Sets the fantasy_points_per_opportunity of this NflAdvancedMetricsAdvancedPlayerGame.


        :param fantasy_points_per_opportunity: The fantasy_points_per_opportunity of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._fantasy_points_per_opportunity = fantasy_points_per_opportunity

    @property
    def fantasy_points_allowed(self):
        """Gets the fantasy_points_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The fantasy_points_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points_allowed

    @fantasy_points_allowed.setter
    def fantasy_points_allowed(self, fantasy_points_allowed):
        """Sets the fantasy_points_allowed of this NflAdvancedMetricsAdvancedPlayerGame.


        :param fantasy_points_allowed: The fantasy_points_allowed of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: float
        """

        self._fantasy_points_allowed = fantasy_points_allowed

    @property
    def fantasy_points_allowed_week_rank(self):
        """Gets the fantasy_points_allowed_week_rank of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501


        :return: The fantasy_points_allowed_week_rank of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._fantasy_points_allowed_week_rank

    @fantasy_points_allowed_week_rank.setter
    def fantasy_points_allowed_week_rank(self, fantasy_points_allowed_week_rank):
        """Sets the fantasy_points_allowed_week_rank of this NflAdvancedMetricsAdvancedPlayerGame.


        :param fantasy_points_allowed_week_rank: The fantasy_points_allowed_week_rank of this NflAdvancedMetricsAdvancedPlayerGame.  # noqa: E501
        :type: int
        """

        self._fantasy_points_allowed_week_rank = fantasy_points_allowed_week_rank

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NflAdvancedMetricsAdvancedPlayerGame, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NflAdvancedMetricsAdvancedPlayerGame):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
