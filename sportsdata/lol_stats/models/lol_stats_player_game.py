# coding: utf-8

"""
    LoL v3 Stats

    LoL v3 Stats  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class LolStatsPlayerGame(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'game_id': 'int',
        'opponent_id': 'int',
        'opponent': 'str',
        'day': 'str',
        'date_time': 'str',
        'position': 'str',
        'player_id': 'int',
        'team_id': 'int',
        'team': 'str',
        'name': 'str',
        'match_name': 'str',
        'kills': 'float',
        'assists': 'float',
        'deaths': 'float',
        'largest_killing_spree': 'float',
        'largest_multi_kill': 'float',
        'killing_spree': 'float',
        'longest_time_spent_living': 'float',
        'double_kills': 'float',
        'triple_kills': 'float',
        'quadra_kills': 'float',
        'penta_kills': 'float',
        'unreal_kills': 'float',
        'total_damage_dealt': 'float',
        'magic_damage_dealt': 'float',
        'physical_damage_dealt': 'float',
        'true_damage_dealt': 'float',
        'largest_critical_strike': 'float',
        'total_damage_dealt_to_champions': 'float',
        'magic_damage_dealt_to_champions': 'float',
        'physical_damage_dealt_to_champions': 'float',
        'true_damage_dealt_to_champions': 'float',
        'total_heal': 'float',
        'total_units_healed': 'float',
        'total_damage_taken': 'float',
        'magic_damage_taken': 'float',
        'physical_damage_taken': 'float',
        'true_damage_taken': 'float',
        'gold_earned': 'float',
        'gold_spent': 'float',
        'turret_kills': 'float',
        'inhibitor_kills': 'float',
        'total_minions_killed': 'float',
        'neutral_minions_k_illed': 'float',
        'neutral_minions_k_illed_team_jungle': 'float',
        'neutral_minions_killed_enemy_jungle': 'float',
        'total_time_crowd_control_dealt': 'float',
        'vision_wards_bought_in_game': 'float',
        'sight_wards_bought_in_game': 'float',
        'wards_placed': 'float',
        'wards_killed': 'float',
        'combat_player_score': 'float',
        'objective_player_score': 'float',
        'total_player_score': 'float',
        'fantasy_points': 'float',
        'ten_kills_or_assists': 'float',
        'updated': 'str',
        'games': 'int',
        'matches': 'int',
        'is_closed': 'bool'
    }

    attribute_map = {
        'game_id': 'GameId',
        'opponent_id': 'OpponentId',
        'opponent': 'Opponent',
        'day': 'Day',
        'date_time': 'DateTime',
        'position': 'Position',
        'player_id': 'PlayerId',
        'team_id': 'TeamId',
        'team': 'Team',
        'name': 'Name',
        'match_name': 'MatchName',
        'kills': 'Kills',
        'assists': 'Assists',
        'deaths': 'Deaths',
        'largest_killing_spree': 'LargestKillingSpree',
        'largest_multi_kill': 'LargestMultiKill',
        'killing_spree': 'KillingSpree',
        'longest_time_spent_living': 'LongestTimeSpentLiving',
        'double_kills': 'DoubleKills',
        'triple_kills': 'TripleKills',
        'quadra_kills': 'QuadraKills',
        'penta_kills': 'PentaKills',
        'unreal_kills': 'UnrealKills',
        'total_damage_dealt': 'TotalDamageDealt',
        'magic_damage_dealt': 'MagicDamageDealt',
        'physical_damage_dealt': 'PhysicalDamageDealt',
        'true_damage_dealt': 'TrueDamageDealt',
        'largest_critical_strike': 'LargestCriticalStrike',
        'total_damage_dealt_to_champions': 'TotalDamageDealtToChampions',
        'magic_damage_dealt_to_champions': 'MagicDamageDealtToChampions',
        'physical_damage_dealt_to_champions': 'PhysicalDamageDealtToChampions',
        'true_damage_dealt_to_champions': 'TrueDamageDealtToChampions',
        'total_heal': 'TotalHeal',
        'total_units_healed': 'TotalUnitsHealed',
        'total_damage_taken': 'TotalDamageTaken',
        'magic_damage_taken': 'MagicDamageTaken',
        'physical_damage_taken': 'PhysicalDamageTaken',
        'true_damage_taken': 'TrueDamageTaken',
        'gold_earned': 'GoldEarned',
        'gold_spent': 'GoldSpent',
        'turret_kills': 'TurretKills',
        'inhibitor_kills': 'InhibitorKills',
        'total_minions_killed': 'TotalMinionsKilled',
        'neutral_minions_k_illed': 'NeutralMinionsKIlled',
        'neutral_minions_k_illed_team_jungle': 'NeutralMinionsKIlledTeamJungle',
        'neutral_minions_killed_enemy_jungle': 'NeutralMinionsKilledEnemyJungle',
        'total_time_crowd_control_dealt': 'TotalTimeCrowdControlDealt',
        'vision_wards_bought_in_game': 'VisionWardsBoughtInGame',
        'sight_wards_bought_in_game': 'SightWardsBoughtInGame',
        'wards_placed': 'WardsPlaced',
        'wards_killed': 'WardsKilled',
        'combat_player_score': 'CombatPlayerScore',
        'objective_player_score': 'ObjectivePlayerScore',
        'total_player_score': 'TotalPlayerScore',
        'fantasy_points': 'FantasyPoints',
        'ten_kills_or_assists': 'TenKillsOrAssists',
        'updated': 'Updated',
        'games': 'Games',
        'matches': 'Matches',
        'is_closed': 'IsClosed'
    }

    def __init__(self, game_id=None, opponent_id=None, opponent=None, day=None, date_time=None, position=None, player_id=None, team_id=None, team=None, name=None, match_name=None, kills=None, assists=None, deaths=None, largest_killing_spree=None, largest_multi_kill=None, killing_spree=None, longest_time_spent_living=None, double_kills=None, triple_kills=None, quadra_kills=None, penta_kills=None, unreal_kills=None, total_damage_dealt=None, magic_damage_dealt=None, physical_damage_dealt=None, true_damage_dealt=None, largest_critical_strike=None, total_damage_dealt_to_champions=None, magic_damage_dealt_to_champions=None, physical_damage_dealt_to_champions=None, true_damage_dealt_to_champions=None, total_heal=None, total_units_healed=None, total_damage_taken=None, magic_damage_taken=None, physical_damage_taken=None, true_damage_taken=None, gold_earned=None, gold_spent=None, turret_kills=None, inhibitor_kills=None, total_minions_killed=None, neutral_minions_k_illed=None, neutral_minions_k_illed_team_jungle=None, neutral_minions_killed_enemy_jungle=None, total_time_crowd_control_dealt=None, vision_wards_bought_in_game=None, sight_wards_bought_in_game=None, wards_placed=None, wards_killed=None, combat_player_score=None, objective_player_score=None, total_player_score=None, fantasy_points=None, ten_kills_or_assists=None, updated=None, games=None, matches=None, is_closed=None):  # noqa: E501
        """LolStatsPlayerGame - a model defined in Swagger"""  # noqa: E501
        self._game_id = None
        self._opponent_id = None
        self._opponent = None
        self._day = None
        self._date_time = None
        self._position = None
        self._player_id = None
        self._team_id = None
        self._team = None
        self._name = None
        self._match_name = None
        self._kills = None
        self._assists = None
        self._deaths = None
        self._largest_killing_spree = None
        self._largest_multi_kill = None
        self._killing_spree = None
        self._longest_time_spent_living = None
        self._double_kills = None
        self._triple_kills = None
        self._quadra_kills = None
        self._penta_kills = None
        self._unreal_kills = None
        self._total_damage_dealt = None
        self._magic_damage_dealt = None
        self._physical_damage_dealt = None
        self._true_damage_dealt = None
        self._largest_critical_strike = None
        self._total_damage_dealt_to_champions = None
        self._magic_damage_dealt_to_champions = None
        self._physical_damage_dealt_to_champions = None
        self._true_damage_dealt_to_champions = None
        self._total_heal = None
        self._total_units_healed = None
        self._total_damage_taken = None
        self._magic_damage_taken = None
        self._physical_damage_taken = None
        self._true_damage_taken = None
        self._gold_earned = None
        self._gold_spent = None
        self._turret_kills = None
        self._inhibitor_kills = None
        self._total_minions_killed = None
        self._neutral_minions_k_illed = None
        self._neutral_minions_k_illed_team_jungle = None
        self._neutral_minions_killed_enemy_jungle = None
        self._total_time_crowd_control_dealt = None
        self._vision_wards_bought_in_game = None
        self._sight_wards_bought_in_game = None
        self._wards_placed = None
        self._wards_killed = None
        self._combat_player_score = None
        self._objective_player_score = None
        self._total_player_score = None
        self._fantasy_points = None
        self._ten_kills_or_assists = None
        self._updated = None
        self._games = None
        self._matches = None
        self._is_closed = None
        self.discriminator = None
        if game_id is not None:
            self.game_id = game_id
        if opponent_id is not None:
            self.opponent_id = opponent_id
        if opponent is not None:
            self.opponent = opponent
        if day is not None:
            self.day = day
        if date_time is not None:
            self.date_time = date_time
        if position is not None:
            self.position = position
        if player_id is not None:
            self.player_id = player_id
        if team_id is not None:
            self.team_id = team_id
        if team is not None:
            self.team = team
        if name is not None:
            self.name = name
        if match_name is not None:
            self.match_name = match_name
        if kills is not None:
            self.kills = kills
        if assists is not None:
            self.assists = assists
        if deaths is not None:
            self.deaths = deaths
        if largest_killing_spree is not None:
            self.largest_killing_spree = largest_killing_spree
        if largest_multi_kill is not None:
            self.largest_multi_kill = largest_multi_kill
        if killing_spree is not None:
            self.killing_spree = killing_spree
        if longest_time_spent_living is not None:
            self.longest_time_spent_living = longest_time_spent_living
        if double_kills is not None:
            self.double_kills = double_kills
        if triple_kills is not None:
            self.triple_kills = triple_kills
        if quadra_kills is not None:
            self.quadra_kills = quadra_kills
        if penta_kills is not None:
            self.penta_kills = penta_kills
        if unreal_kills is not None:
            self.unreal_kills = unreal_kills
        if total_damage_dealt is not None:
            self.total_damage_dealt = total_damage_dealt
        if magic_damage_dealt is not None:
            self.magic_damage_dealt = magic_damage_dealt
        if physical_damage_dealt is not None:
            self.physical_damage_dealt = physical_damage_dealt
        if true_damage_dealt is not None:
            self.true_damage_dealt = true_damage_dealt
        if largest_critical_strike is not None:
            self.largest_critical_strike = largest_critical_strike
        if total_damage_dealt_to_champions is not None:
            self.total_damage_dealt_to_champions = total_damage_dealt_to_champions
        if magic_damage_dealt_to_champions is not None:
            self.magic_damage_dealt_to_champions = magic_damage_dealt_to_champions
        if physical_damage_dealt_to_champions is not None:
            self.physical_damage_dealt_to_champions = physical_damage_dealt_to_champions
        if true_damage_dealt_to_champions is not None:
            self.true_damage_dealt_to_champions = true_damage_dealt_to_champions
        if total_heal is not None:
            self.total_heal = total_heal
        if total_units_healed is not None:
            self.total_units_healed = total_units_healed
        if total_damage_taken is not None:
            self.total_damage_taken = total_damage_taken
        if magic_damage_taken is not None:
            self.magic_damage_taken = magic_damage_taken
        if physical_damage_taken is not None:
            self.physical_damage_taken = physical_damage_taken
        if true_damage_taken is not None:
            self.true_damage_taken = true_damage_taken
        if gold_earned is not None:
            self.gold_earned = gold_earned
        if gold_spent is not None:
            self.gold_spent = gold_spent
        if turret_kills is not None:
            self.turret_kills = turret_kills
        if inhibitor_kills is not None:
            self.inhibitor_kills = inhibitor_kills
        if total_minions_killed is not None:
            self.total_minions_killed = total_minions_killed
        if neutral_minions_k_illed is not None:
            self.neutral_minions_k_illed = neutral_minions_k_illed
        if neutral_minions_k_illed_team_jungle is not None:
            self.neutral_minions_k_illed_team_jungle = neutral_minions_k_illed_team_jungle
        if neutral_minions_killed_enemy_jungle is not None:
            self.neutral_minions_killed_enemy_jungle = neutral_minions_killed_enemy_jungle
        if total_time_crowd_control_dealt is not None:
            self.total_time_crowd_control_dealt = total_time_crowd_control_dealt
        if vision_wards_bought_in_game is not None:
            self.vision_wards_bought_in_game = vision_wards_bought_in_game
        if sight_wards_bought_in_game is not None:
            self.sight_wards_bought_in_game = sight_wards_bought_in_game
        if wards_placed is not None:
            self.wards_placed = wards_placed
        if wards_killed is not None:
            self.wards_killed = wards_killed
        if combat_player_score is not None:
            self.combat_player_score = combat_player_score
        if objective_player_score is not None:
            self.objective_player_score = objective_player_score
        if total_player_score is not None:
            self.total_player_score = total_player_score
        if fantasy_points is not None:
            self.fantasy_points = fantasy_points
        if ten_kills_or_assists is not None:
            self.ten_kills_or_assists = ten_kills_or_assists
        if updated is not None:
            self.updated = updated
        if games is not None:
            self.games = games
        if matches is not None:
            self.matches = matches
        if is_closed is not None:
            self.is_closed = is_closed

    @property
    def game_id(self):
        """Gets the game_id of this LolStatsPlayerGame.  # noqa: E501


        :return: The game_id of this LolStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this LolStatsPlayerGame.


        :param game_id: The game_id of this LolStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._game_id = game_id

    @property
    def opponent_id(self):
        """Gets the opponent_id of this LolStatsPlayerGame.  # noqa: E501


        :return: The opponent_id of this LolStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._opponent_id

    @opponent_id.setter
    def opponent_id(self, opponent_id):
        """Sets the opponent_id of this LolStatsPlayerGame.


        :param opponent_id: The opponent_id of this LolStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._opponent_id = opponent_id

    @property
    def opponent(self):
        """Gets the opponent of this LolStatsPlayerGame.  # noqa: E501


        :return: The opponent of this LolStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._opponent

    @opponent.setter
    def opponent(self, opponent):
        """Sets the opponent of this LolStatsPlayerGame.


        :param opponent: The opponent of this LolStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._opponent = opponent

    @property
    def day(self):
        """Gets the day of this LolStatsPlayerGame.  # noqa: E501


        :return: The day of this LolStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this LolStatsPlayerGame.


        :param day: The day of this LolStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._day = day

    @property
    def date_time(self):
        """Gets the date_time of this LolStatsPlayerGame.  # noqa: E501


        :return: The date_time of this LolStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this LolStatsPlayerGame.


        :param date_time: The date_time of this LolStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._date_time = date_time

    @property
    def position(self):
        """Gets the position of this LolStatsPlayerGame.  # noqa: E501


        :return: The position of this LolStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this LolStatsPlayerGame.


        :param position: The position of this LolStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._position = position

    @property
    def player_id(self):
        """Gets the player_id of this LolStatsPlayerGame.  # noqa: E501


        :return: The player_id of this LolStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this LolStatsPlayerGame.


        :param player_id: The player_id of this LolStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._player_id = player_id

    @property
    def team_id(self):
        """Gets the team_id of this LolStatsPlayerGame.  # noqa: E501


        :return: The team_id of this LolStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this LolStatsPlayerGame.


        :param team_id: The team_id of this LolStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._team_id = team_id

    @property
    def team(self):
        """Gets the team of this LolStatsPlayerGame.  # noqa: E501


        :return: The team of this LolStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this LolStatsPlayerGame.


        :param team: The team of this LolStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._team = team

    @property
    def name(self):
        """Gets the name of this LolStatsPlayerGame.  # noqa: E501


        :return: The name of this LolStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LolStatsPlayerGame.


        :param name: The name of this LolStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def match_name(self):
        """Gets the match_name of this LolStatsPlayerGame.  # noqa: E501


        :return: The match_name of this LolStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._match_name

    @match_name.setter
    def match_name(self, match_name):
        """Sets the match_name of this LolStatsPlayerGame.


        :param match_name: The match_name of this LolStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._match_name = match_name

    @property
    def kills(self):
        """Gets the kills of this LolStatsPlayerGame.  # noqa: E501


        :return: The kills of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._kills

    @kills.setter
    def kills(self, kills):
        """Sets the kills of this LolStatsPlayerGame.


        :param kills: The kills of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._kills = kills

    @property
    def assists(self):
        """Gets the assists of this LolStatsPlayerGame.  # noqa: E501


        :return: The assists of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._assists

    @assists.setter
    def assists(self, assists):
        """Sets the assists of this LolStatsPlayerGame.


        :param assists: The assists of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._assists = assists

    @property
    def deaths(self):
        """Gets the deaths of this LolStatsPlayerGame.  # noqa: E501


        :return: The deaths of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._deaths

    @deaths.setter
    def deaths(self, deaths):
        """Sets the deaths of this LolStatsPlayerGame.


        :param deaths: The deaths of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._deaths = deaths

    @property
    def largest_killing_spree(self):
        """Gets the largest_killing_spree of this LolStatsPlayerGame.  # noqa: E501


        :return: The largest_killing_spree of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._largest_killing_spree

    @largest_killing_spree.setter
    def largest_killing_spree(self, largest_killing_spree):
        """Sets the largest_killing_spree of this LolStatsPlayerGame.


        :param largest_killing_spree: The largest_killing_spree of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._largest_killing_spree = largest_killing_spree

    @property
    def largest_multi_kill(self):
        """Gets the largest_multi_kill of this LolStatsPlayerGame.  # noqa: E501


        :return: The largest_multi_kill of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._largest_multi_kill

    @largest_multi_kill.setter
    def largest_multi_kill(self, largest_multi_kill):
        """Sets the largest_multi_kill of this LolStatsPlayerGame.


        :param largest_multi_kill: The largest_multi_kill of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._largest_multi_kill = largest_multi_kill

    @property
    def killing_spree(self):
        """Gets the killing_spree of this LolStatsPlayerGame.  # noqa: E501


        :return: The killing_spree of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._killing_spree

    @killing_spree.setter
    def killing_spree(self, killing_spree):
        """Sets the killing_spree of this LolStatsPlayerGame.


        :param killing_spree: The killing_spree of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._killing_spree = killing_spree

    @property
    def longest_time_spent_living(self):
        """Gets the longest_time_spent_living of this LolStatsPlayerGame.  # noqa: E501


        :return: The longest_time_spent_living of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._longest_time_spent_living

    @longest_time_spent_living.setter
    def longest_time_spent_living(self, longest_time_spent_living):
        """Sets the longest_time_spent_living of this LolStatsPlayerGame.


        :param longest_time_spent_living: The longest_time_spent_living of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._longest_time_spent_living = longest_time_spent_living

    @property
    def double_kills(self):
        """Gets the double_kills of this LolStatsPlayerGame.  # noqa: E501


        :return: The double_kills of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._double_kills

    @double_kills.setter
    def double_kills(self, double_kills):
        """Sets the double_kills of this LolStatsPlayerGame.


        :param double_kills: The double_kills of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._double_kills = double_kills

    @property
    def triple_kills(self):
        """Gets the triple_kills of this LolStatsPlayerGame.  # noqa: E501


        :return: The triple_kills of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._triple_kills

    @triple_kills.setter
    def triple_kills(self, triple_kills):
        """Sets the triple_kills of this LolStatsPlayerGame.


        :param triple_kills: The triple_kills of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._triple_kills = triple_kills

    @property
    def quadra_kills(self):
        """Gets the quadra_kills of this LolStatsPlayerGame.  # noqa: E501


        :return: The quadra_kills of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._quadra_kills

    @quadra_kills.setter
    def quadra_kills(self, quadra_kills):
        """Sets the quadra_kills of this LolStatsPlayerGame.


        :param quadra_kills: The quadra_kills of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._quadra_kills = quadra_kills

    @property
    def penta_kills(self):
        """Gets the penta_kills of this LolStatsPlayerGame.  # noqa: E501


        :return: The penta_kills of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._penta_kills

    @penta_kills.setter
    def penta_kills(self, penta_kills):
        """Sets the penta_kills of this LolStatsPlayerGame.


        :param penta_kills: The penta_kills of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._penta_kills = penta_kills

    @property
    def unreal_kills(self):
        """Gets the unreal_kills of this LolStatsPlayerGame.  # noqa: E501


        :return: The unreal_kills of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._unreal_kills

    @unreal_kills.setter
    def unreal_kills(self, unreal_kills):
        """Sets the unreal_kills of this LolStatsPlayerGame.


        :param unreal_kills: The unreal_kills of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._unreal_kills = unreal_kills

    @property
    def total_damage_dealt(self):
        """Gets the total_damage_dealt of this LolStatsPlayerGame.  # noqa: E501


        :return: The total_damage_dealt of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_damage_dealt

    @total_damage_dealt.setter
    def total_damage_dealt(self, total_damage_dealt):
        """Sets the total_damage_dealt of this LolStatsPlayerGame.


        :param total_damage_dealt: The total_damage_dealt of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_damage_dealt = total_damage_dealt

    @property
    def magic_damage_dealt(self):
        """Gets the magic_damage_dealt of this LolStatsPlayerGame.  # noqa: E501


        :return: The magic_damage_dealt of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._magic_damage_dealt

    @magic_damage_dealt.setter
    def magic_damage_dealt(self, magic_damage_dealt):
        """Sets the magic_damage_dealt of this LolStatsPlayerGame.


        :param magic_damage_dealt: The magic_damage_dealt of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._magic_damage_dealt = magic_damage_dealt

    @property
    def physical_damage_dealt(self):
        """Gets the physical_damage_dealt of this LolStatsPlayerGame.  # noqa: E501


        :return: The physical_damage_dealt of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._physical_damage_dealt

    @physical_damage_dealt.setter
    def physical_damage_dealt(self, physical_damage_dealt):
        """Sets the physical_damage_dealt of this LolStatsPlayerGame.


        :param physical_damage_dealt: The physical_damage_dealt of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._physical_damage_dealt = physical_damage_dealt

    @property
    def true_damage_dealt(self):
        """Gets the true_damage_dealt of this LolStatsPlayerGame.  # noqa: E501


        :return: The true_damage_dealt of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._true_damage_dealt

    @true_damage_dealt.setter
    def true_damage_dealt(self, true_damage_dealt):
        """Sets the true_damage_dealt of this LolStatsPlayerGame.


        :param true_damage_dealt: The true_damage_dealt of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._true_damage_dealt = true_damage_dealt

    @property
    def largest_critical_strike(self):
        """Gets the largest_critical_strike of this LolStatsPlayerGame.  # noqa: E501


        :return: The largest_critical_strike of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._largest_critical_strike

    @largest_critical_strike.setter
    def largest_critical_strike(self, largest_critical_strike):
        """Sets the largest_critical_strike of this LolStatsPlayerGame.


        :param largest_critical_strike: The largest_critical_strike of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._largest_critical_strike = largest_critical_strike

    @property
    def total_damage_dealt_to_champions(self):
        """Gets the total_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501


        :return: The total_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_damage_dealt_to_champions

    @total_damage_dealt_to_champions.setter
    def total_damage_dealt_to_champions(self, total_damage_dealt_to_champions):
        """Sets the total_damage_dealt_to_champions of this LolStatsPlayerGame.


        :param total_damage_dealt_to_champions: The total_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_damage_dealt_to_champions = total_damage_dealt_to_champions

    @property
    def magic_damage_dealt_to_champions(self):
        """Gets the magic_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501


        :return: The magic_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._magic_damage_dealt_to_champions

    @magic_damage_dealt_to_champions.setter
    def magic_damage_dealt_to_champions(self, magic_damage_dealt_to_champions):
        """Sets the magic_damage_dealt_to_champions of this LolStatsPlayerGame.


        :param magic_damage_dealt_to_champions: The magic_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._magic_damage_dealt_to_champions = magic_damage_dealt_to_champions

    @property
    def physical_damage_dealt_to_champions(self):
        """Gets the physical_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501


        :return: The physical_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._physical_damage_dealt_to_champions

    @physical_damage_dealt_to_champions.setter
    def physical_damage_dealt_to_champions(self, physical_damage_dealt_to_champions):
        """Sets the physical_damage_dealt_to_champions of this LolStatsPlayerGame.


        :param physical_damage_dealt_to_champions: The physical_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._physical_damage_dealt_to_champions = physical_damage_dealt_to_champions

    @property
    def true_damage_dealt_to_champions(self):
        """Gets the true_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501


        :return: The true_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._true_damage_dealt_to_champions

    @true_damage_dealt_to_champions.setter
    def true_damage_dealt_to_champions(self, true_damage_dealt_to_champions):
        """Sets the true_damage_dealt_to_champions of this LolStatsPlayerGame.


        :param true_damage_dealt_to_champions: The true_damage_dealt_to_champions of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._true_damage_dealt_to_champions = true_damage_dealt_to_champions

    @property
    def total_heal(self):
        """Gets the total_heal of this LolStatsPlayerGame.  # noqa: E501


        :return: The total_heal of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_heal

    @total_heal.setter
    def total_heal(self, total_heal):
        """Sets the total_heal of this LolStatsPlayerGame.


        :param total_heal: The total_heal of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_heal = total_heal

    @property
    def total_units_healed(self):
        """Gets the total_units_healed of this LolStatsPlayerGame.  # noqa: E501


        :return: The total_units_healed of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_units_healed

    @total_units_healed.setter
    def total_units_healed(self, total_units_healed):
        """Sets the total_units_healed of this LolStatsPlayerGame.


        :param total_units_healed: The total_units_healed of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_units_healed = total_units_healed

    @property
    def total_damage_taken(self):
        """Gets the total_damage_taken of this LolStatsPlayerGame.  # noqa: E501


        :return: The total_damage_taken of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_damage_taken

    @total_damage_taken.setter
    def total_damage_taken(self, total_damage_taken):
        """Sets the total_damage_taken of this LolStatsPlayerGame.


        :param total_damage_taken: The total_damage_taken of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_damage_taken = total_damage_taken

    @property
    def magic_damage_taken(self):
        """Gets the magic_damage_taken of this LolStatsPlayerGame.  # noqa: E501


        :return: The magic_damage_taken of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._magic_damage_taken

    @magic_damage_taken.setter
    def magic_damage_taken(self, magic_damage_taken):
        """Sets the magic_damage_taken of this LolStatsPlayerGame.


        :param magic_damage_taken: The magic_damage_taken of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._magic_damage_taken = magic_damage_taken

    @property
    def physical_damage_taken(self):
        """Gets the physical_damage_taken of this LolStatsPlayerGame.  # noqa: E501


        :return: The physical_damage_taken of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._physical_damage_taken

    @physical_damage_taken.setter
    def physical_damage_taken(self, physical_damage_taken):
        """Sets the physical_damage_taken of this LolStatsPlayerGame.


        :param physical_damage_taken: The physical_damage_taken of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._physical_damage_taken = physical_damage_taken

    @property
    def true_damage_taken(self):
        """Gets the true_damage_taken of this LolStatsPlayerGame.  # noqa: E501


        :return: The true_damage_taken of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._true_damage_taken

    @true_damage_taken.setter
    def true_damage_taken(self, true_damage_taken):
        """Sets the true_damage_taken of this LolStatsPlayerGame.


        :param true_damage_taken: The true_damage_taken of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._true_damage_taken = true_damage_taken

    @property
    def gold_earned(self):
        """Gets the gold_earned of this LolStatsPlayerGame.  # noqa: E501


        :return: The gold_earned of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._gold_earned

    @gold_earned.setter
    def gold_earned(self, gold_earned):
        """Sets the gold_earned of this LolStatsPlayerGame.


        :param gold_earned: The gold_earned of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._gold_earned = gold_earned

    @property
    def gold_spent(self):
        """Gets the gold_spent of this LolStatsPlayerGame.  # noqa: E501


        :return: The gold_spent of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._gold_spent

    @gold_spent.setter
    def gold_spent(self, gold_spent):
        """Sets the gold_spent of this LolStatsPlayerGame.


        :param gold_spent: The gold_spent of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._gold_spent = gold_spent

    @property
    def turret_kills(self):
        """Gets the turret_kills of this LolStatsPlayerGame.  # noqa: E501


        :return: The turret_kills of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._turret_kills

    @turret_kills.setter
    def turret_kills(self, turret_kills):
        """Sets the turret_kills of this LolStatsPlayerGame.


        :param turret_kills: The turret_kills of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._turret_kills = turret_kills

    @property
    def inhibitor_kills(self):
        """Gets the inhibitor_kills of this LolStatsPlayerGame.  # noqa: E501


        :return: The inhibitor_kills of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._inhibitor_kills

    @inhibitor_kills.setter
    def inhibitor_kills(self, inhibitor_kills):
        """Sets the inhibitor_kills of this LolStatsPlayerGame.


        :param inhibitor_kills: The inhibitor_kills of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._inhibitor_kills = inhibitor_kills

    @property
    def total_minions_killed(self):
        """Gets the total_minions_killed of this LolStatsPlayerGame.  # noqa: E501


        :return: The total_minions_killed of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_minions_killed

    @total_minions_killed.setter
    def total_minions_killed(self, total_minions_killed):
        """Sets the total_minions_killed of this LolStatsPlayerGame.


        :param total_minions_killed: The total_minions_killed of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_minions_killed = total_minions_killed

    @property
    def neutral_minions_k_illed(self):
        """Gets the neutral_minions_k_illed of this LolStatsPlayerGame.  # noqa: E501


        :return: The neutral_minions_k_illed of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._neutral_minions_k_illed

    @neutral_minions_k_illed.setter
    def neutral_minions_k_illed(self, neutral_minions_k_illed):
        """Sets the neutral_minions_k_illed of this LolStatsPlayerGame.


        :param neutral_minions_k_illed: The neutral_minions_k_illed of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._neutral_minions_k_illed = neutral_minions_k_illed

    @property
    def neutral_minions_k_illed_team_jungle(self):
        """Gets the neutral_minions_k_illed_team_jungle of this LolStatsPlayerGame.  # noqa: E501


        :return: The neutral_minions_k_illed_team_jungle of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._neutral_minions_k_illed_team_jungle

    @neutral_minions_k_illed_team_jungle.setter
    def neutral_minions_k_illed_team_jungle(self, neutral_minions_k_illed_team_jungle):
        """Sets the neutral_minions_k_illed_team_jungle of this LolStatsPlayerGame.


        :param neutral_minions_k_illed_team_jungle: The neutral_minions_k_illed_team_jungle of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._neutral_minions_k_illed_team_jungle = neutral_minions_k_illed_team_jungle

    @property
    def neutral_minions_killed_enemy_jungle(self):
        """Gets the neutral_minions_killed_enemy_jungle of this LolStatsPlayerGame.  # noqa: E501


        :return: The neutral_minions_killed_enemy_jungle of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._neutral_minions_killed_enemy_jungle

    @neutral_minions_killed_enemy_jungle.setter
    def neutral_minions_killed_enemy_jungle(self, neutral_minions_killed_enemy_jungle):
        """Sets the neutral_minions_killed_enemy_jungle of this LolStatsPlayerGame.


        :param neutral_minions_killed_enemy_jungle: The neutral_minions_killed_enemy_jungle of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._neutral_minions_killed_enemy_jungle = neutral_minions_killed_enemy_jungle

    @property
    def total_time_crowd_control_dealt(self):
        """Gets the total_time_crowd_control_dealt of this LolStatsPlayerGame.  # noqa: E501


        :return: The total_time_crowd_control_dealt of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_time_crowd_control_dealt

    @total_time_crowd_control_dealt.setter
    def total_time_crowd_control_dealt(self, total_time_crowd_control_dealt):
        """Sets the total_time_crowd_control_dealt of this LolStatsPlayerGame.


        :param total_time_crowd_control_dealt: The total_time_crowd_control_dealt of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_time_crowd_control_dealt = total_time_crowd_control_dealt

    @property
    def vision_wards_bought_in_game(self):
        """Gets the vision_wards_bought_in_game of this LolStatsPlayerGame.  # noqa: E501


        :return: The vision_wards_bought_in_game of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._vision_wards_bought_in_game

    @vision_wards_bought_in_game.setter
    def vision_wards_bought_in_game(self, vision_wards_bought_in_game):
        """Sets the vision_wards_bought_in_game of this LolStatsPlayerGame.


        :param vision_wards_bought_in_game: The vision_wards_bought_in_game of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._vision_wards_bought_in_game = vision_wards_bought_in_game

    @property
    def sight_wards_bought_in_game(self):
        """Gets the sight_wards_bought_in_game of this LolStatsPlayerGame.  # noqa: E501


        :return: The sight_wards_bought_in_game of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._sight_wards_bought_in_game

    @sight_wards_bought_in_game.setter
    def sight_wards_bought_in_game(self, sight_wards_bought_in_game):
        """Sets the sight_wards_bought_in_game of this LolStatsPlayerGame.


        :param sight_wards_bought_in_game: The sight_wards_bought_in_game of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._sight_wards_bought_in_game = sight_wards_bought_in_game

    @property
    def wards_placed(self):
        """Gets the wards_placed of this LolStatsPlayerGame.  # noqa: E501


        :return: The wards_placed of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._wards_placed

    @wards_placed.setter
    def wards_placed(self, wards_placed):
        """Sets the wards_placed of this LolStatsPlayerGame.


        :param wards_placed: The wards_placed of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._wards_placed = wards_placed

    @property
    def wards_killed(self):
        """Gets the wards_killed of this LolStatsPlayerGame.  # noqa: E501


        :return: The wards_killed of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._wards_killed

    @wards_killed.setter
    def wards_killed(self, wards_killed):
        """Sets the wards_killed of this LolStatsPlayerGame.


        :param wards_killed: The wards_killed of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._wards_killed = wards_killed

    @property
    def combat_player_score(self):
        """Gets the combat_player_score of this LolStatsPlayerGame.  # noqa: E501


        :return: The combat_player_score of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._combat_player_score

    @combat_player_score.setter
    def combat_player_score(self, combat_player_score):
        """Sets the combat_player_score of this LolStatsPlayerGame.


        :param combat_player_score: The combat_player_score of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._combat_player_score = combat_player_score

    @property
    def objective_player_score(self):
        """Gets the objective_player_score of this LolStatsPlayerGame.  # noqa: E501


        :return: The objective_player_score of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._objective_player_score

    @objective_player_score.setter
    def objective_player_score(self, objective_player_score):
        """Sets the objective_player_score of this LolStatsPlayerGame.


        :param objective_player_score: The objective_player_score of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._objective_player_score = objective_player_score

    @property
    def total_player_score(self):
        """Gets the total_player_score of this LolStatsPlayerGame.  # noqa: E501


        :return: The total_player_score of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._total_player_score

    @total_player_score.setter
    def total_player_score(self, total_player_score):
        """Sets the total_player_score of this LolStatsPlayerGame.


        :param total_player_score: The total_player_score of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._total_player_score = total_player_score

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this LolStatsPlayerGame.  # noqa: E501


        :return: The fantasy_points of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this LolStatsPlayerGame.


        :param fantasy_points: The fantasy_points of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._fantasy_points = fantasy_points

    @property
    def ten_kills_or_assists(self):
        """Gets the ten_kills_or_assists of this LolStatsPlayerGame.  # noqa: E501


        :return: The ten_kills_or_assists of this LolStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._ten_kills_or_assists

    @ten_kills_or_assists.setter
    def ten_kills_or_assists(self, ten_kills_or_assists):
        """Sets the ten_kills_or_assists of this LolStatsPlayerGame.


        :param ten_kills_or_assists: The ten_kills_or_assists of this LolStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._ten_kills_or_assists = ten_kills_or_assists

    @property
    def updated(self):
        """Gets the updated of this LolStatsPlayerGame.  # noqa: E501


        :return: The updated of this LolStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this LolStatsPlayerGame.


        :param updated: The updated of this LolStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._updated = updated

    @property
    def games(self):
        """Gets the games of this LolStatsPlayerGame.  # noqa: E501


        :return: The games of this LolStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this LolStatsPlayerGame.


        :param games: The games of this LolStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._games = games

    @property
    def matches(self):
        """Gets the matches of this LolStatsPlayerGame.  # noqa: E501


        :return: The matches of this LolStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._matches

    @matches.setter
    def matches(self, matches):
        """Sets the matches of this LolStatsPlayerGame.


        :param matches: The matches of this LolStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._matches = matches

    @property
    def is_closed(self):
        """Gets the is_closed of this LolStatsPlayerGame.  # noqa: E501


        :return: The is_closed of this LolStatsPlayerGame.  # noqa: E501
        :rtype: bool
        """
        return self._is_closed

    @is_closed.setter
    def is_closed(self, is_closed):
        """Sets the is_closed of this LolStatsPlayerGame.


        :param is_closed: The is_closed of this LolStatsPlayerGame.  # noqa: E501
        :type: bool
        """

        self._is_closed = is_closed

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(LolStatsPlayerGame, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LolStatsPlayerGame):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
