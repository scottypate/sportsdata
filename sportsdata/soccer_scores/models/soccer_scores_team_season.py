# coding: utf-8

"""
    Soccer v3 Scores

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SoccerScoresTeamSeason(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'stat_id': 'int',
        'season_type': 'int',
        'season': 'int',
        'round_id': 'int',
        'team_id': 'int',
        'name': 'str',
        'team': 'str',
        'global_team_id': 'int',
        'possession': 'float',
        'updated': 'str',
        'updated_utc': 'str',
        'games': 'int',
        'fantasy_points': 'float',
        'fantasy_points_fan_duel': 'float',
        'fantasy_points_draft_kings': 'float',
        'fantasy_points_yahoo': 'float',
        'fantasy_points_mondogoal': 'float',
        'minutes': 'float',
        'goals': 'float',
        'assists': 'float',
        'shots': 'float',
        'shots_on_goal': 'float',
        'yellow_cards': 'float',
        'red_cards': 'float',
        'yellow_red_cards': 'float',
        'crosses': 'float',
        'tackles_won': 'float',
        'interceptions': 'float',
        'own_goals': 'float',
        'fouls': 'float',
        'fouled': 'float',
        'offsides': 'float',
        'passes': 'float',
        'passes_completed': 'float',
        'last_man_tackle': 'float',
        'corners_won': 'float',
        'blocked_shots': 'float',
        'touches': 'float',
        'defender_clean_sheets': 'float',
        'goalkeeper_saves': 'float',
        'goalkeeper_goals_against': 'float',
        'goalkeeper_single_goal_against': 'float',
        'goalkeeper_clean_sheets': 'float',
        'goalkeeper_wins': 'float',
        'penalty_kick_goals': 'float',
        'penalty_kick_misses': 'float',
        'penalty_kick_saves': 'float',
        'penalties_won': 'float',
        'penalties_conceded': 'float',
        'score': 'float',
        'opponent_score': 'float'
    }

    attribute_map = {
        'stat_id': 'StatId',
        'season_type': 'SeasonType',
        'season': 'Season',
        'round_id': 'RoundId',
        'team_id': 'TeamId',
        'name': 'Name',
        'team': 'Team',
        'global_team_id': 'GlobalTeamId',
        'possession': 'Possession',
        'updated': 'Updated',
        'updated_utc': 'UpdatedUtc',
        'games': 'Games',
        'fantasy_points': 'FantasyPoints',
        'fantasy_points_fan_duel': 'FantasyPointsFanDuel',
        'fantasy_points_draft_kings': 'FantasyPointsDraftKings',
        'fantasy_points_yahoo': 'FantasyPointsYahoo',
        'fantasy_points_mondogoal': 'FantasyPointsMondogoal',
        'minutes': 'Minutes',
        'goals': 'Goals',
        'assists': 'Assists',
        'shots': 'Shots',
        'shots_on_goal': 'ShotsOnGoal',
        'yellow_cards': 'YellowCards',
        'red_cards': 'RedCards',
        'yellow_red_cards': 'YellowRedCards',
        'crosses': 'Crosses',
        'tackles_won': 'TacklesWon',
        'interceptions': 'Interceptions',
        'own_goals': 'OwnGoals',
        'fouls': 'Fouls',
        'fouled': 'Fouled',
        'offsides': 'Offsides',
        'passes': 'Passes',
        'passes_completed': 'PassesCompleted',
        'last_man_tackle': 'LastManTackle',
        'corners_won': 'CornersWon',
        'blocked_shots': 'BlockedShots',
        'touches': 'Touches',
        'defender_clean_sheets': 'DefenderCleanSheets',
        'goalkeeper_saves': 'GoalkeeperSaves',
        'goalkeeper_goals_against': 'GoalkeeperGoalsAgainst',
        'goalkeeper_single_goal_against': 'GoalkeeperSingleGoalAgainst',
        'goalkeeper_clean_sheets': 'GoalkeeperCleanSheets',
        'goalkeeper_wins': 'GoalkeeperWins',
        'penalty_kick_goals': 'PenaltyKickGoals',
        'penalty_kick_misses': 'PenaltyKickMisses',
        'penalty_kick_saves': 'PenaltyKickSaves',
        'penalties_won': 'PenaltiesWon',
        'penalties_conceded': 'PenaltiesConceded',
        'score': 'Score',
        'opponent_score': 'OpponentScore'
    }

    def __init__(self, stat_id=None, season_type=None, season=None, round_id=None, team_id=None, name=None, team=None, global_team_id=None, possession=None, updated=None, updated_utc=None, games=None, fantasy_points=None, fantasy_points_fan_duel=None, fantasy_points_draft_kings=None, fantasy_points_yahoo=None, fantasy_points_mondogoal=None, minutes=None, goals=None, assists=None, shots=None, shots_on_goal=None, yellow_cards=None, red_cards=None, yellow_red_cards=None, crosses=None, tackles_won=None, interceptions=None, own_goals=None, fouls=None, fouled=None, offsides=None, passes=None, passes_completed=None, last_man_tackle=None, corners_won=None, blocked_shots=None, touches=None, defender_clean_sheets=None, goalkeeper_saves=None, goalkeeper_goals_against=None, goalkeeper_single_goal_against=None, goalkeeper_clean_sheets=None, goalkeeper_wins=None, penalty_kick_goals=None, penalty_kick_misses=None, penalty_kick_saves=None, penalties_won=None, penalties_conceded=None, score=None, opponent_score=None):  # noqa: E501
        """SoccerScoresTeamSeason - a model defined in Swagger"""  # noqa: E501
        self._stat_id = None
        self._season_type = None
        self._season = None
        self._round_id = None
        self._team_id = None
        self._name = None
        self._team = None
        self._global_team_id = None
        self._possession = None
        self._updated = None
        self._updated_utc = None
        self._games = None
        self._fantasy_points = None
        self._fantasy_points_fan_duel = None
        self._fantasy_points_draft_kings = None
        self._fantasy_points_yahoo = None
        self._fantasy_points_mondogoal = None
        self._minutes = None
        self._goals = None
        self._assists = None
        self._shots = None
        self._shots_on_goal = None
        self._yellow_cards = None
        self._red_cards = None
        self._yellow_red_cards = None
        self._crosses = None
        self._tackles_won = None
        self._interceptions = None
        self._own_goals = None
        self._fouls = None
        self._fouled = None
        self._offsides = None
        self._passes = None
        self._passes_completed = None
        self._last_man_tackle = None
        self._corners_won = None
        self._blocked_shots = None
        self._touches = None
        self._defender_clean_sheets = None
        self._goalkeeper_saves = None
        self._goalkeeper_goals_against = None
        self._goalkeeper_single_goal_against = None
        self._goalkeeper_clean_sheets = None
        self._goalkeeper_wins = None
        self._penalty_kick_goals = None
        self._penalty_kick_misses = None
        self._penalty_kick_saves = None
        self._penalties_won = None
        self._penalties_conceded = None
        self._score = None
        self._opponent_score = None
        self.discriminator = None
        if stat_id is not None:
            self.stat_id = stat_id
        if season_type is not None:
            self.season_type = season_type
        if season is not None:
            self.season = season
        if round_id is not None:
            self.round_id = round_id
        if team_id is not None:
            self.team_id = team_id
        if name is not None:
            self.name = name
        if team is not None:
            self.team = team
        if global_team_id is not None:
            self.global_team_id = global_team_id
        if possession is not None:
            self.possession = possession
        if updated is not None:
            self.updated = updated
        if updated_utc is not None:
            self.updated_utc = updated_utc
        if games is not None:
            self.games = games
        if fantasy_points is not None:
            self.fantasy_points = fantasy_points
        if fantasy_points_fan_duel is not None:
            self.fantasy_points_fan_duel = fantasy_points_fan_duel
        if fantasy_points_draft_kings is not None:
            self.fantasy_points_draft_kings = fantasy_points_draft_kings
        if fantasy_points_yahoo is not None:
            self.fantasy_points_yahoo = fantasy_points_yahoo
        if fantasy_points_mondogoal is not None:
            self.fantasy_points_mondogoal = fantasy_points_mondogoal
        if minutes is not None:
            self.minutes = minutes
        if goals is not None:
            self.goals = goals
        if assists is not None:
            self.assists = assists
        if shots is not None:
            self.shots = shots
        if shots_on_goal is not None:
            self.shots_on_goal = shots_on_goal
        if yellow_cards is not None:
            self.yellow_cards = yellow_cards
        if red_cards is not None:
            self.red_cards = red_cards
        if yellow_red_cards is not None:
            self.yellow_red_cards = yellow_red_cards
        if crosses is not None:
            self.crosses = crosses
        if tackles_won is not None:
            self.tackles_won = tackles_won
        if interceptions is not None:
            self.interceptions = interceptions
        if own_goals is not None:
            self.own_goals = own_goals
        if fouls is not None:
            self.fouls = fouls
        if fouled is not None:
            self.fouled = fouled
        if offsides is not None:
            self.offsides = offsides
        if passes is not None:
            self.passes = passes
        if passes_completed is not None:
            self.passes_completed = passes_completed
        if last_man_tackle is not None:
            self.last_man_tackle = last_man_tackle
        if corners_won is not None:
            self.corners_won = corners_won
        if blocked_shots is not None:
            self.blocked_shots = blocked_shots
        if touches is not None:
            self.touches = touches
        if defender_clean_sheets is not None:
            self.defender_clean_sheets = defender_clean_sheets
        if goalkeeper_saves is not None:
            self.goalkeeper_saves = goalkeeper_saves
        if goalkeeper_goals_against is not None:
            self.goalkeeper_goals_against = goalkeeper_goals_against
        if goalkeeper_single_goal_against is not None:
            self.goalkeeper_single_goal_against = goalkeeper_single_goal_against
        if goalkeeper_clean_sheets is not None:
            self.goalkeeper_clean_sheets = goalkeeper_clean_sheets
        if goalkeeper_wins is not None:
            self.goalkeeper_wins = goalkeeper_wins
        if penalty_kick_goals is not None:
            self.penalty_kick_goals = penalty_kick_goals
        if penalty_kick_misses is not None:
            self.penalty_kick_misses = penalty_kick_misses
        if penalty_kick_saves is not None:
            self.penalty_kick_saves = penalty_kick_saves
        if penalties_won is not None:
            self.penalties_won = penalties_won
        if penalties_conceded is not None:
            self.penalties_conceded = penalties_conceded
        if score is not None:
            self.score = score
        if opponent_score is not None:
            self.opponent_score = opponent_score

    @property
    def stat_id(self):
        """Gets the stat_id of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The stat_id of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: int
        """
        return self._stat_id

    @stat_id.setter
    def stat_id(self, stat_id):
        """Sets the stat_id of this SoccerScoresTeamSeason.


        :param stat_id: The stat_id of this SoccerScoresTeamSeason.  # noqa: E501
        :type: int
        """

        self._stat_id = stat_id

    @property
    def season_type(self):
        """Gets the season_type of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The season_type of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this SoccerScoresTeamSeason.


        :param season_type: The season_type of this SoccerScoresTeamSeason.  # noqa: E501
        :type: int
        """

        self._season_type = season_type

    @property
    def season(self):
        """Gets the season of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The season of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this SoccerScoresTeamSeason.


        :param season: The season of this SoccerScoresTeamSeason.  # noqa: E501
        :type: int
        """

        self._season = season

    @property
    def round_id(self):
        """Gets the round_id of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The round_id of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: int
        """
        return self._round_id

    @round_id.setter
    def round_id(self, round_id):
        """Sets the round_id of this SoccerScoresTeamSeason.


        :param round_id: The round_id of this SoccerScoresTeamSeason.  # noqa: E501
        :type: int
        """

        self._round_id = round_id

    @property
    def team_id(self):
        """Gets the team_id of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The team_id of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this SoccerScoresTeamSeason.


        :param team_id: The team_id of this SoccerScoresTeamSeason.  # noqa: E501
        :type: int
        """

        self._team_id = team_id

    @property
    def name(self):
        """Gets the name of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The name of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SoccerScoresTeamSeason.


        :param name: The name of this SoccerScoresTeamSeason.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def team(self):
        """Gets the team of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The team of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this SoccerScoresTeamSeason.


        :param team: The team of this SoccerScoresTeamSeason.  # noqa: E501
        :type: str
        """

        self._team = team

    @property
    def global_team_id(self):
        """Gets the global_team_id of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The global_team_id of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: int
        """
        return self._global_team_id

    @global_team_id.setter
    def global_team_id(self, global_team_id):
        """Sets the global_team_id of this SoccerScoresTeamSeason.


        :param global_team_id: The global_team_id of this SoccerScoresTeamSeason.  # noqa: E501
        :type: int
        """

        self._global_team_id = global_team_id

    @property
    def possession(self):
        """Gets the possession of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The possession of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._possession

    @possession.setter
    def possession(self, possession):
        """Sets the possession of this SoccerScoresTeamSeason.


        :param possession: The possession of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._possession = possession

    @property
    def updated(self):
        """Gets the updated of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The updated of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this SoccerScoresTeamSeason.


        :param updated: The updated of this SoccerScoresTeamSeason.  # noqa: E501
        :type: str
        """

        self._updated = updated

    @property
    def updated_utc(self):
        """Gets the updated_utc of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The updated_utc of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: str
        """
        return self._updated_utc

    @updated_utc.setter
    def updated_utc(self, updated_utc):
        """Sets the updated_utc of this SoccerScoresTeamSeason.


        :param updated_utc: The updated_utc of this SoccerScoresTeamSeason.  # noqa: E501
        :type: str
        """

        self._updated_utc = updated_utc

    @property
    def games(self):
        """Gets the games of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The games of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: int
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this SoccerScoresTeamSeason.


        :param games: The games of this SoccerScoresTeamSeason.  # noqa: E501
        :type: int
        """

        self._games = games

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The fantasy_points of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this SoccerScoresTeamSeason.


        :param fantasy_points: The fantasy_points of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._fantasy_points = fantasy_points

    @property
    def fantasy_points_fan_duel(self):
        """Gets the fantasy_points_fan_duel of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The fantasy_points_fan_duel of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points_fan_duel

    @fantasy_points_fan_duel.setter
    def fantasy_points_fan_duel(self, fantasy_points_fan_duel):
        """Sets the fantasy_points_fan_duel of this SoccerScoresTeamSeason.


        :param fantasy_points_fan_duel: The fantasy_points_fan_duel of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._fantasy_points_fan_duel = fantasy_points_fan_duel

    @property
    def fantasy_points_draft_kings(self):
        """Gets the fantasy_points_draft_kings of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The fantasy_points_draft_kings of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points_draft_kings

    @fantasy_points_draft_kings.setter
    def fantasy_points_draft_kings(self, fantasy_points_draft_kings):
        """Sets the fantasy_points_draft_kings of this SoccerScoresTeamSeason.


        :param fantasy_points_draft_kings: The fantasy_points_draft_kings of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._fantasy_points_draft_kings = fantasy_points_draft_kings

    @property
    def fantasy_points_yahoo(self):
        """Gets the fantasy_points_yahoo of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The fantasy_points_yahoo of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points_yahoo

    @fantasy_points_yahoo.setter
    def fantasy_points_yahoo(self, fantasy_points_yahoo):
        """Sets the fantasy_points_yahoo of this SoccerScoresTeamSeason.


        :param fantasy_points_yahoo: The fantasy_points_yahoo of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._fantasy_points_yahoo = fantasy_points_yahoo

    @property
    def fantasy_points_mondogoal(self):
        """Gets the fantasy_points_mondogoal of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The fantasy_points_mondogoal of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points_mondogoal

    @fantasy_points_mondogoal.setter
    def fantasy_points_mondogoal(self, fantasy_points_mondogoal):
        """Sets the fantasy_points_mondogoal of this SoccerScoresTeamSeason.


        :param fantasy_points_mondogoal: The fantasy_points_mondogoal of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._fantasy_points_mondogoal = fantasy_points_mondogoal

    @property
    def minutes(self):
        """Gets the minutes of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The minutes of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._minutes

    @minutes.setter
    def minutes(self, minutes):
        """Sets the minutes of this SoccerScoresTeamSeason.


        :param minutes: The minutes of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._minutes = minutes

    @property
    def goals(self):
        """Gets the goals of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The goals of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._goals

    @goals.setter
    def goals(self, goals):
        """Sets the goals of this SoccerScoresTeamSeason.


        :param goals: The goals of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._goals = goals

    @property
    def assists(self):
        """Gets the assists of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The assists of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._assists

    @assists.setter
    def assists(self, assists):
        """Sets the assists of this SoccerScoresTeamSeason.


        :param assists: The assists of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._assists = assists

    @property
    def shots(self):
        """Gets the shots of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The shots of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._shots

    @shots.setter
    def shots(self, shots):
        """Sets the shots of this SoccerScoresTeamSeason.


        :param shots: The shots of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._shots = shots

    @property
    def shots_on_goal(self):
        """Gets the shots_on_goal of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The shots_on_goal of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._shots_on_goal

    @shots_on_goal.setter
    def shots_on_goal(self, shots_on_goal):
        """Sets the shots_on_goal of this SoccerScoresTeamSeason.


        :param shots_on_goal: The shots_on_goal of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._shots_on_goal = shots_on_goal

    @property
    def yellow_cards(self):
        """Gets the yellow_cards of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The yellow_cards of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._yellow_cards

    @yellow_cards.setter
    def yellow_cards(self, yellow_cards):
        """Sets the yellow_cards of this SoccerScoresTeamSeason.


        :param yellow_cards: The yellow_cards of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._yellow_cards = yellow_cards

    @property
    def red_cards(self):
        """Gets the red_cards of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The red_cards of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._red_cards

    @red_cards.setter
    def red_cards(self, red_cards):
        """Sets the red_cards of this SoccerScoresTeamSeason.


        :param red_cards: The red_cards of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._red_cards = red_cards

    @property
    def yellow_red_cards(self):
        """Gets the yellow_red_cards of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The yellow_red_cards of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._yellow_red_cards

    @yellow_red_cards.setter
    def yellow_red_cards(self, yellow_red_cards):
        """Sets the yellow_red_cards of this SoccerScoresTeamSeason.


        :param yellow_red_cards: The yellow_red_cards of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._yellow_red_cards = yellow_red_cards

    @property
    def crosses(self):
        """Gets the crosses of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The crosses of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._crosses

    @crosses.setter
    def crosses(self, crosses):
        """Sets the crosses of this SoccerScoresTeamSeason.


        :param crosses: The crosses of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._crosses = crosses

    @property
    def tackles_won(self):
        """Gets the tackles_won of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The tackles_won of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._tackles_won

    @tackles_won.setter
    def tackles_won(self, tackles_won):
        """Sets the tackles_won of this SoccerScoresTeamSeason.


        :param tackles_won: The tackles_won of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._tackles_won = tackles_won

    @property
    def interceptions(self):
        """Gets the interceptions of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The interceptions of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._interceptions

    @interceptions.setter
    def interceptions(self, interceptions):
        """Sets the interceptions of this SoccerScoresTeamSeason.


        :param interceptions: The interceptions of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._interceptions = interceptions

    @property
    def own_goals(self):
        """Gets the own_goals of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The own_goals of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._own_goals

    @own_goals.setter
    def own_goals(self, own_goals):
        """Sets the own_goals of this SoccerScoresTeamSeason.


        :param own_goals: The own_goals of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._own_goals = own_goals

    @property
    def fouls(self):
        """Gets the fouls of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The fouls of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._fouls

    @fouls.setter
    def fouls(self, fouls):
        """Sets the fouls of this SoccerScoresTeamSeason.


        :param fouls: The fouls of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._fouls = fouls

    @property
    def fouled(self):
        """Gets the fouled of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The fouled of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._fouled

    @fouled.setter
    def fouled(self, fouled):
        """Sets the fouled of this SoccerScoresTeamSeason.


        :param fouled: The fouled of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._fouled = fouled

    @property
    def offsides(self):
        """Gets the offsides of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The offsides of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._offsides

    @offsides.setter
    def offsides(self, offsides):
        """Sets the offsides of this SoccerScoresTeamSeason.


        :param offsides: The offsides of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._offsides = offsides

    @property
    def passes(self):
        """Gets the passes of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The passes of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._passes

    @passes.setter
    def passes(self, passes):
        """Sets the passes of this SoccerScoresTeamSeason.


        :param passes: The passes of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._passes = passes

    @property
    def passes_completed(self):
        """Gets the passes_completed of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The passes_completed of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._passes_completed

    @passes_completed.setter
    def passes_completed(self, passes_completed):
        """Sets the passes_completed of this SoccerScoresTeamSeason.


        :param passes_completed: The passes_completed of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._passes_completed = passes_completed

    @property
    def last_man_tackle(self):
        """Gets the last_man_tackle of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The last_man_tackle of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._last_man_tackle

    @last_man_tackle.setter
    def last_man_tackle(self, last_man_tackle):
        """Sets the last_man_tackle of this SoccerScoresTeamSeason.


        :param last_man_tackle: The last_man_tackle of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._last_man_tackle = last_man_tackle

    @property
    def corners_won(self):
        """Gets the corners_won of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The corners_won of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._corners_won

    @corners_won.setter
    def corners_won(self, corners_won):
        """Sets the corners_won of this SoccerScoresTeamSeason.


        :param corners_won: The corners_won of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._corners_won = corners_won

    @property
    def blocked_shots(self):
        """Gets the blocked_shots of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The blocked_shots of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._blocked_shots

    @blocked_shots.setter
    def blocked_shots(self, blocked_shots):
        """Sets the blocked_shots of this SoccerScoresTeamSeason.


        :param blocked_shots: The blocked_shots of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._blocked_shots = blocked_shots

    @property
    def touches(self):
        """Gets the touches of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The touches of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._touches

    @touches.setter
    def touches(self, touches):
        """Sets the touches of this SoccerScoresTeamSeason.


        :param touches: The touches of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._touches = touches

    @property
    def defender_clean_sheets(self):
        """Gets the defender_clean_sheets of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The defender_clean_sheets of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._defender_clean_sheets

    @defender_clean_sheets.setter
    def defender_clean_sheets(self, defender_clean_sheets):
        """Sets the defender_clean_sheets of this SoccerScoresTeamSeason.


        :param defender_clean_sheets: The defender_clean_sheets of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._defender_clean_sheets = defender_clean_sheets

    @property
    def goalkeeper_saves(self):
        """Gets the goalkeeper_saves of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The goalkeeper_saves of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._goalkeeper_saves

    @goalkeeper_saves.setter
    def goalkeeper_saves(self, goalkeeper_saves):
        """Sets the goalkeeper_saves of this SoccerScoresTeamSeason.


        :param goalkeeper_saves: The goalkeeper_saves of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._goalkeeper_saves = goalkeeper_saves

    @property
    def goalkeeper_goals_against(self):
        """Gets the goalkeeper_goals_against of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The goalkeeper_goals_against of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._goalkeeper_goals_against

    @goalkeeper_goals_against.setter
    def goalkeeper_goals_against(self, goalkeeper_goals_against):
        """Sets the goalkeeper_goals_against of this SoccerScoresTeamSeason.


        :param goalkeeper_goals_against: The goalkeeper_goals_against of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._goalkeeper_goals_against = goalkeeper_goals_against

    @property
    def goalkeeper_single_goal_against(self):
        """Gets the goalkeeper_single_goal_against of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The goalkeeper_single_goal_against of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._goalkeeper_single_goal_against

    @goalkeeper_single_goal_against.setter
    def goalkeeper_single_goal_against(self, goalkeeper_single_goal_against):
        """Sets the goalkeeper_single_goal_against of this SoccerScoresTeamSeason.


        :param goalkeeper_single_goal_against: The goalkeeper_single_goal_against of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._goalkeeper_single_goal_against = goalkeeper_single_goal_against

    @property
    def goalkeeper_clean_sheets(self):
        """Gets the goalkeeper_clean_sheets of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The goalkeeper_clean_sheets of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._goalkeeper_clean_sheets

    @goalkeeper_clean_sheets.setter
    def goalkeeper_clean_sheets(self, goalkeeper_clean_sheets):
        """Sets the goalkeeper_clean_sheets of this SoccerScoresTeamSeason.


        :param goalkeeper_clean_sheets: The goalkeeper_clean_sheets of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._goalkeeper_clean_sheets = goalkeeper_clean_sheets

    @property
    def goalkeeper_wins(self):
        """Gets the goalkeeper_wins of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The goalkeeper_wins of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._goalkeeper_wins

    @goalkeeper_wins.setter
    def goalkeeper_wins(self, goalkeeper_wins):
        """Sets the goalkeeper_wins of this SoccerScoresTeamSeason.


        :param goalkeeper_wins: The goalkeeper_wins of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._goalkeeper_wins = goalkeeper_wins

    @property
    def penalty_kick_goals(self):
        """Gets the penalty_kick_goals of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The penalty_kick_goals of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._penalty_kick_goals

    @penalty_kick_goals.setter
    def penalty_kick_goals(self, penalty_kick_goals):
        """Sets the penalty_kick_goals of this SoccerScoresTeamSeason.


        :param penalty_kick_goals: The penalty_kick_goals of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._penalty_kick_goals = penalty_kick_goals

    @property
    def penalty_kick_misses(self):
        """Gets the penalty_kick_misses of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The penalty_kick_misses of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._penalty_kick_misses

    @penalty_kick_misses.setter
    def penalty_kick_misses(self, penalty_kick_misses):
        """Sets the penalty_kick_misses of this SoccerScoresTeamSeason.


        :param penalty_kick_misses: The penalty_kick_misses of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._penalty_kick_misses = penalty_kick_misses

    @property
    def penalty_kick_saves(self):
        """Gets the penalty_kick_saves of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The penalty_kick_saves of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._penalty_kick_saves

    @penalty_kick_saves.setter
    def penalty_kick_saves(self, penalty_kick_saves):
        """Sets the penalty_kick_saves of this SoccerScoresTeamSeason.


        :param penalty_kick_saves: The penalty_kick_saves of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._penalty_kick_saves = penalty_kick_saves

    @property
    def penalties_won(self):
        """Gets the penalties_won of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The penalties_won of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._penalties_won

    @penalties_won.setter
    def penalties_won(self, penalties_won):
        """Sets the penalties_won of this SoccerScoresTeamSeason.


        :param penalties_won: The penalties_won of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._penalties_won = penalties_won

    @property
    def penalties_conceded(self):
        """Gets the penalties_conceded of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The penalties_conceded of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._penalties_conceded

    @penalties_conceded.setter
    def penalties_conceded(self, penalties_conceded):
        """Sets the penalties_conceded of this SoccerScoresTeamSeason.


        :param penalties_conceded: The penalties_conceded of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._penalties_conceded = penalties_conceded

    @property
    def score(self):
        """Gets the score of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The score of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this SoccerScoresTeamSeason.


        :param score: The score of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._score = score

    @property
    def opponent_score(self):
        """Gets the opponent_score of this SoccerScoresTeamSeason.  # noqa: E501


        :return: The opponent_score of this SoccerScoresTeamSeason.  # noqa: E501
        :rtype: float
        """
        return self._opponent_score

    @opponent_score.setter
    def opponent_score(self, opponent_score):
        """Sets the opponent_score of this SoccerScoresTeamSeason.


        :param opponent_score: The opponent_score of this SoccerScoresTeamSeason.  # noqa: E501
        :type: float
        """

        self._opponent_score = opponent_score

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SoccerScoresTeamSeason, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SoccerScoresTeamSeason):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
