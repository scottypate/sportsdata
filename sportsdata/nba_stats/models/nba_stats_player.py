# coding: utf-8

"""
    NBA v3 Stats

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class NbaStatsPlayer(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'player_id': 'int',
        'sports_data_id': 'str',
        'status': 'str',
        'team_id': 'int',
        'team': 'str',
        'jersey': 'int',
        'position_category': 'str',
        'position': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'height': 'int',
        'weight': 'int',
        'birth_date': 'str',
        'birth_city': 'str',
        'birth_state': 'str',
        'birth_country': 'str',
        'high_school': 'str',
        'college': 'str',
        'salary': 'int',
        'photo_url': 'str',
        'experience': 'int',
        'sport_radar_player_id': 'str',
        'rotoworld_player_id': 'int',
        'roto_wire_player_id': 'int',
        'fantasy_alarm_player_id': 'int',
        'stats_player_id': 'int',
        'sports_direct_player_id': 'int',
        'xml_team_player_id': 'int',
        'injury_status': 'str',
        'injury_body_part': 'str',
        'injury_start_date': 'str',
        'injury_notes': 'str',
        'fan_duel_player_id': 'int',
        'draft_kings_player_id': 'int',
        'yahoo_player_id': 'int',
        'fan_duel_name': 'str',
        'draft_kings_name': 'str',
        'yahoo_name': 'str',
        'depth_chart_position': 'str',
        'depth_chart_order': 'int',
        'global_team_id': 'int',
        'fantasy_draft_name': 'str',
        'fantasy_draft_player_id': 'int',
        'usa_today_player_id': 'int',
        'usa_today_headshot_url': 'str',
        'usa_today_headshot_no_background_url': 'str',
        'usa_today_headshot_updated': 'str',
        'usa_today_headshot_no_background_updated': 'str',
        'nba_dot_com_player_id': 'int'
    }

    attribute_map = {
        'player_id': 'PlayerID',
        'sports_data_id': 'SportsDataID',
        'status': 'Status',
        'team_id': 'TeamID',
        'team': 'Team',
        'jersey': 'Jersey',
        'position_category': 'PositionCategory',
        'position': 'Position',
        'first_name': 'FirstName',
        'last_name': 'LastName',
        'height': 'Height',
        'weight': 'Weight',
        'birth_date': 'BirthDate',
        'birth_city': 'BirthCity',
        'birth_state': 'BirthState',
        'birth_country': 'BirthCountry',
        'high_school': 'HighSchool',
        'college': 'College',
        'salary': 'Salary',
        'photo_url': 'PhotoUrl',
        'experience': 'Experience',
        'sport_radar_player_id': 'SportRadarPlayerID',
        'rotoworld_player_id': 'RotoworldPlayerID',
        'roto_wire_player_id': 'RotoWirePlayerID',
        'fantasy_alarm_player_id': 'FantasyAlarmPlayerID',
        'stats_player_id': 'StatsPlayerID',
        'sports_direct_player_id': 'SportsDirectPlayerID',
        'xml_team_player_id': 'XmlTeamPlayerID',
        'injury_status': 'InjuryStatus',
        'injury_body_part': 'InjuryBodyPart',
        'injury_start_date': 'InjuryStartDate',
        'injury_notes': 'InjuryNotes',
        'fan_duel_player_id': 'FanDuelPlayerID',
        'draft_kings_player_id': 'DraftKingsPlayerID',
        'yahoo_player_id': 'YahooPlayerID',
        'fan_duel_name': 'FanDuelName',
        'draft_kings_name': 'DraftKingsName',
        'yahoo_name': 'YahooName',
        'depth_chart_position': 'DepthChartPosition',
        'depth_chart_order': 'DepthChartOrder',
        'global_team_id': 'GlobalTeamID',
        'fantasy_draft_name': 'FantasyDraftName',
        'fantasy_draft_player_id': 'FantasyDraftPlayerID',
        'usa_today_player_id': 'UsaTodayPlayerID',
        'usa_today_headshot_url': 'UsaTodayHeadshotUrl',
        'usa_today_headshot_no_background_url': 'UsaTodayHeadshotNoBackgroundUrl',
        'usa_today_headshot_updated': 'UsaTodayHeadshotUpdated',
        'usa_today_headshot_no_background_updated': 'UsaTodayHeadshotNoBackgroundUpdated',
        'nba_dot_com_player_id': 'NbaDotComPlayerID'
    }

    def __init__(self, player_id=None, sports_data_id=None, status=None, team_id=None, team=None, jersey=None, position_category=None, position=None, first_name=None, last_name=None, height=None, weight=None, birth_date=None, birth_city=None, birth_state=None, birth_country=None, high_school=None, college=None, salary=None, photo_url=None, experience=None, sport_radar_player_id=None, rotoworld_player_id=None, roto_wire_player_id=None, fantasy_alarm_player_id=None, stats_player_id=None, sports_direct_player_id=None, xml_team_player_id=None, injury_status=None, injury_body_part=None, injury_start_date=None, injury_notes=None, fan_duel_player_id=None, draft_kings_player_id=None, yahoo_player_id=None, fan_duel_name=None, draft_kings_name=None, yahoo_name=None, depth_chart_position=None, depth_chart_order=None, global_team_id=None, fantasy_draft_name=None, fantasy_draft_player_id=None, usa_today_player_id=None, usa_today_headshot_url=None, usa_today_headshot_no_background_url=None, usa_today_headshot_updated=None, usa_today_headshot_no_background_updated=None, nba_dot_com_player_id=None):  # noqa: E501
        """NbaStatsPlayer - a model defined in Swagger"""  # noqa: E501
        self._player_id = None
        self._sports_data_id = None
        self._status = None
        self._team_id = None
        self._team = None
        self._jersey = None
        self._position_category = None
        self._position = None
        self._first_name = None
        self._last_name = None
        self._height = None
        self._weight = None
        self._birth_date = None
        self._birth_city = None
        self._birth_state = None
        self._birth_country = None
        self._high_school = None
        self._college = None
        self._salary = None
        self._photo_url = None
        self._experience = None
        self._sport_radar_player_id = None
        self._rotoworld_player_id = None
        self._roto_wire_player_id = None
        self._fantasy_alarm_player_id = None
        self._stats_player_id = None
        self._sports_direct_player_id = None
        self._xml_team_player_id = None
        self._injury_status = None
        self._injury_body_part = None
        self._injury_start_date = None
        self._injury_notes = None
        self._fan_duel_player_id = None
        self._draft_kings_player_id = None
        self._yahoo_player_id = None
        self._fan_duel_name = None
        self._draft_kings_name = None
        self._yahoo_name = None
        self._depth_chart_position = None
        self._depth_chart_order = None
        self._global_team_id = None
        self._fantasy_draft_name = None
        self._fantasy_draft_player_id = None
        self._usa_today_player_id = None
        self._usa_today_headshot_url = None
        self._usa_today_headshot_no_background_url = None
        self._usa_today_headshot_updated = None
        self._usa_today_headshot_no_background_updated = None
        self._nba_dot_com_player_id = None
        self.discriminator = None
        if player_id is not None:
            self.player_id = player_id
        if sports_data_id is not None:
            self.sports_data_id = sports_data_id
        if status is not None:
            self.status = status
        if team_id is not None:
            self.team_id = team_id
        if team is not None:
            self.team = team
        if jersey is not None:
            self.jersey = jersey
        if position_category is not None:
            self.position_category = position_category
        if position is not None:
            self.position = position
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if height is not None:
            self.height = height
        if weight is not None:
            self.weight = weight
        if birth_date is not None:
            self.birth_date = birth_date
        if birth_city is not None:
            self.birth_city = birth_city
        if birth_state is not None:
            self.birth_state = birth_state
        if birth_country is not None:
            self.birth_country = birth_country
        if high_school is not None:
            self.high_school = high_school
        if college is not None:
            self.college = college
        if salary is not None:
            self.salary = salary
        if photo_url is not None:
            self.photo_url = photo_url
        if experience is not None:
            self.experience = experience
        if sport_radar_player_id is not None:
            self.sport_radar_player_id = sport_radar_player_id
        if rotoworld_player_id is not None:
            self.rotoworld_player_id = rotoworld_player_id
        if roto_wire_player_id is not None:
            self.roto_wire_player_id = roto_wire_player_id
        if fantasy_alarm_player_id is not None:
            self.fantasy_alarm_player_id = fantasy_alarm_player_id
        if stats_player_id is not None:
            self.stats_player_id = stats_player_id
        if sports_direct_player_id is not None:
            self.sports_direct_player_id = sports_direct_player_id
        if xml_team_player_id is not None:
            self.xml_team_player_id = xml_team_player_id
        if injury_status is not None:
            self.injury_status = injury_status
        if injury_body_part is not None:
            self.injury_body_part = injury_body_part
        if injury_start_date is not None:
            self.injury_start_date = injury_start_date
        if injury_notes is not None:
            self.injury_notes = injury_notes
        if fan_duel_player_id is not None:
            self.fan_duel_player_id = fan_duel_player_id
        if draft_kings_player_id is not None:
            self.draft_kings_player_id = draft_kings_player_id
        if yahoo_player_id is not None:
            self.yahoo_player_id = yahoo_player_id
        if fan_duel_name is not None:
            self.fan_duel_name = fan_duel_name
        if draft_kings_name is not None:
            self.draft_kings_name = draft_kings_name
        if yahoo_name is not None:
            self.yahoo_name = yahoo_name
        if depth_chart_position is not None:
            self.depth_chart_position = depth_chart_position
        if depth_chart_order is not None:
            self.depth_chart_order = depth_chart_order
        if global_team_id is not None:
            self.global_team_id = global_team_id
        if fantasy_draft_name is not None:
            self.fantasy_draft_name = fantasy_draft_name
        if fantasy_draft_player_id is not None:
            self.fantasy_draft_player_id = fantasy_draft_player_id
        if usa_today_player_id is not None:
            self.usa_today_player_id = usa_today_player_id
        if usa_today_headshot_url is not None:
            self.usa_today_headshot_url = usa_today_headshot_url
        if usa_today_headshot_no_background_url is not None:
            self.usa_today_headshot_no_background_url = usa_today_headshot_no_background_url
        if usa_today_headshot_updated is not None:
            self.usa_today_headshot_updated = usa_today_headshot_updated
        if usa_today_headshot_no_background_updated is not None:
            self.usa_today_headshot_no_background_updated = usa_today_headshot_no_background_updated
        if nba_dot_com_player_id is not None:
            self.nba_dot_com_player_id = nba_dot_com_player_id

    @property
    def player_id(self):
        """Gets the player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this NbaStatsPlayer.


        :param player_id: The player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._player_id = player_id

    @property
    def sports_data_id(self):
        """Gets the sports_data_id of this NbaStatsPlayer.  # noqa: E501


        :return: The sports_data_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._sports_data_id

    @sports_data_id.setter
    def sports_data_id(self, sports_data_id):
        """Sets the sports_data_id of this NbaStatsPlayer.


        :param sports_data_id: The sports_data_id of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._sports_data_id = sports_data_id

    @property
    def status(self):
        """Gets the status of this NbaStatsPlayer.  # noqa: E501


        :return: The status of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this NbaStatsPlayer.


        :param status: The status of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def team_id(self):
        """Gets the team_id of this NbaStatsPlayer.  # noqa: E501


        :return: The team_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this NbaStatsPlayer.


        :param team_id: The team_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._team_id = team_id

    @property
    def team(self):
        """Gets the team of this NbaStatsPlayer.  # noqa: E501


        :return: The team of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this NbaStatsPlayer.


        :param team: The team of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._team = team

    @property
    def jersey(self):
        """Gets the jersey of this NbaStatsPlayer.  # noqa: E501


        :return: The jersey of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._jersey

    @jersey.setter
    def jersey(self, jersey):
        """Sets the jersey of this NbaStatsPlayer.


        :param jersey: The jersey of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._jersey = jersey

    @property
    def position_category(self):
        """Gets the position_category of this NbaStatsPlayer.  # noqa: E501


        :return: The position_category of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._position_category

    @position_category.setter
    def position_category(self, position_category):
        """Sets the position_category of this NbaStatsPlayer.


        :param position_category: The position_category of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._position_category = position_category

    @property
    def position(self):
        """Gets the position of this NbaStatsPlayer.  # noqa: E501


        :return: The position of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this NbaStatsPlayer.


        :param position: The position of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._position = position

    @property
    def first_name(self):
        """Gets the first_name of this NbaStatsPlayer.  # noqa: E501


        :return: The first_name of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this NbaStatsPlayer.


        :param first_name: The first_name of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this NbaStatsPlayer.  # noqa: E501


        :return: The last_name of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this NbaStatsPlayer.


        :param last_name: The last_name of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def height(self):
        """Gets the height of this NbaStatsPlayer.  # noqa: E501


        :return: The height of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this NbaStatsPlayer.


        :param height: The height of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._height = height

    @property
    def weight(self):
        """Gets the weight of this NbaStatsPlayer.  # noqa: E501


        :return: The weight of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this NbaStatsPlayer.


        :param weight: The weight of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._weight = weight

    @property
    def birth_date(self):
        """Gets the birth_date of this NbaStatsPlayer.  # noqa: E501


        :return: The birth_date of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._birth_date

    @birth_date.setter
    def birth_date(self, birth_date):
        """Sets the birth_date of this NbaStatsPlayer.


        :param birth_date: The birth_date of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._birth_date = birth_date

    @property
    def birth_city(self):
        """Gets the birth_city of this NbaStatsPlayer.  # noqa: E501


        :return: The birth_city of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._birth_city

    @birth_city.setter
    def birth_city(self, birth_city):
        """Sets the birth_city of this NbaStatsPlayer.


        :param birth_city: The birth_city of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._birth_city = birth_city

    @property
    def birth_state(self):
        """Gets the birth_state of this NbaStatsPlayer.  # noqa: E501


        :return: The birth_state of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._birth_state

    @birth_state.setter
    def birth_state(self, birth_state):
        """Sets the birth_state of this NbaStatsPlayer.


        :param birth_state: The birth_state of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._birth_state = birth_state

    @property
    def birth_country(self):
        """Gets the birth_country of this NbaStatsPlayer.  # noqa: E501


        :return: The birth_country of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._birth_country

    @birth_country.setter
    def birth_country(self, birth_country):
        """Sets the birth_country of this NbaStatsPlayer.


        :param birth_country: The birth_country of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._birth_country = birth_country

    @property
    def high_school(self):
        """Gets the high_school of this NbaStatsPlayer.  # noqa: E501


        :return: The high_school of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._high_school

    @high_school.setter
    def high_school(self, high_school):
        """Sets the high_school of this NbaStatsPlayer.


        :param high_school: The high_school of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._high_school = high_school

    @property
    def college(self):
        """Gets the college of this NbaStatsPlayer.  # noqa: E501


        :return: The college of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._college

    @college.setter
    def college(self, college):
        """Sets the college of this NbaStatsPlayer.


        :param college: The college of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._college = college

    @property
    def salary(self):
        """Gets the salary of this NbaStatsPlayer.  # noqa: E501


        :return: The salary of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._salary

    @salary.setter
    def salary(self, salary):
        """Sets the salary of this NbaStatsPlayer.


        :param salary: The salary of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._salary = salary

    @property
    def photo_url(self):
        """Gets the photo_url of this NbaStatsPlayer.  # noqa: E501


        :return: The photo_url of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._photo_url

    @photo_url.setter
    def photo_url(self, photo_url):
        """Sets the photo_url of this NbaStatsPlayer.


        :param photo_url: The photo_url of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._photo_url = photo_url

    @property
    def experience(self):
        """Gets the experience of this NbaStatsPlayer.  # noqa: E501


        :return: The experience of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._experience

    @experience.setter
    def experience(self, experience):
        """Sets the experience of this NbaStatsPlayer.


        :param experience: The experience of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._experience = experience

    @property
    def sport_radar_player_id(self):
        """Gets the sport_radar_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The sport_radar_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._sport_radar_player_id

    @sport_radar_player_id.setter
    def sport_radar_player_id(self, sport_radar_player_id):
        """Sets the sport_radar_player_id of this NbaStatsPlayer.


        :param sport_radar_player_id: The sport_radar_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._sport_radar_player_id = sport_radar_player_id

    @property
    def rotoworld_player_id(self):
        """Gets the rotoworld_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The rotoworld_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._rotoworld_player_id

    @rotoworld_player_id.setter
    def rotoworld_player_id(self, rotoworld_player_id):
        """Sets the rotoworld_player_id of this NbaStatsPlayer.


        :param rotoworld_player_id: The rotoworld_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._rotoworld_player_id = rotoworld_player_id

    @property
    def roto_wire_player_id(self):
        """Gets the roto_wire_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The roto_wire_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._roto_wire_player_id

    @roto_wire_player_id.setter
    def roto_wire_player_id(self, roto_wire_player_id):
        """Sets the roto_wire_player_id of this NbaStatsPlayer.


        :param roto_wire_player_id: The roto_wire_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._roto_wire_player_id = roto_wire_player_id

    @property
    def fantasy_alarm_player_id(self):
        """Gets the fantasy_alarm_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The fantasy_alarm_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._fantasy_alarm_player_id

    @fantasy_alarm_player_id.setter
    def fantasy_alarm_player_id(self, fantasy_alarm_player_id):
        """Sets the fantasy_alarm_player_id of this NbaStatsPlayer.


        :param fantasy_alarm_player_id: The fantasy_alarm_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._fantasy_alarm_player_id = fantasy_alarm_player_id

    @property
    def stats_player_id(self):
        """Gets the stats_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The stats_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._stats_player_id

    @stats_player_id.setter
    def stats_player_id(self, stats_player_id):
        """Sets the stats_player_id of this NbaStatsPlayer.


        :param stats_player_id: The stats_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._stats_player_id = stats_player_id

    @property
    def sports_direct_player_id(self):
        """Gets the sports_direct_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The sports_direct_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._sports_direct_player_id

    @sports_direct_player_id.setter
    def sports_direct_player_id(self, sports_direct_player_id):
        """Sets the sports_direct_player_id of this NbaStatsPlayer.


        :param sports_direct_player_id: The sports_direct_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._sports_direct_player_id = sports_direct_player_id

    @property
    def xml_team_player_id(self):
        """Gets the xml_team_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The xml_team_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._xml_team_player_id

    @xml_team_player_id.setter
    def xml_team_player_id(self, xml_team_player_id):
        """Sets the xml_team_player_id of this NbaStatsPlayer.


        :param xml_team_player_id: The xml_team_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._xml_team_player_id = xml_team_player_id

    @property
    def injury_status(self):
        """Gets the injury_status of this NbaStatsPlayer.  # noqa: E501


        :return: The injury_status of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._injury_status

    @injury_status.setter
    def injury_status(self, injury_status):
        """Sets the injury_status of this NbaStatsPlayer.


        :param injury_status: The injury_status of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._injury_status = injury_status

    @property
    def injury_body_part(self):
        """Gets the injury_body_part of this NbaStatsPlayer.  # noqa: E501


        :return: The injury_body_part of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._injury_body_part

    @injury_body_part.setter
    def injury_body_part(self, injury_body_part):
        """Sets the injury_body_part of this NbaStatsPlayer.


        :param injury_body_part: The injury_body_part of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._injury_body_part = injury_body_part

    @property
    def injury_start_date(self):
        """Gets the injury_start_date of this NbaStatsPlayer.  # noqa: E501


        :return: The injury_start_date of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._injury_start_date

    @injury_start_date.setter
    def injury_start_date(self, injury_start_date):
        """Sets the injury_start_date of this NbaStatsPlayer.


        :param injury_start_date: The injury_start_date of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._injury_start_date = injury_start_date

    @property
    def injury_notes(self):
        """Gets the injury_notes of this NbaStatsPlayer.  # noqa: E501


        :return: The injury_notes of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._injury_notes

    @injury_notes.setter
    def injury_notes(self, injury_notes):
        """Sets the injury_notes of this NbaStatsPlayer.


        :param injury_notes: The injury_notes of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._injury_notes = injury_notes

    @property
    def fan_duel_player_id(self):
        """Gets the fan_duel_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The fan_duel_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._fan_duel_player_id

    @fan_duel_player_id.setter
    def fan_duel_player_id(self, fan_duel_player_id):
        """Sets the fan_duel_player_id of this NbaStatsPlayer.


        :param fan_duel_player_id: The fan_duel_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._fan_duel_player_id = fan_duel_player_id

    @property
    def draft_kings_player_id(self):
        """Gets the draft_kings_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The draft_kings_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._draft_kings_player_id

    @draft_kings_player_id.setter
    def draft_kings_player_id(self, draft_kings_player_id):
        """Sets the draft_kings_player_id of this NbaStatsPlayer.


        :param draft_kings_player_id: The draft_kings_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._draft_kings_player_id = draft_kings_player_id

    @property
    def yahoo_player_id(self):
        """Gets the yahoo_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The yahoo_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._yahoo_player_id

    @yahoo_player_id.setter
    def yahoo_player_id(self, yahoo_player_id):
        """Sets the yahoo_player_id of this NbaStatsPlayer.


        :param yahoo_player_id: The yahoo_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._yahoo_player_id = yahoo_player_id

    @property
    def fan_duel_name(self):
        """Gets the fan_duel_name of this NbaStatsPlayer.  # noqa: E501


        :return: The fan_duel_name of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._fan_duel_name

    @fan_duel_name.setter
    def fan_duel_name(self, fan_duel_name):
        """Sets the fan_duel_name of this NbaStatsPlayer.


        :param fan_duel_name: The fan_duel_name of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._fan_duel_name = fan_duel_name

    @property
    def draft_kings_name(self):
        """Gets the draft_kings_name of this NbaStatsPlayer.  # noqa: E501


        :return: The draft_kings_name of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._draft_kings_name

    @draft_kings_name.setter
    def draft_kings_name(self, draft_kings_name):
        """Sets the draft_kings_name of this NbaStatsPlayer.


        :param draft_kings_name: The draft_kings_name of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._draft_kings_name = draft_kings_name

    @property
    def yahoo_name(self):
        """Gets the yahoo_name of this NbaStatsPlayer.  # noqa: E501


        :return: The yahoo_name of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._yahoo_name

    @yahoo_name.setter
    def yahoo_name(self, yahoo_name):
        """Sets the yahoo_name of this NbaStatsPlayer.


        :param yahoo_name: The yahoo_name of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._yahoo_name = yahoo_name

    @property
    def depth_chart_position(self):
        """Gets the depth_chart_position of this NbaStatsPlayer.  # noqa: E501


        :return: The depth_chart_position of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._depth_chart_position

    @depth_chart_position.setter
    def depth_chart_position(self, depth_chart_position):
        """Sets the depth_chart_position of this NbaStatsPlayer.


        :param depth_chart_position: The depth_chart_position of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._depth_chart_position = depth_chart_position

    @property
    def depth_chart_order(self):
        """Gets the depth_chart_order of this NbaStatsPlayer.  # noqa: E501


        :return: The depth_chart_order of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._depth_chart_order

    @depth_chart_order.setter
    def depth_chart_order(self, depth_chart_order):
        """Sets the depth_chart_order of this NbaStatsPlayer.


        :param depth_chart_order: The depth_chart_order of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._depth_chart_order = depth_chart_order

    @property
    def global_team_id(self):
        """Gets the global_team_id of this NbaStatsPlayer.  # noqa: E501


        :return: The global_team_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._global_team_id

    @global_team_id.setter
    def global_team_id(self, global_team_id):
        """Sets the global_team_id of this NbaStatsPlayer.


        :param global_team_id: The global_team_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._global_team_id = global_team_id

    @property
    def fantasy_draft_name(self):
        """Gets the fantasy_draft_name of this NbaStatsPlayer.  # noqa: E501


        :return: The fantasy_draft_name of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._fantasy_draft_name

    @fantasy_draft_name.setter
    def fantasy_draft_name(self, fantasy_draft_name):
        """Sets the fantasy_draft_name of this NbaStatsPlayer.


        :param fantasy_draft_name: The fantasy_draft_name of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._fantasy_draft_name = fantasy_draft_name

    @property
    def fantasy_draft_player_id(self):
        """Gets the fantasy_draft_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The fantasy_draft_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._fantasy_draft_player_id

    @fantasy_draft_player_id.setter
    def fantasy_draft_player_id(self, fantasy_draft_player_id):
        """Sets the fantasy_draft_player_id of this NbaStatsPlayer.


        :param fantasy_draft_player_id: The fantasy_draft_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._fantasy_draft_player_id = fantasy_draft_player_id

    @property
    def usa_today_player_id(self):
        """Gets the usa_today_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The usa_today_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._usa_today_player_id

    @usa_today_player_id.setter
    def usa_today_player_id(self, usa_today_player_id):
        """Sets the usa_today_player_id of this NbaStatsPlayer.


        :param usa_today_player_id: The usa_today_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._usa_today_player_id = usa_today_player_id

    @property
    def usa_today_headshot_url(self):
        """Gets the usa_today_headshot_url of this NbaStatsPlayer.  # noqa: E501


        :return: The usa_today_headshot_url of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._usa_today_headshot_url

    @usa_today_headshot_url.setter
    def usa_today_headshot_url(self, usa_today_headshot_url):
        """Sets the usa_today_headshot_url of this NbaStatsPlayer.


        :param usa_today_headshot_url: The usa_today_headshot_url of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._usa_today_headshot_url = usa_today_headshot_url

    @property
    def usa_today_headshot_no_background_url(self):
        """Gets the usa_today_headshot_no_background_url of this NbaStatsPlayer.  # noqa: E501


        :return: The usa_today_headshot_no_background_url of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._usa_today_headshot_no_background_url

    @usa_today_headshot_no_background_url.setter
    def usa_today_headshot_no_background_url(self, usa_today_headshot_no_background_url):
        """Sets the usa_today_headshot_no_background_url of this NbaStatsPlayer.


        :param usa_today_headshot_no_background_url: The usa_today_headshot_no_background_url of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._usa_today_headshot_no_background_url = usa_today_headshot_no_background_url

    @property
    def usa_today_headshot_updated(self):
        """Gets the usa_today_headshot_updated of this NbaStatsPlayer.  # noqa: E501


        :return: The usa_today_headshot_updated of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._usa_today_headshot_updated

    @usa_today_headshot_updated.setter
    def usa_today_headshot_updated(self, usa_today_headshot_updated):
        """Sets the usa_today_headshot_updated of this NbaStatsPlayer.


        :param usa_today_headshot_updated: The usa_today_headshot_updated of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._usa_today_headshot_updated = usa_today_headshot_updated

    @property
    def usa_today_headshot_no_background_updated(self):
        """Gets the usa_today_headshot_no_background_updated of this NbaStatsPlayer.  # noqa: E501


        :return: The usa_today_headshot_no_background_updated of this NbaStatsPlayer.  # noqa: E501
        :rtype: str
        """
        return self._usa_today_headshot_no_background_updated

    @usa_today_headshot_no_background_updated.setter
    def usa_today_headshot_no_background_updated(self, usa_today_headshot_no_background_updated):
        """Sets the usa_today_headshot_no_background_updated of this NbaStatsPlayer.


        :param usa_today_headshot_no_background_updated: The usa_today_headshot_no_background_updated of this NbaStatsPlayer.  # noqa: E501
        :type: str
        """

        self._usa_today_headshot_no_background_updated = usa_today_headshot_no_background_updated

    @property
    def nba_dot_com_player_id(self):
        """Gets the nba_dot_com_player_id of this NbaStatsPlayer.  # noqa: E501


        :return: The nba_dot_com_player_id of this NbaStatsPlayer.  # noqa: E501
        :rtype: int
        """
        return self._nba_dot_com_player_id

    @nba_dot_com_player_id.setter
    def nba_dot_com_player_id(self, nba_dot_com_player_id):
        """Sets the nba_dot_com_player_id of this NbaStatsPlayer.


        :param nba_dot_com_player_id: The nba_dot_com_player_id of this NbaStatsPlayer.  # noqa: E501
        :type: int
        """

        self._nba_dot_com_player_id = nba_dot_com_player_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NbaStatsPlayer, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NbaStatsPlayer):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
