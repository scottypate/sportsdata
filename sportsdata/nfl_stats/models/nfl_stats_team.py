# coding: utf-8

"""
    NFL v3 Stats

    NFL rosters, player stats, team stats, and fantasy stats API.  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class NflStatsTeam(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'key': 'str',
        'team_id': 'int',
        'player_id': 'int',
        'city': 'str',
        'name': 'str',
        'conference': 'str',
        'division': 'str',
        'full_name': 'str',
        'stadium_id': 'int',
        'bye_week': 'int',
        'average_draft_position': 'float',
        'average_draft_position_ppr': 'float',
        'head_coach': 'str',
        'offensive_coordinator': 'str',
        'defensive_coordinator': 'str',
        'special_teams_coach': 'str',
        'offensive_scheme': 'str',
        'defensive_scheme': 'str',
        'upcoming_salary': 'int',
        'upcoming_opponent': 'str',
        'upcoming_opponent_rank': 'int',
        'upcoming_opponent_position_rank': 'int',
        'upcoming_fan_duel_salary': 'int',
        'upcoming_draft_kings_salary': 'int',
        'upcoming_yahoo_salary': 'int',
        'primary_color': 'str',
        'secondary_color': 'str',
        'tertiary_color': 'str',
        'quaternary_color': 'str',
        'wikipedia_logo_url': 'str',
        'wikipedia_word_mark_url': 'str',
        'global_team_id': 'int',
        'draft_kings_name': 'str',
        'draft_kings_player_id': 'int',
        'fan_duel_name': 'str',
        'fan_duel_player_id': 'int',
        'fantasy_draft_name': 'str',
        'fantasy_draft_player_id': 'int',
        'yahoo_name': 'str',
        'yahoo_player_id': 'int',
        'stadium_details': 'NflStatsStadium',
        'average_draft_position2_qb': 'float',
        'average_draft_position_dynasty': 'float'
    }

    attribute_map = {
        'key': 'Key',
        'team_id': 'TeamID',
        'player_id': 'PlayerID',
        'city': 'City',
        'name': 'Name',
        'conference': 'Conference',
        'division': 'Division',
        'full_name': 'FullName',
        'stadium_id': 'StadiumID',
        'bye_week': 'ByeWeek',
        'average_draft_position': 'AverageDraftPosition',
        'average_draft_position_ppr': 'AverageDraftPositionPPR',
        'head_coach': 'HeadCoach',
        'offensive_coordinator': 'OffensiveCoordinator',
        'defensive_coordinator': 'DefensiveCoordinator',
        'special_teams_coach': 'SpecialTeamsCoach',
        'offensive_scheme': 'OffensiveScheme',
        'defensive_scheme': 'DefensiveScheme',
        'upcoming_salary': 'UpcomingSalary',
        'upcoming_opponent': 'UpcomingOpponent',
        'upcoming_opponent_rank': 'UpcomingOpponentRank',
        'upcoming_opponent_position_rank': 'UpcomingOpponentPositionRank',
        'upcoming_fan_duel_salary': 'UpcomingFanDuelSalary',
        'upcoming_draft_kings_salary': 'UpcomingDraftKingsSalary',
        'upcoming_yahoo_salary': 'UpcomingYahooSalary',
        'primary_color': 'PrimaryColor',
        'secondary_color': 'SecondaryColor',
        'tertiary_color': 'TertiaryColor',
        'quaternary_color': 'QuaternaryColor',
        'wikipedia_logo_url': 'WikipediaLogoUrl',
        'wikipedia_word_mark_url': 'WikipediaWordMarkUrl',
        'global_team_id': 'GlobalTeamID',
        'draft_kings_name': 'DraftKingsName',
        'draft_kings_player_id': 'DraftKingsPlayerID',
        'fan_duel_name': 'FanDuelName',
        'fan_duel_player_id': 'FanDuelPlayerID',
        'fantasy_draft_name': 'FantasyDraftName',
        'fantasy_draft_player_id': 'FantasyDraftPlayerID',
        'yahoo_name': 'YahooName',
        'yahoo_player_id': 'YahooPlayerID',
        'stadium_details': 'StadiumDetails',
        'average_draft_position2_qb': 'AverageDraftPosition2QB',
        'average_draft_position_dynasty': 'AverageDraftPositionDynasty'
    }

    def __init__(self, key=None, team_id=None, player_id=None, city=None, name=None, conference=None, division=None, full_name=None, stadium_id=None, bye_week=None, average_draft_position=None, average_draft_position_ppr=None, head_coach=None, offensive_coordinator=None, defensive_coordinator=None, special_teams_coach=None, offensive_scheme=None, defensive_scheme=None, upcoming_salary=None, upcoming_opponent=None, upcoming_opponent_rank=None, upcoming_opponent_position_rank=None, upcoming_fan_duel_salary=None, upcoming_draft_kings_salary=None, upcoming_yahoo_salary=None, primary_color=None, secondary_color=None, tertiary_color=None, quaternary_color=None, wikipedia_logo_url=None, wikipedia_word_mark_url=None, global_team_id=None, draft_kings_name=None, draft_kings_player_id=None, fan_duel_name=None, fan_duel_player_id=None, fantasy_draft_name=None, fantasy_draft_player_id=None, yahoo_name=None, yahoo_player_id=None, stadium_details=None, average_draft_position2_qb=None, average_draft_position_dynasty=None):  # noqa: E501
        """NflStatsTeam - a model defined in Swagger"""  # noqa: E501
        self._key = None
        self._team_id = None
        self._player_id = None
        self._city = None
        self._name = None
        self._conference = None
        self._division = None
        self._full_name = None
        self._stadium_id = None
        self._bye_week = None
        self._average_draft_position = None
        self._average_draft_position_ppr = None
        self._head_coach = None
        self._offensive_coordinator = None
        self._defensive_coordinator = None
        self._special_teams_coach = None
        self._offensive_scheme = None
        self._defensive_scheme = None
        self._upcoming_salary = None
        self._upcoming_opponent = None
        self._upcoming_opponent_rank = None
        self._upcoming_opponent_position_rank = None
        self._upcoming_fan_duel_salary = None
        self._upcoming_draft_kings_salary = None
        self._upcoming_yahoo_salary = None
        self._primary_color = None
        self._secondary_color = None
        self._tertiary_color = None
        self._quaternary_color = None
        self._wikipedia_logo_url = None
        self._wikipedia_word_mark_url = None
        self._global_team_id = None
        self._draft_kings_name = None
        self._draft_kings_player_id = None
        self._fan_duel_name = None
        self._fan_duel_player_id = None
        self._fantasy_draft_name = None
        self._fantasy_draft_player_id = None
        self._yahoo_name = None
        self._yahoo_player_id = None
        self._stadium_details = None
        self._average_draft_position2_qb = None
        self._average_draft_position_dynasty = None
        self.discriminator = None
        if key is not None:
            self.key = key
        if team_id is not None:
            self.team_id = team_id
        if player_id is not None:
            self.player_id = player_id
        if city is not None:
            self.city = city
        if name is not None:
            self.name = name
        if conference is not None:
            self.conference = conference
        if division is not None:
            self.division = division
        if full_name is not None:
            self.full_name = full_name
        if stadium_id is not None:
            self.stadium_id = stadium_id
        if bye_week is not None:
            self.bye_week = bye_week
        if average_draft_position is not None:
            self.average_draft_position = average_draft_position
        if average_draft_position_ppr is not None:
            self.average_draft_position_ppr = average_draft_position_ppr
        if head_coach is not None:
            self.head_coach = head_coach
        if offensive_coordinator is not None:
            self.offensive_coordinator = offensive_coordinator
        if defensive_coordinator is not None:
            self.defensive_coordinator = defensive_coordinator
        if special_teams_coach is not None:
            self.special_teams_coach = special_teams_coach
        if offensive_scheme is not None:
            self.offensive_scheme = offensive_scheme
        if defensive_scheme is not None:
            self.defensive_scheme = defensive_scheme
        if upcoming_salary is not None:
            self.upcoming_salary = upcoming_salary
        if upcoming_opponent is not None:
            self.upcoming_opponent = upcoming_opponent
        if upcoming_opponent_rank is not None:
            self.upcoming_opponent_rank = upcoming_opponent_rank
        if upcoming_opponent_position_rank is not None:
            self.upcoming_opponent_position_rank = upcoming_opponent_position_rank
        if upcoming_fan_duel_salary is not None:
            self.upcoming_fan_duel_salary = upcoming_fan_duel_salary
        if upcoming_draft_kings_salary is not None:
            self.upcoming_draft_kings_salary = upcoming_draft_kings_salary
        if upcoming_yahoo_salary is not None:
            self.upcoming_yahoo_salary = upcoming_yahoo_salary
        if primary_color is not None:
            self.primary_color = primary_color
        if secondary_color is not None:
            self.secondary_color = secondary_color
        if tertiary_color is not None:
            self.tertiary_color = tertiary_color
        if quaternary_color is not None:
            self.quaternary_color = quaternary_color
        if wikipedia_logo_url is not None:
            self.wikipedia_logo_url = wikipedia_logo_url
        if wikipedia_word_mark_url is not None:
            self.wikipedia_word_mark_url = wikipedia_word_mark_url
        if global_team_id is not None:
            self.global_team_id = global_team_id
        if draft_kings_name is not None:
            self.draft_kings_name = draft_kings_name
        if draft_kings_player_id is not None:
            self.draft_kings_player_id = draft_kings_player_id
        if fan_duel_name is not None:
            self.fan_duel_name = fan_duel_name
        if fan_duel_player_id is not None:
            self.fan_duel_player_id = fan_duel_player_id
        if fantasy_draft_name is not None:
            self.fantasy_draft_name = fantasy_draft_name
        if fantasy_draft_player_id is not None:
            self.fantasy_draft_player_id = fantasy_draft_player_id
        if yahoo_name is not None:
            self.yahoo_name = yahoo_name
        if yahoo_player_id is not None:
            self.yahoo_player_id = yahoo_player_id
        if stadium_details is not None:
            self.stadium_details = stadium_details
        if average_draft_position2_qb is not None:
            self.average_draft_position2_qb = average_draft_position2_qb
        if average_draft_position_dynasty is not None:
            self.average_draft_position_dynasty = average_draft_position_dynasty

    @property
    def key(self):
        """Gets the key of this NflStatsTeam.  # noqa: E501


        :return: The key of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this NflStatsTeam.


        :param key: The key of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._key = key

    @property
    def team_id(self):
        """Gets the team_id of this NflStatsTeam.  # noqa: E501


        :return: The team_id of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this NflStatsTeam.


        :param team_id: The team_id of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._team_id = team_id

    @property
    def player_id(self):
        """Gets the player_id of this NflStatsTeam.  # noqa: E501


        :return: The player_id of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this NflStatsTeam.


        :param player_id: The player_id of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._player_id = player_id

    @property
    def city(self):
        """Gets the city of this NflStatsTeam.  # noqa: E501


        :return: The city of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this NflStatsTeam.


        :param city: The city of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def name(self):
        """Gets the name of this NflStatsTeam.  # noqa: E501


        :return: The name of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NflStatsTeam.


        :param name: The name of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def conference(self):
        """Gets the conference of this NflStatsTeam.  # noqa: E501


        :return: The conference of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._conference

    @conference.setter
    def conference(self, conference):
        """Sets the conference of this NflStatsTeam.


        :param conference: The conference of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._conference = conference

    @property
    def division(self):
        """Gets the division of this NflStatsTeam.  # noqa: E501


        :return: The division of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._division

    @division.setter
    def division(self, division):
        """Sets the division of this NflStatsTeam.


        :param division: The division of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._division = division

    @property
    def full_name(self):
        """Gets the full_name of this NflStatsTeam.  # noqa: E501


        :return: The full_name of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this NflStatsTeam.


        :param full_name: The full_name of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._full_name = full_name

    @property
    def stadium_id(self):
        """Gets the stadium_id of this NflStatsTeam.  # noqa: E501


        :return: The stadium_id of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._stadium_id

    @stadium_id.setter
    def stadium_id(self, stadium_id):
        """Sets the stadium_id of this NflStatsTeam.


        :param stadium_id: The stadium_id of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._stadium_id = stadium_id

    @property
    def bye_week(self):
        """Gets the bye_week of this NflStatsTeam.  # noqa: E501


        :return: The bye_week of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._bye_week

    @bye_week.setter
    def bye_week(self, bye_week):
        """Sets the bye_week of this NflStatsTeam.


        :param bye_week: The bye_week of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._bye_week = bye_week

    @property
    def average_draft_position(self):
        """Gets the average_draft_position of this NflStatsTeam.  # noqa: E501


        :return: The average_draft_position of this NflStatsTeam.  # noqa: E501
        :rtype: float
        """
        return self._average_draft_position

    @average_draft_position.setter
    def average_draft_position(self, average_draft_position):
        """Sets the average_draft_position of this NflStatsTeam.


        :param average_draft_position: The average_draft_position of this NflStatsTeam.  # noqa: E501
        :type: float
        """

        self._average_draft_position = average_draft_position

    @property
    def average_draft_position_ppr(self):
        """Gets the average_draft_position_ppr of this NflStatsTeam.  # noqa: E501


        :return: The average_draft_position_ppr of this NflStatsTeam.  # noqa: E501
        :rtype: float
        """
        return self._average_draft_position_ppr

    @average_draft_position_ppr.setter
    def average_draft_position_ppr(self, average_draft_position_ppr):
        """Sets the average_draft_position_ppr of this NflStatsTeam.


        :param average_draft_position_ppr: The average_draft_position_ppr of this NflStatsTeam.  # noqa: E501
        :type: float
        """

        self._average_draft_position_ppr = average_draft_position_ppr

    @property
    def head_coach(self):
        """Gets the head_coach of this NflStatsTeam.  # noqa: E501


        :return: The head_coach of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._head_coach

    @head_coach.setter
    def head_coach(self, head_coach):
        """Sets the head_coach of this NflStatsTeam.


        :param head_coach: The head_coach of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._head_coach = head_coach

    @property
    def offensive_coordinator(self):
        """Gets the offensive_coordinator of this NflStatsTeam.  # noqa: E501


        :return: The offensive_coordinator of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._offensive_coordinator

    @offensive_coordinator.setter
    def offensive_coordinator(self, offensive_coordinator):
        """Sets the offensive_coordinator of this NflStatsTeam.


        :param offensive_coordinator: The offensive_coordinator of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._offensive_coordinator = offensive_coordinator

    @property
    def defensive_coordinator(self):
        """Gets the defensive_coordinator of this NflStatsTeam.  # noqa: E501


        :return: The defensive_coordinator of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._defensive_coordinator

    @defensive_coordinator.setter
    def defensive_coordinator(self, defensive_coordinator):
        """Sets the defensive_coordinator of this NflStatsTeam.


        :param defensive_coordinator: The defensive_coordinator of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._defensive_coordinator = defensive_coordinator

    @property
    def special_teams_coach(self):
        """Gets the special_teams_coach of this NflStatsTeam.  # noqa: E501


        :return: The special_teams_coach of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._special_teams_coach

    @special_teams_coach.setter
    def special_teams_coach(self, special_teams_coach):
        """Sets the special_teams_coach of this NflStatsTeam.


        :param special_teams_coach: The special_teams_coach of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._special_teams_coach = special_teams_coach

    @property
    def offensive_scheme(self):
        """Gets the offensive_scheme of this NflStatsTeam.  # noqa: E501


        :return: The offensive_scheme of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._offensive_scheme

    @offensive_scheme.setter
    def offensive_scheme(self, offensive_scheme):
        """Sets the offensive_scheme of this NflStatsTeam.


        :param offensive_scheme: The offensive_scheme of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._offensive_scheme = offensive_scheme

    @property
    def defensive_scheme(self):
        """Gets the defensive_scheme of this NflStatsTeam.  # noqa: E501


        :return: The defensive_scheme of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._defensive_scheme

    @defensive_scheme.setter
    def defensive_scheme(self, defensive_scheme):
        """Sets the defensive_scheme of this NflStatsTeam.


        :param defensive_scheme: The defensive_scheme of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._defensive_scheme = defensive_scheme

    @property
    def upcoming_salary(self):
        """Gets the upcoming_salary of this NflStatsTeam.  # noqa: E501


        :return: The upcoming_salary of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._upcoming_salary

    @upcoming_salary.setter
    def upcoming_salary(self, upcoming_salary):
        """Sets the upcoming_salary of this NflStatsTeam.


        :param upcoming_salary: The upcoming_salary of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._upcoming_salary = upcoming_salary

    @property
    def upcoming_opponent(self):
        """Gets the upcoming_opponent of this NflStatsTeam.  # noqa: E501


        :return: The upcoming_opponent of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._upcoming_opponent

    @upcoming_opponent.setter
    def upcoming_opponent(self, upcoming_opponent):
        """Sets the upcoming_opponent of this NflStatsTeam.


        :param upcoming_opponent: The upcoming_opponent of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._upcoming_opponent = upcoming_opponent

    @property
    def upcoming_opponent_rank(self):
        """Gets the upcoming_opponent_rank of this NflStatsTeam.  # noqa: E501


        :return: The upcoming_opponent_rank of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._upcoming_opponent_rank

    @upcoming_opponent_rank.setter
    def upcoming_opponent_rank(self, upcoming_opponent_rank):
        """Sets the upcoming_opponent_rank of this NflStatsTeam.


        :param upcoming_opponent_rank: The upcoming_opponent_rank of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._upcoming_opponent_rank = upcoming_opponent_rank

    @property
    def upcoming_opponent_position_rank(self):
        """Gets the upcoming_opponent_position_rank of this NflStatsTeam.  # noqa: E501


        :return: The upcoming_opponent_position_rank of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._upcoming_opponent_position_rank

    @upcoming_opponent_position_rank.setter
    def upcoming_opponent_position_rank(self, upcoming_opponent_position_rank):
        """Sets the upcoming_opponent_position_rank of this NflStatsTeam.


        :param upcoming_opponent_position_rank: The upcoming_opponent_position_rank of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._upcoming_opponent_position_rank = upcoming_opponent_position_rank

    @property
    def upcoming_fan_duel_salary(self):
        """Gets the upcoming_fan_duel_salary of this NflStatsTeam.  # noqa: E501


        :return: The upcoming_fan_duel_salary of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._upcoming_fan_duel_salary

    @upcoming_fan_duel_salary.setter
    def upcoming_fan_duel_salary(self, upcoming_fan_duel_salary):
        """Sets the upcoming_fan_duel_salary of this NflStatsTeam.


        :param upcoming_fan_duel_salary: The upcoming_fan_duel_salary of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._upcoming_fan_duel_salary = upcoming_fan_duel_salary

    @property
    def upcoming_draft_kings_salary(self):
        """Gets the upcoming_draft_kings_salary of this NflStatsTeam.  # noqa: E501


        :return: The upcoming_draft_kings_salary of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._upcoming_draft_kings_salary

    @upcoming_draft_kings_salary.setter
    def upcoming_draft_kings_salary(self, upcoming_draft_kings_salary):
        """Sets the upcoming_draft_kings_salary of this NflStatsTeam.


        :param upcoming_draft_kings_salary: The upcoming_draft_kings_salary of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._upcoming_draft_kings_salary = upcoming_draft_kings_salary

    @property
    def upcoming_yahoo_salary(self):
        """Gets the upcoming_yahoo_salary of this NflStatsTeam.  # noqa: E501


        :return: The upcoming_yahoo_salary of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._upcoming_yahoo_salary

    @upcoming_yahoo_salary.setter
    def upcoming_yahoo_salary(self, upcoming_yahoo_salary):
        """Sets the upcoming_yahoo_salary of this NflStatsTeam.


        :param upcoming_yahoo_salary: The upcoming_yahoo_salary of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._upcoming_yahoo_salary = upcoming_yahoo_salary

    @property
    def primary_color(self):
        """Gets the primary_color of this NflStatsTeam.  # noqa: E501


        :return: The primary_color of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._primary_color

    @primary_color.setter
    def primary_color(self, primary_color):
        """Sets the primary_color of this NflStatsTeam.


        :param primary_color: The primary_color of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._primary_color = primary_color

    @property
    def secondary_color(self):
        """Gets the secondary_color of this NflStatsTeam.  # noqa: E501


        :return: The secondary_color of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._secondary_color

    @secondary_color.setter
    def secondary_color(self, secondary_color):
        """Sets the secondary_color of this NflStatsTeam.


        :param secondary_color: The secondary_color of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._secondary_color = secondary_color

    @property
    def tertiary_color(self):
        """Gets the tertiary_color of this NflStatsTeam.  # noqa: E501


        :return: The tertiary_color of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._tertiary_color

    @tertiary_color.setter
    def tertiary_color(self, tertiary_color):
        """Sets the tertiary_color of this NflStatsTeam.


        :param tertiary_color: The tertiary_color of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._tertiary_color = tertiary_color

    @property
    def quaternary_color(self):
        """Gets the quaternary_color of this NflStatsTeam.  # noqa: E501


        :return: The quaternary_color of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._quaternary_color

    @quaternary_color.setter
    def quaternary_color(self, quaternary_color):
        """Sets the quaternary_color of this NflStatsTeam.


        :param quaternary_color: The quaternary_color of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._quaternary_color = quaternary_color

    @property
    def wikipedia_logo_url(self):
        """Gets the wikipedia_logo_url of this NflStatsTeam.  # noqa: E501


        :return: The wikipedia_logo_url of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._wikipedia_logo_url

    @wikipedia_logo_url.setter
    def wikipedia_logo_url(self, wikipedia_logo_url):
        """Sets the wikipedia_logo_url of this NflStatsTeam.


        :param wikipedia_logo_url: The wikipedia_logo_url of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._wikipedia_logo_url = wikipedia_logo_url

    @property
    def wikipedia_word_mark_url(self):
        """Gets the wikipedia_word_mark_url of this NflStatsTeam.  # noqa: E501


        :return: The wikipedia_word_mark_url of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._wikipedia_word_mark_url

    @wikipedia_word_mark_url.setter
    def wikipedia_word_mark_url(self, wikipedia_word_mark_url):
        """Sets the wikipedia_word_mark_url of this NflStatsTeam.


        :param wikipedia_word_mark_url: The wikipedia_word_mark_url of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._wikipedia_word_mark_url = wikipedia_word_mark_url

    @property
    def global_team_id(self):
        """Gets the global_team_id of this NflStatsTeam.  # noqa: E501


        :return: The global_team_id of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._global_team_id

    @global_team_id.setter
    def global_team_id(self, global_team_id):
        """Sets the global_team_id of this NflStatsTeam.


        :param global_team_id: The global_team_id of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._global_team_id = global_team_id

    @property
    def draft_kings_name(self):
        """Gets the draft_kings_name of this NflStatsTeam.  # noqa: E501


        :return: The draft_kings_name of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._draft_kings_name

    @draft_kings_name.setter
    def draft_kings_name(self, draft_kings_name):
        """Sets the draft_kings_name of this NflStatsTeam.


        :param draft_kings_name: The draft_kings_name of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._draft_kings_name = draft_kings_name

    @property
    def draft_kings_player_id(self):
        """Gets the draft_kings_player_id of this NflStatsTeam.  # noqa: E501


        :return: The draft_kings_player_id of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._draft_kings_player_id

    @draft_kings_player_id.setter
    def draft_kings_player_id(self, draft_kings_player_id):
        """Sets the draft_kings_player_id of this NflStatsTeam.


        :param draft_kings_player_id: The draft_kings_player_id of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._draft_kings_player_id = draft_kings_player_id

    @property
    def fan_duel_name(self):
        """Gets the fan_duel_name of this NflStatsTeam.  # noqa: E501


        :return: The fan_duel_name of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._fan_duel_name

    @fan_duel_name.setter
    def fan_duel_name(self, fan_duel_name):
        """Sets the fan_duel_name of this NflStatsTeam.


        :param fan_duel_name: The fan_duel_name of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._fan_duel_name = fan_duel_name

    @property
    def fan_duel_player_id(self):
        """Gets the fan_duel_player_id of this NflStatsTeam.  # noqa: E501


        :return: The fan_duel_player_id of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._fan_duel_player_id

    @fan_duel_player_id.setter
    def fan_duel_player_id(self, fan_duel_player_id):
        """Sets the fan_duel_player_id of this NflStatsTeam.


        :param fan_duel_player_id: The fan_duel_player_id of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._fan_duel_player_id = fan_duel_player_id

    @property
    def fantasy_draft_name(self):
        """Gets the fantasy_draft_name of this NflStatsTeam.  # noqa: E501


        :return: The fantasy_draft_name of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._fantasy_draft_name

    @fantasy_draft_name.setter
    def fantasy_draft_name(self, fantasy_draft_name):
        """Sets the fantasy_draft_name of this NflStatsTeam.


        :param fantasy_draft_name: The fantasy_draft_name of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._fantasy_draft_name = fantasy_draft_name

    @property
    def fantasy_draft_player_id(self):
        """Gets the fantasy_draft_player_id of this NflStatsTeam.  # noqa: E501


        :return: The fantasy_draft_player_id of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._fantasy_draft_player_id

    @fantasy_draft_player_id.setter
    def fantasy_draft_player_id(self, fantasy_draft_player_id):
        """Sets the fantasy_draft_player_id of this NflStatsTeam.


        :param fantasy_draft_player_id: The fantasy_draft_player_id of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._fantasy_draft_player_id = fantasy_draft_player_id

    @property
    def yahoo_name(self):
        """Gets the yahoo_name of this NflStatsTeam.  # noqa: E501


        :return: The yahoo_name of this NflStatsTeam.  # noqa: E501
        :rtype: str
        """
        return self._yahoo_name

    @yahoo_name.setter
    def yahoo_name(self, yahoo_name):
        """Sets the yahoo_name of this NflStatsTeam.


        :param yahoo_name: The yahoo_name of this NflStatsTeam.  # noqa: E501
        :type: str
        """

        self._yahoo_name = yahoo_name

    @property
    def yahoo_player_id(self):
        """Gets the yahoo_player_id of this NflStatsTeam.  # noqa: E501


        :return: The yahoo_player_id of this NflStatsTeam.  # noqa: E501
        :rtype: int
        """
        return self._yahoo_player_id

    @yahoo_player_id.setter
    def yahoo_player_id(self, yahoo_player_id):
        """Sets the yahoo_player_id of this NflStatsTeam.


        :param yahoo_player_id: The yahoo_player_id of this NflStatsTeam.  # noqa: E501
        :type: int
        """

        self._yahoo_player_id = yahoo_player_id

    @property
    def stadium_details(self):
        """Gets the stadium_details of this NflStatsTeam.  # noqa: E501


        :return: The stadium_details of this NflStatsTeam.  # noqa: E501
        :rtype: NflStatsStadium
        """
        return self._stadium_details

    @stadium_details.setter
    def stadium_details(self, stadium_details):
        """Sets the stadium_details of this NflStatsTeam.


        :param stadium_details: The stadium_details of this NflStatsTeam.  # noqa: E501
        :type: NflStatsStadium
        """

        self._stadium_details = stadium_details

    @property
    def average_draft_position2_qb(self):
        """Gets the average_draft_position2_qb of this NflStatsTeam.  # noqa: E501


        :return: The average_draft_position2_qb of this NflStatsTeam.  # noqa: E501
        :rtype: float
        """
        return self._average_draft_position2_qb

    @average_draft_position2_qb.setter
    def average_draft_position2_qb(self, average_draft_position2_qb):
        """Sets the average_draft_position2_qb of this NflStatsTeam.


        :param average_draft_position2_qb: The average_draft_position2_qb of this NflStatsTeam.  # noqa: E501
        :type: float
        """

        self._average_draft_position2_qb = average_draft_position2_qb

    @property
    def average_draft_position_dynasty(self):
        """Gets the average_draft_position_dynasty of this NflStatsTeam.  # noqa: E501


        :return: The average_draft_position_dynasty of this NflStatsTeam.  # noqa: E501
        :rtype: float
        """
        return self._average_draft_position_dynasty

    @average_draft_position_dynasty.setter
    def average_draft_position_dynasty(self, average_draft_position_dynasty):
        """Sets the average_draft_position_dynasty of this NflStatsTeam.


        :param average_draft_position_dynasty: The average_draft_position_dynasty of this NflStatsTeam.  # noqa: E501
        :type: float
        """

        self._average_draft_position_dynasty = average_draft_position_dynasty

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NflStatsTeam, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NflStatsTeam):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
