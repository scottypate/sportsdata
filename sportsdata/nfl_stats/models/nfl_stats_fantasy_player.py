# coding: utf-8

"""
    NFL v3 Stats

    NFL rosters, player stats, team stats, and fantasy stats API.  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class NflStatsFantasyPlayer(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fantasy_player_key': 'str',
        'player_id': 'int',
        'name': 'str',
        'team': 'str',
        'position': 'str',
        'average_draft_position': 'float',
        'average_draft_position_ppr': 'float',
        'bye_week': 'int',
        'last_season_fantasy_points': 'float',
        'projected_fantasy_points': 'float',
        'auction_value': 'int',
        'auction_value_ppr': 'int',
        'average_draft_position_idp': 'int',
        'average_draft_position_rookie': 'float',
        'average_draft_position_dynasty': 'float',
        'average_draft_position2_qb': 'float'
    }

    attribute_map = {
        'fantasy_player_key': 'FantasyPlayerKey',
        'player_id': 'PlayerID',
        'name': 'Name',
        'team': 'Team',
        'position': 'Position',
        'average_draft_position': 'AverageDraftPosition',
        'average_draft_position_ppr': 'AverageDraftPositionPPR',
        'bye_week': 'ByeWeek',
        'last_season_fantasy_points': 'LastSeasonFantasyPoints',
        'projected_fantasy_points': 'ProjectedFantasyPoints',
        'auction_value': 'AuctionValue',
        'auction_value_ppr': 'AuctionValuePPR',
        'average_draft_position_idp': 'AverageDraftPositionIDP',
        'average_draft_position_rookie': 'AverageDraftPositionRookie',
        'average_draft_position_dynasty': 'AverageDraftPositionDynasty',
        'average_draft_position2_qb': 'AverageDraftPosition2QB'
    }

    def __init__(self, fantasy_player_key=None, player_id=None, name=None, team=None, position=None, average_draft_position=None, average_draft_position_ppr=None, bye_week=None, last_season_fantasy_points=None, projected_fantasy_points=None, auction_value=None, auction_value_ppr=None, average_draft_position_idp=None, average_draft_position_rookie=None, average_draft_position_dynasty=None, average_draft_position2_qb=None):  # noqa: E501
        """NflStatsFantasyPlayer - a model defined in Swagger"""  # noqa: E501
        self._fantasy_player_key = None
        self._player_id = None
        self._name = None
        self._team = None
        self._position = None
        self._average_draft_position = None
        self._average_draft_position_ppr = None
        self._bye_week = None
        self._last_season_fantasy_points = None
        self._projected_fantasy_points = None
        self._auction_value = None
        self._auction_value_ppr = None
        self._average_draft_position_idp = None
        self._average_draft_position_rookie = None
        self._average_draft_position_dynasty = None
        self._average_draft_position2_qb = None
        self.discriminator = None
        if fantasy_player_key is not None:
            self.fantasy_player_key = fantasy_player_key
        if player_id is not None:
            self.player_id = player_id
        if name is not None:
            self.name = name
        if team is not None:
            self.team = team
        if position is not None:
            self.position = position
        if average_draft_position is not None:
            self.average_draft_position = average_draft_position
        if average_draft_position_ppr is not None:
            self.average_draft_position_ppr = average_draft_position_ppr
        if bye_week is not None:
            self.bye_week = bye_week
        if last_season_fantasy_points is not None:
            self.last_season_fantasy_points = last_season_fantasy_points
        if projected_fantasy_points is not None:
            self.projected_fantasy_points = projected_fantasy_points
        if auction_value is not None:
            self.auction_value = auction_value
        if auction_value_ppr is not None:
            self.auction_value_ppr = auction_value_ppr
        if average_draft_position_idp is not None:
            self.average_draft_position_idp = average_draft_position_idp
        if average_draft_position_rookie is not None:
            self.average_draft_position_rookie = average_draft_position_rookie
        if average_draft_position_dynasty is not None:
            self.average_draft_position_dynasty = average_draft_position_dynasty
        if average_draft_position2_qb is not None:
            self.average_draft_position2_qb = average_draft_position2_qb

    @property
    def fantasy_player_key(self):
        """Gets the fantasy_player_key of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The fantasy_player_key of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: str
        """
        return self._fantasy_player_key

    @fantasy_player_key.setter
    def fantasy_player_key(self, fantasy_player_key):
        """Sets the fantasy_player_key of this NflStatsFantasyPlayer.


        :param fantasy_player_key: The fantasy_player_key of this NflStatsFantasyPlayer.  # noqa: E501
        :type: str
        """

        self._fantasy_player_key = fantasy_player_key

    @property
    def player_id(self):
        """Gets the player_id of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The player_id of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this NflStatsFantasyPlayer.


        :param player_id: The player_id of this NflStatsFantasyPlayer.  # noqa: E501
        :type: int
        """

        self._player_id = player_id

    @property
    def name(self):
        """Gets the name of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The name of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NflStatsFantasyPlayer.


        :param name: The name of this NflStatsFantasyPlayer.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def team(self):
        """Gets the team of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The team of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this NflStatsFantasyPlayer.


        :param team: The team of this NflStatsFantasyPlayer.  # noqa: E501
        :type: str
        """

        self._team = team

    @property
    def position(self):
        """Gets the position of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The position of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this NflStatsFantasyPlayer.


        :param position: The position of this NflStatsFantasyPlayer.  # noqa: E501
        :type: str
        """

        self._position = position

    @property
    def average_draft_position(self):
        """Gets the average_draft_position of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The average_draft_position of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: float
        """
        return self._average_draft_position

    @average_draft_position.setter
    def average_draft_position(self, average_draft_position):
        """Sets the average_draft_position of this NflStatsFantasyPlayer.


        :param average_draft_position: The average_draft_position of this NflStatsFantasyPlayer.  # noqa: E501
        :type: float
        """

        self._average_draft_position = average_draft_position

    @property
    def average_draft_position_ppr(self):
        """Gets the average_draft_position_ppr of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The average_draft_position_ppr of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: float
        """
        return self._average_draft_position_ppr

    @average_draft_position_ppr.setter
    def average_draft_position_ppr(self, average_draft_position_ppr):
        """Sets the average_draft_position_ppr of this NflStatsFantasyPlayer.


        :param average_draft_position_ppr: The average_draft_position_ppr of this NflStatsFantasyPlayer.  # noqa: E501
        :type: float
        """

        self._average_draft_position_ppr = average_draft_position_ppr

    @property
    def bye_week(self):
        """Gets the bye_week of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The bye_week of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: int
        """
        return self._bye_week

    @bye_week.setter
    def bye_week(self, bye_week):
        """Sets the bye_week of this NflStatsFantasyPlayer.


        :param bye_week: The bye_week of this NflStatsFantasyPlayer.  # noqa: E501
        :type: int
        """

        self._bye_week = bye_week

    @property
    def last_season_fantasy_points(self):
        """Gets the last_season_fantasy_points of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The last_season_fantasy_points of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: float
        """
        return self._last_season_fantasy_points

    @last_season_fantasy_points.setter
    def last_season_fantasy_points(self, last_season_fantasy_points):
        """Sets the last_season_fantasy_points of this NflStatsFantasyPlayer.


        :param last_season_fantasy_points: The last_season_fantasy_points of this NflStatsFantasyPlayer.  # noqa: E501
        :type: float
        """

        self._last_season_fantasy_points = last_season_fantasy_points

    @property
    def projected_fantasy_points(self):
        """Gets the projected_fantasy_points of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The projected_fantasy_points of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: float
        """
        return self._projected_fantasy_points

    @projected_fantasy_points.setter
    def projected_fantasy_points(self, projected_fantasy_points):
        """Sets the projected_fantasy_points of this NflStatsFantasyPlayer.


        :param projected_fantasy_points: The projected_fantasy_points of this NflStatsFantasyPlayer.  # noqa: E501
        :type: float
        """

        self._projected_fantasy_points = projected_fantasy_points

    @property
    def auction_value(self):
        """Gets the auction_value of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The auction_value of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: int
        """
        return self._auction_value

    @auction_value.setter
    def auction_value(self, auction_value):
        """Sets the auction_value of this NflStatsFantasyPlayer.


        :param auction_value: The auction_value of this NflStatsFantasyPlayer.  # noqa: E501
        :type: int
        """

        self._auction_value = auction_value

    @property
    def auction_value_ppr(self):
        """Gets the auction_value_ppr of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The auction_value_ppr of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: int
        """
        return self._auction_value_ppr

    @auction_value_ppr.setter
    def auction_value_ppr(self, auction_value_ppr):
        """Sets the auction_value_ppr of this NflStatsFantasyPlayer.


        :param auction_value_ppr: The auction_value_ppr of this NflStatsFantasyPlayer.  # noqa: E501
        :type: int
        """

        self._auction_value_ppr = auction_value_ppr

    @property
    def average_draft_position_idp(self):
        """Gets the average_draft_position_idp of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The average_draft_position_idp of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: int
        """
        return self._average_draft_position_idp

    @average_draft_position_idp.setter
    def average_draft_position_idp(self, average_draft_position_idp):
        """Sets the average_draft_position_idp of this NflStatsFantasyPlayer.


        :param average_draft_position_idp: The average_draft_position_idp of this NflStatsFantasyPlayer.  # noqa: E501
        :type: int
        """

        self._average_draft_position_idp = average_draft_position_idp

    @property
    def average_draft_position_rookie(self):
        """Gets the average_draft_position_rookie of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The average_draft_position_rookie of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: float
        """
        return self._average_draft_position_rookie

    @average_draft_position_rookie.setter
    def average_draft_position_rookie(self, average_draft_position_rookie):
        """Sets the average_draft_position_rookie of this NflStatsFantasyPlayer.


        :param average_draft_position_rookie: The average_draft_position_rookie of this NflStatsFantasyPlayer.  # noqa: E501
        :type: float
        """

        self._average_draft_position_rookie = average_draft_position_rookie

    @property
    def average_draft_position_dynasty(self):
        """Gets the average_draft_position_dynasty of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The average_draft_position_dynasty of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: float
        """
        return self._average_draft_position_dynasty

    @average_draft_position_dynasty.setter
    def average_draft_position_dynasty(self, average_draft_position_dynasty):
        """Sets the average_draft_position_dynasty of this NflStatsFantasyPlayer.


        :param average_draft_position_dynasty: The average_draft_position_dynasty of this NflStatsFantasyPlayer.  # noqa: E501
        :type: float
        """

        self._average_draft_position_dynasty = average_draft_position_dynasty

    @property
    def average_draft_position2_qb(self):
        """Gets the average_draft_position2_qb of this NflStatsFantasyPlayer.  # noqa: E501


        :return: The average_draft_position2_qb of this NflStatsFantasyPlayer.  # noqa: E501
        :rtype: float
        """
        return self._average_draft_position2_qb

    @average_draft_position2_qb.setter
    def average_draft_position2_qb(self, average_draft_position2_qb):
        """Sets the average_draft_position2_qb of this NflStatsFantasyPlayer.


        :param average_draft_position2_qb: The average_draft_position2_qb of this NflStatsFantasyPlayer.  # noqa: E501
        :type: float
        """

        self._average_draft_position2_qb = average_draft_position2_qb

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NflStatsFantasyPlayer, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NflStatsFantasyPlayer):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
