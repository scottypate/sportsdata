# coding: utf-8

"""
    NFL v3 Stats

    NFL rosters, player stats, team stats, and fantasy stats API.  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class NflStatsPlayerKickPuntReturns(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'player_game_id': 'int',
        'player_id': 'int',
        'short_name': 'str',
        'name': 'str',
        'team': 'str',
        'number': 'int',
        'position': 'str',
        'position_category': 'str',
        'fantasy_position': 'str',
        'fantasy_points': 'float',
        'updated': 'str',
        'kick_returns': 'int',
        'kick_return_yards': 'int',
        'kick_return_yards_per_attempt': 'float',
        'kick_return_long': 'int',
        'kick_return_touchdowns': 'int',
        'punt_returns': 'int',
        'punt_return_yards': 'int',
        'punt_return_yards_per_attempt': 'float',
        'punt_return_long': 'int',
        'punt_return_touchdowns': 'int',
        'fumbles_lost': 'int'
    }

    attribute_map = {
        'player_game_id': 'PlayerGameID',
        'player_id': 'PlayerID',
        'short_name': 'ShortName',
        'name': 'Name',
        'team': 'Team',
        'number': 'Number',
        'position': 'Position',
        'position_category': 'PositionCategory',
        'fantasy_position': 'FantasyPosition',
        'fantasy_points': 'FantasyPoints',
        'updated': 'Updated',
        'kick_returns': 'KickReturns',
        'kick_return_yards': 'KickReturnYards',
        'kick_return_yards_per_attempt': 'KickReturnYardsPerAttempt',
        'kick_return_long': 'KickReturnLong',
        'kick_return_touchdowns': 'KickReturnTouchdowns',
        'punt_returns': 'PuntReturns',
        'punt_return_yards': 'PuntReturnYards',
        'punt_return_yards_per_attempt': 'PuntReturnYardsPerAttempt',
        'punt_return_long': 'PuntReturnLong',
        'punt_return_touchdowns': 'PuntReturnTouchdowns',
        'fumbles_lost': 'FumblesLost'
    }

    def __init__(self, player_game_id=None, player_id=None, short_name=None, name=None, team=None, number=None, position=None, position_category=None, fantasy_position=None, fantasy_points=None, updated=None, kick_returns=None, kick_return_yards=None, kick_return_yards_per_attempt=None, kick_return_long=None, kick_return_touchdowns=None, punt_returns=None, punt_return_yards=None, punt_return_yards_per_attempt=None, punt_return_long=None, punt_return_touchdowns=None, fumbles_lost=None):  # noqa: E501
        """NflStatsPlayerKickPuntReturns - a model defined in Swagger"""  # noqa: E501
        self._player_game_id = None
        self._player_id = None
        self._short_name = None
        self._name = None
        self._team = None
        self._number = None
        self._position = None
        self._position_category = None
        self._fantasy_position = None
        self._fantasy_points = None
        self._updated = None
        self._kick_returns = None
        self._kick_return_yards = None
        self._kick_return_yards_per_attempt = None
        self._kick_return_long = None
        self._kick_return_touchdowns = None
        self._punt_returns = None
        self._punt_return_yards = None
        self._punt_return_yards_per_attempt = None
        self._punt_return_long = None
        self._punt_return_touchdowns = None
        self._fumbles_lost = None
        self.discriminator = None
        if player_game_id is not None:
            self.player_game_id = player_game_id
        if player_id is not None:
            self.player_id = player_id
        if short_name is not None:
            self.short_name = short_name
        if name is not None:
            self.name = name
        if team is not None:
            self.team = team
        if number is not None:
            self.number = number
        if position is not None:
            self.position = position
        if position_category is not None:
            self.position_category = position_category
        if fantasy_position is not None:
            self.fantasy_position = fantasy_position
        if fantasy_points is not None:
            self.fantasy_points = fantasy_points
        if updated is not None:
            self.updated = updated
        if kick_returns is not None:
            self.kick_returns = kick_returns
        if kick_return_yards is not None:
            self.kick_return_yards = kick_return_yards
        if kick_return_yards_per_attempt is not None:
            self.kick_return_yards_per_attempt = kick_return_yards_per_attempt
        if kick_return_long is not None:
            self.kick_return_long = kick_return_long
        if kick_return_touchdowns is not None:
            self.kick_return_touchdowns = kick_return_touchdowns
        if punt_returns is not None:
            self.punt_returns = punt_returns
        if punt_return_yards is not None:
            self.punt_return_yards = punt_return_yards
        if punt_return_yards_per_attempt is not None:
            self.punt_return_yards_per_attempt = punt_return_yards_per_attempt
        if punt_return_long is not None:
            self.punt_return_long = punt_return_long
        if punt_return_touchdowns is not None:
            self.punt_return_touchdowns = punt_return_touchdowns
        if fumbles_lost is not None:
            self.fumbles_lost = fumbles_lost

    @property
    def player_game_id(self):
        """Gets the player_game_id of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The player_game_id of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._player_game_id

    @player_game_id.setter
    def player_game_id(self, player_game_id):
        """Sets the player_game_id of this NflStatsPlayerKickPuntReturns.


        :param player_game_id: The player_game_id of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._player_game_id = player_game_id

    @property
    def player_id(self):
        """Gets the player_id of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The player_id of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this NflStatsPlayerKickPuntReturns.


        :param player_id: The player_id of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._player_id = player_id

    @property
    def short_name(self):
        """Gets the short_name of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The short_name of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this NflStatsPlayerKickPuntReturns.


        :param short_name: The short_name of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: str
        """

        self._short_name = short_name

    @property
    def name(self):
        """Gets the name of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The name of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NflStatsPlayerKickPuntReturns.


        :param name: The name of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def team(self):
        """Gets the team of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The team of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this NflStatsPlayerKickPuntReturns.


        :param team: The team of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: str
        """

        self._team = team

    @property
    def number(self):
        """Gets the number of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The number of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this NflStatsPlayerKickPuntReturns.


        :param number: The number of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._number = number

    @property
    def position(self):
        """Gets the position of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The position of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this NflStatsPlayerKickPuntReturns.


        :param position: The position of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: str
        """

        self._position = position

    @property
    def position_category(self):
        """Gets the position_category of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The position_category of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: str
        """
        return self._position_category

    @position_category.setter
    def position_category(self, position_category):
        """Sets the position_category of this NflStatsPlayerKickPuntReturns.


        :param position_category: The position_category of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: str
        """

        self._position_category = position_category

    @property
    def fantasy_position(self):
        """Gets the fantasy_position of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The fantasy_position of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: str
        """
        return self._fantasy_position

    @fantasy_position.setter
    def fantasy_position(self, fantasy_position):
        """Sets the fantasy_position of this NflStatsPlayerKickPuntReturns.


        :param fantasy_position: The fantasy_position of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: str
        """

        self._fantasy_position = fantasy_position

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The fantasy_points of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this NflStatsPlayerKickPuntReturns.


        :param fantasy_points: The fantasy_points of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: float
        """

        self._fantasy_points = fantasy_points

    @property
    def updated(self):
        """Gets the updated of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The updated of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this NflStatsPlayerKickPuntReturns.


        :param updated: The updated of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: str
        """

        self._updated = updated

    @property
    def kick_returns(self):
        """Gets the kick_returns of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The kick_returns of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._kick_returns

    @kick_returns.setter
    def kick_returns(self, kick_returns):
        """Sets the kick_returns of this NflStatsPlayerKickPuntReturns.


        :param kick_returns: The kick_returns of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._kick_returns = kick_returns

    @property
    def kick_return_yards(self):
        """Gets the kick_return_yards of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The kick_return_yards of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._kick_return_yards

    @kick_return_yards.setter
    def kick_return_yards(self, kick_return_yards):
        """Sets the kick_return_yards of this NflStatsPlayerKickPuntReturns.


        :param kick_return_yards: The kick_return_yards of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._kick_return_yards = kick_return_yards

    @property
    def kick_return_yards_per_attempt(self):
        """Gets the kick_return_yards_per_attempt of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The kick_return_yards_per_attempt of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: float
        """
        return self._kick_return_yards_per_attempt

    @kick_return_yards_per_attempt.setter
    def kick_return_yards_per_attempt(self, kick_return_yards_per_attempt):
        """Sets the kick_return_yards_per_attempt of this NflStatsPlayerKickPuntReturns.


        :param kick_return_yards_per_attempt: The kick_return_yards_per_attempt of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: float
        """

        self._kick_return_yards_per_attempt = kick_return_yards_per_attempt

    @property
    def kick_return_long(self):
        """Gets the kick_return_long of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The kick_return_long of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._kick_return_long

    @kick_return_long.setter
    def kick_return_long(self, kick_return_long):
        """Sets the kick_return_long of this NflStatsPlayerKickPuntReturns.


        :param kick_return_long: The kick_return_long of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._kick_return_long = kick_return_long

    @property
    def kick_return_touchdowns(self):
        """Gets the kick_return_touchdowns of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The kick_return_touchdowns of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._kick_return_touchdowns

    @kick_return_touchdowns.setter
    def kick_return_touchdowns(self, kick_return_touchdowns):
        """Sets the kick_return_touchdowns of this NflStatsPlayerKickPuntReturns.


        :param kick_return_touchdowns: The kick_return_touchdowns of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._kick_return_touchdowns = kick_return_touchdowns

    @property
    def punt_returns(self):
        """Gets the punt_returns of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The punt_returns of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._punt_returns

    @punt_returns.setter
    def punt_returns(self, punt_returns):
        """Sets the punt_returns of this NflStatsPlayerKickPuntReturns.


        :param punt_returns: The punt_returns of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._punt_returns = punt_returns

    @property
    def punt_return_yards(self):
        """Gets the punt_return_yards of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The punt_return_yards of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._punt_return_yards

    @punt_return_yards.setter
    def punt_return_yards(self, punt_return_yards):
        """Sets the punt_return_yards of this NflStatsPlayerKickPuntReturns.


        :param punt_return_yards: The punt_return_yards of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._punt_return_yards = punt_return_yards

    @property
    def punt_return_yards_per_attempt(self):
        """Gets the punt_return_yards_per_attempt of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The punt_return_yards_per_attempt of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: float
        """
        return self._punt_return_yards_per_attempt

    @punt_return_yards_per_attempt.setter
    def punt_return_yards_per_attempt(self, punt_return_yards_per_attempt):
        """Sets the punt_return_yards_per_attempt of this NflStatsPlayerKickPuntReturns.


        :param punt_return_yards_per_attempt: The punt_return_yards_per_attempt of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: float
        """

        self._punt_return_yards_per_attempt = punt_return_yards_per_attempt

    @property
    def punt_return_long(self):
        """Gets the punt_return_long of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The punt_return_long of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._punt_return_long

    @punt_return_long.setter
    def punt_return_long(self, punt_return_long):
        """Sets the punt_return_long of this NflStatsPlayerKickPuntReturns.


        :param punt_return_long: The punt_return_long of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._punt_return_long = punt_return_long

    @property
    def punt_return_touchdowns(self):
        """Gets the punt_return_touchdowns of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The punt_return_touchdowns of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._punt_return_touchdowns

    @punt_return_touchdowns.setter
    def punt_return_touchdowns(self, punt_return_touchdowns):
        """Sets the punt_return_touchdowns of this NflStatsPlayerKickPuntReturns.


        :param punt_return_touchdowns: The punt_return_touchdowns of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._punt_return_touchdowns = punt_return_touchdowns

    @property
    def fumbles_lost(self):
        """Gets the fumbles_lost of this NflStatsPlayerKickPuntReturns.  # noqa: E501


        :return: The fumbles_lost of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :rtype: int
        """
        return self._fumbles_lost

    @fumbles_lost.setter
    def fumbles_lost(self, fumbles_lost):
        """Sets the fumbles_lost of this NflStatsPlayerKickPuntReturns.


        :param fumbles_lost: The fumbles_lost of this NflStatsPlayerKickPuntReturns.  # noqa: E501
        :type: int
        """

        self._fumbles_lost = fumbles_lost

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NflStatsPlayerKickPuntReturns, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NflStatsPlayerKickPuntReturns):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
