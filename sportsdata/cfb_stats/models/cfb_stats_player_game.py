# coding: utf-8

"""
    CFB v3 Stats

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CfbStatsPlayerGame(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'stat_id': 'int',
        'team_id': 'int',
        'player_id': 'int',
        'season_type': 'int',
        'season': 'int',
        'name': 'str',
        'team': 'str',
        'position': 'str',
        'position_category': 'str',
        'injury_status': 'str',
        'injury_body_part': 'str',
        'injury_start_date': 'str',
        'injury_notes': 'str',
        'global_team_id': 'int',
        'draft_kings_position': 'str',
        'draft_kings_salary': 'int',
        'week': 'int',
        'game_id': 'int',
        'opponent_id': 'int',
        'opponent': 'str',
        'day': 'str',
        'date_time': 'str',
        'home_or_away': 'str',
        'is_game_over': 'bool',
        'global_game_id': 'int',
        'global_opponent_id': 'int',
        'updated': 'str',
        'created': 'str',
        'games': 'int',
        'fantasy_points': 'float',
        'passing_attempts': 'float',
        'passing_completions': 'float',
        'passing_yards': 'float',
        'passing_completion_percentage': 'float',
        'passing_yards_per_attempt': 'float',
        'passing_yards_per_completion': 'float',
        'passing_touchdowns': 'float',
        'passing_interceptions': 'float',
        'passing_rating': 'float',
        'rushing_attempts': 'float',
        'rushing_yards': 'float',
        'rushing_yards_per_attempt': 'float',
        'rushing_touchdowns': 'float',
        'rushing_long': 'float',
        'receptions': 'float',
        'receiving_yards': 'float',
        'receiving_yards_per_reception': 'float',
        'receiving_touchdowns': 'float',
        'receiving_long': 'float',
        'punt_returns': 'float',
        'punt_return_yards': 'float',
        'punt_return_yards_per_attempt': 'float',
        'punt_return_touchdowns': 'float',
        'punt_return_long': 'float',
        'kick_returns': 'float',
        'kick_return_yards': 'float',
        'kick_return_yards_per_attempt': 'float',
        'kick_return_touchdowns': 'float',
        'kick_return_long': 'float',
        'punts': 'float',
        'punt_yards': 'float',
        'punt_average': 'float',
        'punt_long': 'float',
        'field_goals_attempted': 'float',
        'field_goals_made': 'float',
        'field_goal_percentage': 'float',
        'field_goals_longest_made': 'float',
        'extra_points_attempted': 'float',
        'extra_points_made': 'float',
        'interceptions': 'float',
        'interception_return_yards': 'float',
        'interception_return_touchdowns': 'float',
        'solo_tackles': 'float',
        'assisted_tackles': 'float',
        'tackles_for_loss': 'float',
        'sacks': 'float',
        'passes_defended': 'float',
        'fumbles_recovered': 'float',
        'fumble_return_touchdowns': 'float',
        'quarterback_hurries': 'float',
        'fumbles': 'float',
        'fumbles_lost': 'float'
    }

    attribute_map = {
        'stat_id': 'StatID',
        'team_id': 'TeamID',
        'player_id': 'PlayerID',
        'season_type': 'SeasonType',
        'season': 'Season',
        'name': 'Name',
        'team': 'Team',
        'position': 'Position',
        'position_category': 'PositionCategory',
        'injury_status': 'InjuryStatus',
        'injury_body_part': 'InjuryBodyPart',
        'injury_start_date': 'InjuryStartDate',
        'injury_notes': 'InjuryNotes',
        'global_team_id': 'GlobalTeamID',
        'draft_kings_position': 'DraftKingsPosition',
        'draft_kings_salary': 'DraftKingsSalary',
        'week': 'Week',
        'game_id': 'GameID',
        'opponent_id': 'OpponentID',
        'opponent': 'Opponent',
        'day': 'Day',
        'date_time': 'DateTime',
        'home_or_away': 'HomeOrAway',
        'is_game_over': 'IsGameOver',
        'global_game_id': 'GlobalGameID',
        'global_opponent_id': 'GlobalOpponentID',
        'updated': 'Updated',
        'created': 'Created',
        'games': 'Games',
        'fantasy_points': 'FantasyPoints',
        'passing_attempts': 'PassingAttempts',
        'passing_completions': 'PassingCompletions',
        'passing_yards': 'PassingYards',
        'passing_completion_percentage': 'PassingCompletionPercentage',
        'passing_yards_per_attempt': 'PassingYardsPerAttempt',
        'passing_yards_per_completion': 'PassingYardsPerCompletion',
        'passing_touchdowns': 'PassingTouchdowns',
        'passing_interceptions': 'PassingInterceptions',
        'passing_rating': 'PassingRating',
        'rushing_attempts': 'RushingAttempts',
        'rushing_yards': 'RushingYards',
        'rushing_yards_per_attempt': 'RushingYardsPerAttempt',
        'rushing_touchdowns': 'RushingTouchdowns',
        'rushing_long': 'RushingLong',
        'receptions': 'Receptions',
        'receiving_yards': 'ReceivingYards',
        'receiving_yards_per_reception': 'ReceivingYardsPerReception',
        'receiving_touchdowns': 'ReceivingTouchdowns',
        'receiving_long': 'ReceivingLong',
        'punt_returns': 'PuntReturns',
        'punt_return_yards': 'PuntReturnYards',
        'punt_return_yards_per_attempt': 'PuntReturnYardsPerAttempt',
        'punt_return_touchdowns': 'PuntReturnTouchdowns',
        'punt_return_long': 'PuntReturnLong',
        'kick_returns': 'KickReturns',
        'kick_return_yards': 'KickReturnYards',
        'kick_return_yards_per_attempt': 'KickReturnYardsPerAttempt',
        'kick_return_touchdowns': 'KickReturnTouchdowns',
        'kick_return_long': 'KickReturnLong',
        'punts': 'Punts',
        'punt_yards': 'PuntYards',
        'punt_average': 'PuntAverage',
        'punt_long': 'PuntLong',
        'field_goals_attempted': 'FieldGoalsAttempted',
        'field_goals_made': 'FieldGoalsMade',
        'field_goal_percentage': 'FieldGoalPercentage',
        'field_goals_longest_made': 'FieldGoalsLongestMade',
        'extra_points_attempted': 'ExtraPointsAttempted',
        'extra_points_made': 'ExtraPointsMade',
        'interceptions': 'Interceptions',
        'interception_return_yards': 'InterceptionReturnYards',
        'interception_return_touchdowns': 'InterceptionReturnTouchdowns',
        'solo_tackles': 'SoloTackles',
        'assisted_tackles': 'AssistedTackles',
        'tackles_for_loss': 'TacklesForLoss',
        'sacks': 'Sacks',
        'passes_defended': 'PassesDefended',
        'fumbles_recovered': 'FumblesRecovered',
        'fumble_return_touchdowns': 'FumbleReturnTouchdowns',
        'quarterback_hurries': 'QuarterbackHurries',
        'fumbles': 'Fumbles',
        'fumbles_lost': 'FumblesLost'
    }

    def __init__(self, stat_id=None, team_id=None, player_id=None, season_type=None, season=None, name=None, team=None, position=None, position_category=None, injury_status=None, injury_body_part=None, injury_start_date=None, injury_notes=None, global_team_id=None, draft_kings_position=None, draft_kings_salary=None, week=None, game_id=None, opponent_id=None, opponent=None, day=None, date_time=None, home_or_away=None, is_game_over=None, global_game_id=None, global_opponent_id=None, updated=None, created=None, games=None, fantasy_points=None, passing_attempts=None, passing_completions=None, passing_yards=None, passing_completion_percentage=None, passing_yards_per_attempt=None, passing_yards_per_completion=None, passing_touchdowns=None, passing_interceptions=None, passing_rating=None, rushing_attempts=None, rushing_yards=None, rushing_yards_per_attempt=None, rushing_touchdowns=None, rushing_long=None, receptions=None, receiving_yards=None, receiving_yards_per_reception=None, receiving_touchdowns=None, receiving_long=None, punt_returns=None, punt_return_yards=None, punt_return_yards_per_attempt=None, punt_return_touchdowns=None, punt_return_long=None, kick_returns=None, kick_return_yards=None, kick_return_yards_per_attempt=None, kick_return_touchdowns=None, kick_return_long=None, punts=None, punt_yards=None, punt_average=None, punt_long=None, field_goals_attempted=None, field_goals_made=None, field_goal_percentage=None, field_goals_longest_made=None, extra_points_attempted=None, extra_points_made=None, interceptions=None, interception_return_yards=None, interception_return_touchdowns=None, solo_tackles=None, assisted_tackles=None, tackles_for_loss=None, sacks=None, passes_defended=None, fumbles_recovered=None, fumble_return_touchdowns=None, quarterback_hurries=None, fumbles=None, fumbles_lost=None):  # noqa: E501
        """CfbStatsPlayerGame - a model defined in Swagger"""  # noqa: E501
        self._stat_id = None
        self._team_id = None
        self._player_id = None
        self._season_type = None
        self._season = None
        self._name = None
        self._team = None
        self._position = None
        self._position_category = None
        self._injury_status = None
        self._injury_body_part = None
        self._injury_start_date = None
        self._injury_notes = None
        self._global_team_id = None
        self._draft_kings_position = None
        self._draft_kings_salary = None
        self._week = None
        self._game_id = None
        self._opponent_id = None
        self._opponent = None
        self._day = None
        self._date_time = None
        self._home_or_away = None
        self._is_game_over = None
        self._global_game_id = None
        self._global_opponent_id = None
        self._updated = None
        self._created = None
        self._games = None
        self._fantasy_points = None
        self._passing_attempts = None
        self._passing_completions = None
        self._passing_yards = None
        self._passing_completion_percentage = None
        self._passing_yards_per_attempt = None
        self._passing_yards_per_completion = None
        self._passing_touchdowns = None
        self._passing_interceptions = None
        self._passing_rating = None
        self._rushing_attempts = None
        self._rushing_yards = None
        self._rushing_yards_per_attempt = None
        self._rushing_touchdowns = None
        self._rushing_long = None
        self._receptions = None
        self._receiving_yards = None
        self._receiving_yards_per_reception = None
        self._receiving_touchdowns = None
        self._receiving_long = None
        self._punt_returns = None
        self._punt_return_yards = None
        self._punt_return_yards_per_attempt = None
        self._punt_return_touchdowns = None
        self._punt_return_long = None
        self._kick_returns = None
        self._kick_return_yards = None
        self._kick_return_yards_per_attempt = None
        self._kick_return_touchdowns = None
        self._kick_return_long = None
        self._punts = None
        self._punt_yards = None
        self._punt_average = None
        self._punt_long = None
        self._field_goals_attempted = None
        self._field_goals_made = None
        self._field_goal_percentage = None
        self._field_goals_longest_made = None
        self._extra_points_attempted = None
        self._extra_points_made = None
        self._interceptions = None
        self._interception_return_yards = None
        self._interception_return_touchdowns = None
        self._solo_tackles = None
        self._assisted_tackles = None
        self._tackles_for_loss = None
        self._sacks = None
        self._passes_defended = None
        self._fumbles_recovered = None
        self._fumble_return_touchdowns = None
        self._quarterback_hurries = None
        self._fumbles = None
        self._fumbles_lost = None
        self.discriminator = None
        if stat_id is not None:
            self.stat_id = stat_id
        if team_id is not None:
            self.team_id = team_id
        if player_id is not None:
            self.player_id = player_id
        if season_type is not None:
            self.season_type = season_type
        if season is not None:
            self.season = season
        if name is not None:
            self.name = name
        if team is not None:
            self.team = team
        if position is not None:
            self.position = position
        if position_category is not None:
            self.position_category = position_category
        if injury_status is not None:
            self.injury_status = injury_status
        if injury_body_part is not None:
            self.injury_body_part = injury_body_part
        if injury_start_date is not None:
            self.injury_start_date = injury_start_date
        if injury_notes is not None:
            self.injury_notes = injury_notes
        if global_team_id is not None:
            self.global_team_id = global_team_id
        if draft_kings_position is not None:
            self.draft_kings_position = draft_kings_position
        if draft_kings_salary is not None:
            self.draft_kings_salary = draft_kings_salary
        if week is not None:
            self.week = week
        if game_id is not None:
            self.game_id = game_id
        if opponent_id is not None:
            self.opponent_id = opponent_id
        if opponent is not None:
            self.opponent = opponent
        if day is not None:
            self.day = day
        if date_time is not None:
            self.date_time = date_time
        if home_or_away is not None:
            self.home_or_away = home_or_away
        if is_game_over is not None:
            self.is_game_over = is_game_over
        if global_game_id is not None:
            self.global_game_id = global_game_id
        if global_opponent_id is not None:
            self.global_opponent_id = global_opponent_id
        if updated is not None:
            self.updated = updated
        if created is not None:
            self.created = created
        if games is not None:
            self.games = games
        if fantasy_points is not None:
            self.fantasy_points = fantasy_points
        if passing_attempts is not None:
            self.passing_attempts = passing_attempts
        if passing_completions is not None:
            self.passing_completions = passing_completions
        if passing_yards is not None:
            self.passing_yards = passing_yards
        if passing_completion_percentage is not None:
            self.passing_completion_percentage = passing_completion_percentage
        if passing_yards_per_attempt is not None:
            self.passing_yards_per_attempt = passing_yards_per_attempt
        if passing_yards_per_completion is not None:
            self.passing_yards_per_completion = passing_yards_per_completion
        if passing_touchdowns is not None:
            self.passing_touchdowns = passing_touchdowns
        if passing_interceptions is not None:
            self.passing_interceptions = passing_interceptions
        if passing_rating is not None:
            self.passing_rating = passing_rating
        if rushing_attempts is not None:
            self.rushing_attempts = rushing_attempts
        if rushing_yards is not None:
            self.rushing_yards = rushing_yards
        if rushing_yards_per_attempt is not None:
            self.rushing_yards_per_attempt = rushing_yards_per_attempt
        if rushing_touchdowns is not None:
            self.rushing_touchdowns = rushing_touchdowns
        if rushing_long is not None:
            self.rushing_long = rushing_long
        if receptions is not None:
            self.receptions = receptions
        if receiving_yards is not None:
            self.receiving_yards = receiving_yards
        if receiving_yards_per_reception is not None:
            self.receiving_yards_per_reception = receiving_yards_per_reception
        if receiving_touchdowns is not None:
            self.receiving_touchdowns = receiving_touchdowns
        if receiving_long is not None:
            self.receiving_long = receiving_long
        if punt_returns is not None:
            self.punt_returns = punt_returns
        if punt_return_yards is not None:
            self.punt_return_yards = punt_return_yards
        if punt_return_yards_per_attempt is not None:
            self.punt_return_yards_per_attempt = punt_return_yards_per_attempt
        if punt_return_touchdowns is not None:
            self.punt_return_touchdowns = punt_return_touchdowns
        if punt_return_long is not None:
            self.punt_return_long = punt_return_long
        if kick_returns is not None:
            self.kick_returns = kick_returns
        if kick_return_yards is not None:
            self.kick_return_yards = kick_return_yards
        if kick_return_yards_per_attempt is not None:
            self.kick_return_yards_per_attempt = kick_return_yards_per_attempt
        if kick_return_touchdowns is not None:
            self.kick_return_touchdowns = kick_return_touchdowns
        if kick_return_long is not None:
            self.kick_return_long = kick_return_long
        if punts is not None:
            self.punts = punts
        if punt_yards is not None:
            self.punt_yards = punt_yards
        if punt_average is not None:
            self.punt_average = punt_average
        if punt_long is not None:
            self.punt_long = punt_long
        if field_goals_attempted is not None:
            self.field_goals_attempted = field_goals_attempted
        if field_goals_made is not None:
            self.field_goals_made = field_goals_made
        if field_goal_percentage is not None:
            self.field_goal_percentage = field_goal_percentage
        if field_goals_longest_made is not None:
            self.field_goals_longest_made = field_goals_longest_made
        if extra_points_attempted is not None:
            self.extra_points_attempted = extra_points_attempted
        if extra_points_made is not None:
            self.extra_points_made = extra_points_made
        if interceptions is not None:
            self.interceptions = interceptions
        if interception_return_yards is not None:
            self.interception_return_yards = interception_return_yards
        if interception_return_touchdowns is not None:
            self.interception_return_touchdowns = interception_return_touchdowns
        if solo_tackles is not None:
            self.solo_tackles = solo_tackles
        if assisted_tackles is not None:
            self.assisted_tackles = assisted_tackles
        if tackles_for_loss is not None:
            self.tackles_for_loss = tackles_for_loss
        if sacks is not None:
            self.sacks = sacks
        if passes_defended is not None:
            self.passes_defended = passes_defended
        if fumbles_recovered is not None:
            self.fumbles_recovered = fumbles_recovered
        if fumble_return_touchdowns is not None:
            self.fumble_return_touchdowns = fumble_return_touchdowns
        if quarterback_hurries is not None:
            self.quarterback_hurries = quarterback_hurries
        if fumbles is not None:
            self.fumbles = fumbles
        if fumbles_lost is not None:
            self.fumbles_lost = fumbles_lost

    @property
    def stat_id(self):
        """Gets the stat_id of this CfbStatsPlayerGame.  # noqa: E501


        :return: The stat_id of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._stat_id

    @stat_id.setter
    def stat_id(self, stat_id):
        """Sets the stat_id of this CfbStatsPlayerGame.


        :param stat_id: The stat_id of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._stat_id = stat_id

    @property
    def team_id(self):
        """Gets the team_id of this CfbStatsPlayerGame.  # noqa: E501


        :return: The team_id of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this CfbStatsPlayerGame.


        :param team_id: The team_id of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._team_id = team_id

    @property
    def player_id(self):
        """Gets the player_id of this CfbStatsPlayerGame.  # noqa: E501


        :return: The player_id of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this CfbStatsPlayerGame.


        :param player_id: The player_id of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._player_id = player_id

    @property
    def season_type(self):
        """Gets the season_type of this CfbStatsPlayerGame.  # noqa: E501


        :return: The season_type of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this CfbStatsPlayerGame.


        :param season_type: The season_type of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._season_type = season_type

    @property
    def season(self):
        """Gets the season of this CfbStatsPlayerGame.  # noqa: E501


        :return: The season of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this CfbStatsPlayerGame.


        :param season: The season of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._season = season

    @property
    def name(self):
        """Gets the name of this CfbStatsPlayerGame.  # noqa: E501


        :return: The name of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CfbStatsPlayerGame.


        :param name: The name of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def team(self):
        """Gets the team of this CfbStatsPlayerGame.  # noqa: E501


        :return: The team of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this CfbStatsPlayerGame.


        :param team: The team of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._team = team

    @property
    def position(self):
        """Gets the position of this CfbStatsPlayerGame.  # noqa: E501


        :return: The position of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this CfbStatsPlayerGame.


        :param position: The position of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._position = position

    @property
    def position_category(self):
        """Gets the position_category of this CfbStatsPlayerGame.  # noqa: E501


        :return: The position_category of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._position_category

    @position_category.setter
    def position_category(self, position_category):
        """Sets the position_category of this CfbStatsPlayerGame.


        :param position_category: The position_category of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._position_category = position_category

    @property
    def injury_status(self):
        """Gets the injury_status of this CfbStatsPlayerGame.  # noqa: E501


        :return: The injury_status of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._injury_status

    @injury_status.setter
    def injury_status(self, injury_status):
        """Sets the injury_status of this CfbStatsPlayerGame.


        :param injury_status: The injury_status of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._injury_status = injury_status

    @property
    def injury_body_part(self):
        """Gets the injury_body_part of this CfbStatsPlayerGame.  # noqa: E501


        :return: The injury_body_part of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._injury_body_part

    @injury_body_part.setter
    def injury_body_part(self, injury_body_part):
        """Sets the injury_body_part of this CfbStatsPlayerGame.


        :param injury_body_part: The injury_body_part of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._injury_body_part = injury_body_part

    @property
    def injury_start_date(self):
        """Gets the injury_start_date of this CfbStatsPlayerGame.  # noqa: E501


        :return: The injury_start_date of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._injury_start_date

    @injury_start_date.setter
    def injury_start_date(self, injury_start_date):
        """Sets the injury_start_date of this CfbStatsPlayerGame.


        :param injury_start_date: The injury_start_date of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._injury_start_date = injury_start_date

    @property
    def injury_notes(self):
        """Gets the injury_notes of this CfbStatsPlayerGame.  # noqa: E501


        :return: The injury_notes of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._injury_notes

    @injury_notes.setter
    def injury_notes(self, injury_notes):
        """Sets the injury_notes of this CfbStatsPlayerGame.


        :param injury_notes: The injury_notes of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._injury_notes = injury_notes

    @property
    def global_team_id(self):
        """Gets the global_team_id of this CfbStatsPlayerGame.  # noqa: E501


        :return: The global_team_id of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._global_team_id

    @global_team_id.setter
    def global_team_id(self, global_team_id):
        """Sets the global_team_id of this CfbStatsPlayerGame.


        :param global_team_id: The global_team_id of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._global_team_id = global_team_id

    @property
    def draft_kings_position(self):
        """Gets the draft_kings_position of this CfbStatsPlayerGame.  # noqa: E501


        :return: The draft_kings_position of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._draft_kings_position

    @draft_kings_position.setter
    def draft_kings_position(self, draft_kings_position):
        """Sets the draft_kings_position of this CfbStatsPlayerGame.


        :param draft_kings_position: The draft_kings_position of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._draft_kings_position = draft_kings_position

    @property
    def draft_kings_salary(self):
        """Gets the draft_kings_salary of this CfbStatsPlayerGame.  # noqa: E501


        :return: The draft_kings_salary of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._draft_kings_salary

    @draft_kings_salary.setter
    def draft_kings_salary(self, draft_kings_salary):
        """Sets the draft_kings_salary of this CfbStatsPlayerGame.


        :param draft_kings_salary: The draft_kings_salary of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._draft_kings_salary = draft_kings_salary

    @property
    def week(self):
        """Gets the week of this CfbStatsPlayerGame.  # noqa: E501


        :return: The week of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this CfbStatsPlayerGame.


        :param week: The week of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._week = week

    @property
    def game_id(self):
        """Gets the game_id of this CfbStatsPlayerGame.  # noqa: E501


        :return: The game_id of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this CfbStatsPlayerGame.


        :param game_id: The game_id of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._game_id = game_id

    @property
    def opponent_id(self):
        """Gets the opponent_id of this CfbStatsPlayerGame.  # noqa: E501


        :return: The opponent_id of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._opponent_id

    @opponent_id.setter
    def opponent_id(self, opponent_id):
        """Sets the opponent_id of this CfbStatsPlayerGame.


        :param opponent_id: The opponent_id of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._opponent_id = opponent_id

    @property
    def opponent(self):
        """Gets the opponent of this CfbStatsPlayerGame.  # noqa: E501


        :return: The opponent of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._opponent

    @opponent.setter
    def opponent(self, opponent):
        """Sets the opponent of this CfbStatsPlayerGame.


        :param opponent: The opponent of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._opponent = opponent

    @property
    def day(self):
        """Gets the day of this CfbStatsPlayerGame.  # noqa: E501


        :return: The day of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this CfbStatsPlayerGame.


        :param day: The day of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._day = day

    @property
    def date_time(self):
        """Gets the date_time of this CfbStatsPlayerGame.  # noqa: E501


        :return: The date_time of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this CfbStatsPlayerGame.


        :param date_time: The date_time of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._date_time = date_time

    @property
    def home_or_away(self):
        """Gets the home_or_away of this CfbStatsPlayerGame.  # noqa: E501


        :return: The home_or_away of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._home_or_away

    @home_or_away.setter
    def home_or_away(self, home_or_away):
        """Sets the home_or_away of this CfbStatsPlayerGame.


        :param home_or_away: The home_or_away of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._home_or_away = home_or_away

    @property
    def is_game_over(self):
        """Gets the is_game_over of this CfbStatsPlayerGame.  # noqa: E501


        :return: The is_game_over of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: bool
        """
        return self._is_game_over

    @is_game_over.setter
    def is_game_over(self, is_game_over):
        """Sets the is_game_over of this CfbStatsPlayerGame.


        :param is_game_over: The is_game_over of this CfbStatsPlayerGame.  # noqa: E501
        :type: bool
        """

        self._is_game_over = is_game_over

    @property
    def global_game_id(self):
        """Gets the global_game_id of this CfbStatsPlayerGame.  # noqa: E501


        :return: The global_game_id of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._global_game_id

    @global_game_id.setter
    def global_game_id(self, global_game_id):
        """Sets the global_game_id of this CfbStatsPlayerGame.


        :param global_game_id: The global_game_id of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._global_game_id = global_game_id

    @property
    def global_opponent_id(self):
        """Gets the global_opponent_id of this CfbStatsPlayerGame.  # noqa: E501


        :return: The global_opponent_id of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._global_opponent_id

    @global_opponent_id.setter
    def global_opponent_id(self, global_opponent_id):
        """Sets the global_opponent_id of this CfbStatsPlayerGame.


        :param global_opponent_id: The global_opponent_id of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._global_opponent_id = global_opponent_id

    @property
    def updated(self):
        """Gets the updated of this CfbStatsPlayerGame.  # noqa: E501


        :return: The updated of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this CfbStatsPlayerGame.


        :param updated: The updated of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._updated = updated

    @property
    def created(self):
        """Gets the created of this CfbStatsPlayerGame.  # noqa: E501


        :return: The created of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this CfbStatsPlayerGame.


        :param created: The created of this CfbStatsPlayerGame.  # noqa: E501
        :type: str
        """

        self._created = created

    @property
    def games(self):
        """Gets the games of this CfbStatsPlayerGame.  # noqa: E501


        :return: The games of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: int
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this CfbStatsPlayerGame.


        :param games: The games of this CfbStatsPlayerGame.  # noqa: E501
        :type: int
        """

        self._games = games

    @property
    def fantasy_points(self):
        """Gets the fantasy_points of this CfbStatsPlayerGame.  # noqa: E501


        :return: The fantasy_points of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fantasy_points

    @fantasy_points.setter
    def fantasy_points(self, fantasy_points):
        """Sets the fantasy_points of this CfbStatsPlayerGame.


        :param fantasy_points: The fantasy_points of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._fantasy_points = fantasy_points

    @property
    def passing_attempts(self):
        """Gets the passing_attempts of this CfbStatsPlayerGame.  # noqa: E501


        :return: The passing_attempts of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_attempts

    @passing_attempts.setter
    def passing_attempts(self, passing_attempts):
        """Sets the passing_attempts of this CfbStatsPlayerGame.


        :param passing_attempts: The passing_attempts of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_attempts = passing_attempts

    @property
    def passing_completions(self):
        """Gets the passing_completions of this CfbStatsPlayerGame.  # noqa: E501


        :return: The passing_completions of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_completions

    @passing_completions.setter
    def passing_completions(self, passing_completions):
        """Sets the passing_completions of this CfbStatsPlayerGame.


        :param passing_completions: The passing_completions of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_completions = passing_completions

    @property
    def passing_yards(self):
        """Gets the passing_yards of this CfbStatsPlayerGame.  # noqa: E501


        :return: The passing_yards of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_yards

    @passing_yards.setter
    def passing_yards(self, passing_yards):
        """Sets the passing_yards of this CfbStatsPlayerGame.


        :param passing_yards: The passing_yards of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_yards = passing_yards

    @property
    def passing_completion_percentage(self):
        """Gets the passing_completion_percentage of this CfbStatsPlayerGame.  # noqa: E501


        :return: The passing_completion_percentage of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_completion_percentage

    @passing_completion_percentage.setter
    def passing_completion_percentage(self, passing_completion_percentage):
        """Sets the passing_completion_percentage of this CfbStatsPlayerGame.


        :param passing_completion_percentage: The passing_completion_percentage of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_completion_percentage = passing_completion_percentage

    @property
    def passing_yards_per_attempt(self):
        """Gets the passing_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501


        :return: The passing_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_yards_per_attempt

    @passing_yards_per_attempt.setter
    def passing_yards_per_attempt(self, passing_yards_per_attempt):
        """Sets the passing_yards_per_attempt of this CfbStatsPlayerGame.


        :param passing_yards_per_attempt: The passing_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_yards_per_attempt = passing_yards_per_attempt

    @property
    def passing_yards_per_completion(self):
        """Gets the passing_yards_per_completion of this CfbStatsPlayerGame.  # noqa: E501


        :return: The passing_yards_per_completion of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_yards_per_completion

    @passing_yards_per_completion.setter
    def passing_yards_per_completion(self, passing_yards_per_completion):
        """Sets the passing_yards_per_completion of this CfbStatsPlayerGame.


        :param passing_yards_per_completion: The passing_yards_per_completion of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_yards_per_completion = passing_yards_per_completion

    @property
    def passing_touchdowns(self):
        """Gets the passing_touchdowns of this CfbStatsPlayerGame.  # noqa: E501


        :return: The passing_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_touchdowns

    @passing_touchdowns.setter
    def passing_touchdowns(self, passing_touchdowns):
        """Sets the passing_touchdowns of this CfbStatsPlayerGame.


        :param passing_touchdowns: The passing_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_touchdowns = passing_touchdowns

    @property
    def passing_interceptions(self):
        """Gets the passing_interceptions of this CfbStatsPlayerGame.  # noqa: E501


        :return: The passing_interceptions of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_interceptions

    @passing_interceptions.setter
    def passing_interceptions(self, passing_interceptions):
        """Sets the passing_interceptions of this CfbStatsPlayerGame.


        :param passing_interceptions: The passing_interceptions of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_interceptions = passing_interceptions

    @property
    def passing_rating(self):
        """Gets the passing_rating of this CfbStatsPlayerGame.  # noqa: E501


        :return: The passing_rating of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passing_rating

    @passing_rating.setter
    def passing_rating(self, passing_rating):
        """Sets the passing_rating of this CfbStatsPlayerGame.


        :param passing_rating: The passing_rating of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._passing_rating = passing_rating

    @property
    def rushing_attempts(self):
        """Gets the rushing_attempts of this CfbStatsPlayerGame.  # noqa: E501


        :return: The rushing_attempts of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._rushing_attempts

    @rushing_attempts.setter
    def rushing_attempts(self, rushing_attempts):
        """Sets the rushing_attempts of this CfbStatsPlayerGame.


        :param rushing_attempts: The rushing_attempts of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._rushing_attempts = rushing_attempts

    @property
    def rushing_yards(self):
        """Gets the rushing_yards of this CfbStatsPlayerGame.  # noqa: E501


        :return: The rushing_yards of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._rushing_yards

    @rushing_yards.setter
    def rushing_yards(self, rushing_yards):
        """Sets the rushing_yards of this CfbStatsPlayerGame.


        :param rushing_yards: The rushing_yards of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._rushing_yards = rushing_yards

    @property
    def rushing_yards_per_attempt(self):
        """Gets the rushing_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501


        :return: The rushing_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._rushing_yards_per_attempt

    @rushing_yards_per_attempt.setter
    def rushing_yards_per_attempt(self, rushing_yards_per_attempt):
        """Sets the rushing_yards_per_attempt of this CfbStatsPlayerGame.


        :param rushing_yards_per_attempt: The rushing_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._rushing_yards_per_attempt = rushing_yards_per_attempt

    @property
    def rushing_touchdowns(self):
        """Gets the rushing_touchdowns of this CfbStatsPlayerGame.  # noqa: E501


        :return: The rushing_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._rushing_touchdowns

    @rushing_touchdowns.setter
    def rushing_touchdowns(self, rushing_touchdowns):
        """Sets the rushing_touchdowns of this CfbStatsPlayerGame.


        :param rushing_touchdowns: The rushing_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._rushing_touchdowns = rushing_touchdowns

    @property
    def rushing_long(self):
        """Gets the rushing_long of this CfbStatsPlayerGame.  # noqa: E501


        :return: The rushing_long of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._rushing_long

    @rushing_long.setter
    def rushing_long(self, rushing_long):
        """Sets the rushing_long of this CfbStatsPlayerGame.


        :param rushing_long: The rushing_long of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._rushing_long = rushing_long

    @property
    def receptions(self):
        """Gets the receptions of this CfbStatsPlayerGame.  # noqa: E501


        :return: The receptions of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._receptions

    @receptions.setter
    def receptions(self, receptions):
        """Sets the receptions of this CfbStatsPlayerGame.


        :param receptions: The receptions of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._receptions = receptions

    @property
    def receiving_yards(self):
        """Gets the receiving_yards of this CfbStatsPlayerGame.  # noqa: E501


        :return: The receiving_yards of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._receiving_yards

    @receiving_yards.setter
    def receiving_yards(self, receiving_yards):
        """Sets the receiving_yards of this CfbStatsPlayerGame.


        :param receiving_yards: The receiving_yards of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._receiving_yards = receiving_yards

    @property
    def receiving_yards_per_reception(self):
        """Gets the receiving_yards_per_reception of this CfbStatsPlayerGame.  # noqa: E501


        :return: The receiving_yards_per_reception of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._receiving_yards_per_reception

    @receiving_yards_per_reception.setter
    def receiving_yards_per_reception(self, receiving_yards_per_reception):
        """Sets the receiving_yards_per_reception of this CfbStatsPlayerGame.


        :param receiving_yards_per_reception: The receiving_yards_per_reception of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._receiving_yards_per_reception = receiving_yards_per_reception

    @property
    def receiving_touchdowns(self):
        """Gets the receiving_touchdowns of this CfbStatsPlayerGame.  # noqa: E501


        :return: The receiving_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._receiving_touchdowns

    @receiving_touchdowns.setter
    def receiving_touchdowns(self, receiving_touchdowns):
        """Sets the receiving_touchdowns of this CfbStatsPlayerGame.


        :param receiving_touchdowns: The receiving_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._receiving_touchdowns = receiving_touchdowns

    @property
    def receiving_long(self):
        """Gets the receiving_long of this CfbStatsPlayerGame.  # noqa: E501


        :return: The receiving_long of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._receiving_long

    @receiving_long.setter
    def receiving_long(self, receiving_long):
        """Sets the receiving_long of this CfbStatsPlayerGame.


        :param receiving_long: The receiving_long of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._receiving_long = receiving_long

    @property
    def punt_returns(self):
        """Gets the punt_returns of this CfbStatsPlayerGame.  # noqa: E501


        :return: The punt_returns of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._punt_returns

    @punt_returns.setter
    def punt_returns(self, punt_returns):
        """Sets the punt_returns of this CfbStatsPlayerGame.


        :param punt_returns: The punt_returns of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._punt_returns = punt_returns

    @property
    def punt_return_yards(self):
        """Gets the punt_return_yards of this CfbStatsPlayerGame.  # noqa: E501


        :return: The punt_return_yards of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._punt_return_yards

    @punt_return_yards.setter
    def punt_return_yards(self, punt_return_yards):
        """Sets the punt_return_yards of this CfbStatsPlayerGame.


        :param punt_return_yards: The punt_return_yards of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._punt_return_yards = punt_return_yards

    @property
    def punt_return_yards_per_attempt(self):
        """Gets the punt_return_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501


        :return: The punt_return_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._punt_return_yards_per_attempt

    @punt_return_yards_per_attempt.setter
    def punt_return_yards_per_attempt(self, punt_return_yards_per_attempt):
        """Sets the punt_return_yards_per_attempt of this CfbStatsPlayerGame.


        :param punt_return_yards_per_attempt: The punt_return_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._punt_return_yards_per_attempt = punt_return_yards_per_attempt

    @property
    def punt_return_touchdowns(self):
        """Gets the punt_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501


        :return: The punt_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._punt_return_touchdowns

    @punt_return_touchdowns.setter
    def punt_return_touchdowns(self, punt_return_touchdowns):
        """Sets the punt_return_touchdowns of this CfbStatsPlayerGame.


        :param punt_return_touchdowns: The punt_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._punt_return_touchdowns = punt_return_touchdowns

    @property
    def punt_return_long(self):
        """Gets the punt_return_long of this CfbStatsPlayerGame.  # noqa: E501


        :return: The punt_return_long of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._punt_return_long

    @punt_return_long.setter
    def punt_return_long(self, punt_return_long):
        """Sets the punt_return_long of this CfbStatsPlayerGame.


        :param punt_return_long: The punt_return_long of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._punt_return_long = punt_return_long

    @property
    def kick_returns(self):
        """Gets the kick_returns of this CfbStatsPlayerGame.  # noqa: E501


        :return: The kick_returns of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._kick_returns

    @kick_returns.setter
    def kick_returns(self, kick_returns):
        """Sets the kick_returns of this CfbStatsPlayerGame.


        :param kick_returns: The kick_returns of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._kick_returns = kick_returns

    @property
    def kick_return_yards(self):
        """Gets the kick_return_yards of this CfbStatsPlayerGame.  # noqa: E501


        :return: The kick_return_yards of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._kick_return_yards

    @kick_return_yards.setter
    def kick_return_yards(self, kick_return_yards):
        """Sets the kick_return_yards of this CfbStatsPlayerGame.


        :param kick_return_yards: The kick_return_yards of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._kick_return_yards = kick_return_yards

    @property
    def kick_return_yards_per_attempt(self):
        """Gets the kick_return_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501


        :return: The kick_return_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._kick_return_yards_per_attempt

    @kick_return_yards_per_attempt.setter
    def kick_return_yards_per_attempt(self, kick_return_yards_per_attempt):
        """Sets the kick_return_yards_per_attempt of this CfbStatsPlayerGame.


        :param kick_return_yards_per_attempt: The kick_return_yards_per_attempt of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._kick_return_yards_per_attempt = kick_return_yards_per_attempt

    @property
    def kick_return_touchdowns(self):
        """Gets the kick_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501


        :return: The kick_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._kick_return_touchdowns

    @kick_return_touchdowns.setter
    def kick_return_touchdowns(self, kick_return_touchdowns):
        """Sets the kick_return_touchdowns of this CfbStatsPlayerGame.


        :param kick_return_touchdowns: The kick_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._kick_return_touchdowns = kick_return_touchdowns

    @property
    def kick_return_long(self):
        """Gets the kick_return_long of this CfbStatsPlayerGame.  # noqa: E501


        :return: The kick_return_long of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._kick_return_long

    @kick_return_long.setter
    def kick_return_long(self, kick_return_long):
        """Sets the kick_return_long of this CfbStatsPlayerGame.


        :param kick_return_long: The kick_return_long of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._kick_return_long = kick_return_long

    @property
    def punts(self):
        """Gets the punts of this CfbStatsPlayerGame.  # noqa: E501


        :return: The punts of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._punts

    @punts.setter
    def punts(self, punts):
        """Sets the punts of this CfbStatsPlayerGame.


        :param punts: The punts of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._punts = punts

    @property
    def punt_yards(self):
        """Gets the punt_yards of this CfbStatsPlayerGame.  # noqa: E501


        :return: The punt_yards of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._punt_yards

    @punt_yards.setter
    def punt_yards(self, punt_yards):
        """Sets the punt_yards of this CfbStatsPlayerGame.


        :param punt_yards: The punt_yards of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._punt_yards = punt_yards

    @property
    def punt_average(self):
        """Gets the punt_average of this CfbStatsPlayerGame.  # noqa: E501


        :return: The punt_average of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._punt_average

    @punt_average.setter
    def punt_average(self, punt_average):
        """Sets the punt_average of this CfbStatsPlayerGame.


        :param punt_average: The punt_average of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._punt_average = punt_average

    @property
    def punt_long(self):
        """Gets the punt_long of this CfbStatsPlayerGame.  # noqa: E501


        :return: The punt_long of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._punt_long

    @punt_long.setter
    def punt_long(self, punt_long):
        """Sets the punt_long of this CfbStatsPlayerGame.


        :param punt_long: The punt_long of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._punt_long = punt_long

    @property
    def field_goals_attempted(self):
        """Gets the field_goals_attempted of this CfbStatsPlayerGame.  # noqa: E501


        :return: The field_goals_attempted of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._field_goals_attempted

    @field_goals_attempted.setter
    def field_goals_attempted(self, field_goals_attempted):
        """Sets the field_goals_attempted of this CfbStatsPlayerGame.


        :param field_goals_attempted: The field_goals_attempted of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._field_goals_attempted = field_goals_attempted

    @property
    def field_goals_made(self):
        """Gets the field_goals_made of this CfbStatsPlayerGame.  # noqa: E501


        :return: The field_goals_made of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._field_goals_made

    @field_goals_made.setter
    def field_goals_made(self, field_goals_made):
        """Sets the field_goals_made of this CfbStatsPlayerGame.


        :param field_goals_made: The field_goals_made of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._field_goals_made = field_goals_made

    @property
    def field_goal_percentage(self):
        """Gets the field_goal_percentage of this CfbStatsPlayerGame.  # noqa: E501


        :return: The field_goal_percentage of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._field_goal_percentage

    @field_goal_percentage.setter
    def field_goal_percentage(self, field_goal_percentage):
        """Sets the field_goal_percentage of this CfbStatsPlayerGame.


        :param field_goal_percentage: The field_goal_percentage of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._field_goal_percentage = field_goal_percentage

    @property
    def field_goals_longest_made(self):
        """Gets the field_goals_longest_made of this CfbStatsPlayerGame.  # noqa: E501


        :return: The field_goals_longest_made of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._field_goals_longest_made

    @field_goals_longest_made.setter
    def field_goals_longest_made(self, field_goals_longest_made):
        """Sets the field_goals_longest_made of this CfbStatsPlayerGame.


        :param field_goals_longest_made: The field_goals_longest_made of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._field_goals_longest_made = field_goals_longest_made

    @property
    def extra_points_attempted(self):
        """Gets the extra_points_attempted of this CfbStatsPlayerGame.  # noqa: E501


        :return: The extra_points_attempted of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._extra_points_attempted

    @extra_points_attempted.setter
    def extra_points_attempted(self, extra_points_attempted):
        """Sets the extra_points_attempted of this CfbStatsPlayerGame.


        :param extra_points_attempted: The extra_points_attempted of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._extra_points_attempted = extra_points_attempted

    @property
    def extra_points_made(self):
        """Gets the extra_points_made of this CfbStatsPlayerGame.  # noqa: E501


        :return: The extra_points_made of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._extra_points_made

    @extra_points_made.setter
    def extra_points_made(self, extra_points_made):
        """Sets the extra_points_made of this CfbStatsPlayerGame.


        :param extra_points_made: The extra_points_made of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._extra_points_made = extra_points_made

    @property
    def interceptions(self):
        """Gets the interceptions of this CfbStatsPlayerGame.  # noqa: E501


        :return: The interceptions of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._interceptions

    @interceptions.setter
    def interceptions(self, interceptions):
        """Sets the interceptions of this CfbStatsPlayerGame.


        :param interceptions: The interceptions of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._interceptions = interceptions

    @property
    def interception_return_yards(self):
        """Gets the interception_return_yards of this CfbStatsPlayerGame.  # noqa: E501


        :return: The interception_return_yards of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._interception_return_yards

    @interception_return_yards.setter
    def interception_return_yards(self, interception_return_yards):
        """Sets the interception_return_yards of this CfbStatsPlayerGame.


        :param interception_return_yards: The interception_return_yards of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._interception_return_yards = interception_return_yards

    @property
    def interception_return_touchdowns(self):
        """Gets the interception_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501


        :return: The interception_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._interception_return_touchdowns

    @interception_return_touchdowns.setter
    def interception_return_touchdowns(self, interception_return_touchdowns):
        """Sets the interception_return_touchdowns of this CfbStatsPlayerGame.


        :param interception_return_touchdowns: The interception_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._interception_return_touchdowns = interception_return_touchdowns

    @property
    def solo_tackles(self):
        """Gets the solo_tackles of this CfbStatsPlayerGame.  # noqa: E501


        :return: The solo_tackles of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._solo_tackles

    @solo_tackles.setter
    def solo_tackles(self, solo_tackles):
        """Sets the solo_tackles of this CfbStatsPlayerGame.


        :param solo_tackles: The solo_tackles of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._solo_tackles = solo_tackles

    @property
    def assisted_tackles(self):
        """Gets the assisted_tackles of this CfbStatsPlayerGame.  # noqa: E501


        :return: The assisted_tackles of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._assisted_tackles

    @assisted_tackles.setter
    def assisted_tackles(self, assisted_tackles):
        """Sets the assisted_tackles of this CfbStatsPlayerGame.


        :param assisted_tackles: The assisted_tackles of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._assisted_tackles = assisted_tackles

    @property
    def tackles_for_loss(self):
        """Gets the tackles_for_loss of this CfbStatsPlayerGame.  # noqa: E501


        :return: The tackles_for_loss of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._tackles_for_loss

    @tackles_for_loss.setter
    def tackles_for_loss(self, tackles_for_loss):
        """Sets the tackles_for_loss of this CfbStatsPlayerGame.


        :param tackles_for_loss: The tackles_for_loss of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._tackles_for_loss = tackles_for_loss

    @property
    def sacks(self):
        """Gets the sacks of this CfbStatsPlayerGame.  # noqa: E501


        :return: The sacks of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._sacks

    @sacks.setter
    def sacks(self, sacks):
        """Sets the sacks of this CfbStatsPlayerGame.


        :param sacks: The sacks of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._sacks = sacks

    @property
    def passes_defended(self):
        """Gets the passes_defended of this CfbStatsPlayerGame.  # noqa: E501


        :return: The passes_defended of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._passes_defended

    @passes_defended.setter
    def passes_defended(self, passes_defended):
        """Sets the passes_defended of this CfbStatsPlayerGame.


        :param passes_defended: The passes_defended of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._passes_defended = passes_defended

    @property
    def fumbles_recovered(self):
        """Gets the fumbles_recovered of this CfbStatsPlayerGame.  # noqa: E501


        :return: The fumbles_recovered of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fumbles_recovered

    @fumbles_recovered.setter
    def fumbles_recovered(self, fumbles_recovered):
        """Sets the fumbles_recovered of this CfbStatsPlayerGame.


        :param fumbles_recovered: The fumbles_recovered of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._fumbles_recovered = fumbles_recovered

    @property
    def fumble_return_touchdowns(self):
        """Gets the fumble_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501


        :return: The fumble_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fumble_return_touchdowns

    @fumble_return_touchdowns.setter
    def fumble_return_touchdowns(self, fumble_return_touchdowns):
        """Sets the fumble_return_touchdowns of this CfbStatsPlayerGame.


        :param fumble_return_touchdowns: The fumble_return_touchdowns of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._fumble_return_touchdowns = fumble_return_touchdowns

    @property
    def quarterback_hurries(self):
        """Gets the quarterback_hurries of this CfbStatsPlayerGame.  # noqa: E501


        :return: The quarterback_hurries of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._quarterback_hurries

    @quarterback_hurries.setter
    def quarterback_hurries(self, quarterback_hurries):
        """Sets the quarterback_hurries of this CfbStatsPlayerGame.


        :param quarterback_hurries: The quarterback_hurries of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._quarterback_hurries = quarterback_hurries

    @property
    def fumbles(self):
        """Gets the fumbles of this CfbStatsPlayerGame.  # noqa: E501


        :return: The fumbles of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fumbles

    @fumbles.setter
    def fumbles(self, fumbles):
        """Sets the fumbles of this CfbStatsPlayerGame.


        :param fumbles: The fumbles of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._fumbles = fumbles

    @property
    def fumbles_lost(self):
        """Gets the fumbles_lost of this CfbStatsPlayerGame.  # noqa: E501


        :return: The fumbles_lost of this CfbStatsPlayerGame.  # noqa: E501
        :rtype: float
        """
        return self._fumbles_lost

    @fumbles_lost.setter
    def fumbles_lost(self, fumbles_lost):
        """Sets the fumbles_lost of this CfbStatsPlayerGame.


        :param fumbles_lost: The fumbles_lost of this CfbStatsPlayerGame.  # noqa: E501
        :type: float
        """

        self._fumbles_lost = fumbles_lost

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CfbStatsPlayerGame, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CfbStatsPlayerGame):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
