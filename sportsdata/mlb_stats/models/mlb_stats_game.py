# coding: utf-8

"""
    MLB v3 Stats

    MLB scores, stats, and news API.  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MlbStatsGame(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'game_id': 'int',
        'season': 'int',
        'season_type': 'int',
        'status': 'str',
        'day': 'str',
        'date_time': 'str',
        'away_team': 'str',
        'home_team': 'str',
        'away_team_id': 'int',
        'home_team_id': 'int',
        'rescheduled_game_id': 'int',
        'stadium_id': 'int',
        'channel': 'str',
        'inning': 'int',
        'inning_half': 'str',
        'away_team_runs': 'int',
        'home_team_runs': 'int',
        'away_team_hits': 'int',
        'home_team_hits': 'int',
        'away_team_errors': 'int',
        'home_team_errors': 'int',
        'winning_pitcher_id': 'int',
        'losing_pitcher_id': 'int',
        'saving_pitcher_id': 'int',
        'attendance': 'int',
        'away_team_probable_pitcher_id': 'int',
        'home_team_probable_pitcher_id': 'int',
        'outs': 'int',
        'balls': 'int',
        'strikes': 'int',
        'current_pitcher_id': 'int',
        'current_hitter_id': 'int',
        'away_team_starting_pitcher_id': 'int',
        'home_team_starting_pitcher_id': 'int',
        'current_pitching_team_id': 'int',
        'current_hitting_team_id': 'int',
        'point_spread': 'float',
        'over_under': 'float',
        'away_team_money_line': 'int',
        'home_team_money_line': 'int',
        'forecast_temp_low': 'int',
        'forecast_temp_high': 'int',
        'forecast_description': 'str',
        'forecast_wind_chill': 'int',
        'forecast_wind_speed': 'int',
        'forecast_wind_direction': 'int',
        'rescheduled_from_game_id': 'int',
        'runner_on_first': 'bool',
        'runner_on_second': 'bool',
        'runner_on_third': 'bool',
        'away_team_starting_pitcher': 'str',
        'home_team_starting_pitcher': 'str',
        'current_pitcher': 'str',
        'current_hitter': 'str',
        'winning_pitcher': 'str',
        'losing_pitcher': 'str',
        'saving_pitcher': 'str',
        'due_up_hitter_id1': 'int',
        'due_up_hitter_id2': 'int',
        'due_up_hitter_id3': 'int',
        'global_game_id': 'int',
        'global_away_team_id': 'int',
        'global_home_team_id': 'int',
        'point_spread_away_team_money_line': 'int',
        'point_spread_home_team_money_line': 'int',
        'last_play': 'str',
        'is_closed': 'bool',
        'updated': 'str',
        'innings': 'list[MlbStatsInning]',
        'game_end_date_time': 'str',
        'home_rotation_number': 'int',
        'away_rotation_number': 'int',
        'neutral_venue': 'bool',
        'inning_description': 'str',
        'over_payout': 'int',
        'under_payout': 'int',
        'series_info': 'MlbStatsSeries'
    }

    attribute_map = {
        'game_id': 'GameID',
        'season': 'Season',
        'season_type': 'SeasonType',
        'status': 'Status',
        'day': 'Day',
        'date_time': 'DateTime',
        'away_team': 'AwayTeam',
        'home_team': 'HomeTeam',
        'away_team_id': 'AwayTeamID',
        'home_team_id': 'HomeTeamID',
        'rescheduled_game_id': 'RescheduledGameID',
        'stadium_id': 'StadiumID',
        'channel': 'Channel',
        'inning': 'Inning',
        'inning_half': 'InningHalf',
        'away_team_runs': 'AwayTeamRuns',
        'home_team_runs': 'HomeTeamRuns',
        'away_team_hits': 'AwayTeamHits',
        'home_team_hits': 'HomeTeamHits',
        'away_team_errors': 'AwayTeamErrors',
        'home_team_errors': 'HomeTeamErrors',
        'winning_pitcher_id': 'WinningPitcherID',
        'losing_pitcher_id': 'LosingPitcherID',
        'saving_pitcher_id': 'SavingPitcherID',
        'attendance': 'Attendance',
        'away_team_probable_pitcher_id': 'AwayTeamProbablePitcherID',
        'home_team_probable_pitcher_id': 'HomeTeamProbablePitcherID',
        'outs': 'Outs',
        'balls': 'Balls',
        'strikes': 'Strikes',
        'current_pitcher_id': 'CurrentPitcherID',
        'current_hitter_id': 'CurrentHitterID',
        'away_team_starting_pitcher_id': 'AwayTeamStartingPitcherID',
        'home_team_starting_pitcher_id': 'HomeTeamStartingPitcherID',
        'current_pitching_team_id': 'CurrentPitchingTeamID',
        'current_hitting_team_id': 'CurrentHittingTeamID',
        'point_spread': 'PointSpread',
        'over_under': 'OverUnder',
        'away_team_money_line': 'AwayTeamMoneyLine',
        'home_team_money_line': 'HomeTeamMoneyLine',
        'forecast_temp_low': 'ForecastTempLow',
        'forecast_temp_high': 'ForecastTempHigh',
        'forecast_description': 'ForecastDescription',
        'forecast_wind_chill': 'ForecastWindChill',
        'forecast_wind_speed': 'ForecastWindSpeed',
        'forecast_wind_direction': 'ForecastWindDirection',
        'rescheduled_from_game_id': 'RescheduledFromGameID',
        'runner_on_first': 'RunnerOnFirst',
        'runner_on_second': 'RunnerOnSecond',
        'runner_on_third': 'RunnerOnThird',
        'away_team_starting_pitcher': 'AwayTeamStartingPitcher',
        'home_team_starting_pitcher': 'HomeTeamStartingPitcher',
        'current_pitcher': 'CurrentPitcher',
        'current_hitter': 'CurrentHitter',
        'winning_pitcher': 'WinningPitcher',
        'losing_pitcher': 'LosingPitcher',
        'saving_pitcher': 'SavingPitcher',
        'due_up_hitter_id1': 'DueUpHitterID1',
        'due_up_hitter_id2': 'DueUpHitterID2',
        'due_up_hitter_id3': 'DueUpHitterID3',
        'global_game_id': 'GlobalGameID',
        'global_away_team_id': 'GlobalAwayTeamID',
        'global_home_team_id': 'GlobalHomeTeamID',
        'point_spread_away_team_money_line': 'PointSpreadAwayTeamMoneyLine',
        'point_spread_home_team_money_line': 'PointSpreadHomeTeamMoneyLine',
        'last_play': 'LastPlay',
        'is_closed': 'IsClosed',
        'updated': 'Updated',
        'innings': 'Innings',
        'game_end_date_time': 'GameEndDateTime',
        'home_rotation_number': 'HomeRotationNumber',
        'away_rotation_number': 'AwayRotationNumber',
        'neutral_venue': 'NeutralVenue',
        'inning_description': 'InningDescription',
        'over_payout': 'OverPayout',
        'under_payout': 'UnderPayout',
        'series_info': 'SeriesInfo'
    }

    def __init__(self, game_id=None, season=None, season_type=None, status=None, day=None, date_time=None, away_team=None, home_team=None, away_team_id=None, home_team_id=None, rescheduled_game_id=None, stadium_id=None, channel=None, inning=None, inning_half=None, away_team_runs=None, home_team_runs=None, away_team_hits=None, home_team_hits=None, away_team_errors=None, home_team_errors=None, winning_pitcher_id=None, losing_pitcher_id=None, saving_pitcher_id=None, attendance=None, away_team_probable_pitcher_id=None, home_team_probable_pitcher_id=None, outs=None, balls=None, strikes=None, current_pitcher_id=None, current_hitter_id=None, away_team_starting_pitcher_id=None, home_team_starting_pitcher_id=None, current_pitching_team_id=None, current_hitting_team_id=None, point_spread=None, over_under=None, away_team_money_line=None, home_team_money_line=None, forecast_temp_low=None, forecast_temp_high=None, forecast_description=None, forecast_wind_chill=None, forecast_wind_speed=None, forecast_wind_direction=None, rescheduled_from_game_id=None, runner_on_first=None, runner_on_second=None, runner_on_third=None, away_team_starting_pitcher=None, home_team_starting_pitcher=None, current_pitcher=None, current_hitter=None, winning_pitcher=None, losing_pitcher=None, saving_pitcher=None, due_up_hitter_id1=None, due_up_hitter_id2=None, due_up_hitter_id3=None, global_game_id=None, global_away_team_id=None, global_home_team_id=None, point_spread_away_team_money_line=None, point_spread_home_team_money_line=None, last_play=None, is_closed=None, updated=None, innings=None, game_end_date_time=None, home_rotation_number=None, away_rotation_number=None, neutral_venue=None, inning_description=None, over_payout=None, under_payout=None, series_info=None):  # noqa: E501
        """MlbStatsGame - a model defined in Swagger"""  # noqa: E501
        self._game_id = None
        self._season = None
        self._season_type = None
        self._status = None
        self._day = None
        self._date_time = None
        self._away_team = None
        self._home_team = None
        self._away_team_id = None
        self._home_team_id = None
        self._rescheduled_game_id = None
        self._stadium_id = None
        self._channel = None
        self._inning = None
        self._inning_half = None
        self._away_team_runs = None
        self._home_team_runs = None
        self._away_team_hits = None
        self._home_team_hits = None
        self._away_team_errors = None
        self._home_team_errors = None
        self._winning_pitcher_id = None
        self._losing_pitcher_id = None
        self._saving_pitcher_id = None
        self._attendance = None
        self._away_team_probable_pitcher_id = None
        self._home_team_probable_pitcher_id = None
        self._outs = None
        self._balls = None
        self._strikes = None
        self._current_pitcher_id = None
        self._current_hitter_id = None
        self._away_team_starting_pitcher_id = None
        self._home_team_starting_pitcher_id = None
        self._current_pitching_team_id = None
        self._current_hitting_team_id = None
        self._point_spread = None
        self._over_under = None
        self._away_team_money_line = None
        self._home_team_money_line = None
        self._forecast_temp_low = None
        self._forecast_temp_high = None
        self._forecast_description = None
        self._forecast_wind_chill = None
        self._forecast_wind_speed = None
        self._forecast_wind_direction = None
        self._rescheduled_from_game_id = None
        self._runner_on_first = None
        self._runner_on_second = None
        self._runner_on_third = None
        self._away_team_starting_pitcher = None
        self._home_team_starting_pitcher = None
        self._current_pitcher = None
        self._current_hitter = None
        self._winning_pitcher = None
        self._losing_pitcher = None
        self._saving_pitcher = None
        self._due_up_hitter_id1 = None
        self._due_up_hitter_id2 = None
        self._due_up_hitter_id3 = None
        self._global_game_id = None
        self._global_away_team_id = None
        self._global_home_team_id = None
        self._point_spread_away_team_money_line = None
        self._point_spread_home_team_money_line = None
        self._last_play = None
        self._is_closed = None
        self._updated = None
        self._innings = None
        self._game_end_date_time = None
        self._home_rotation_number = None
        self._away_rotation_number = None
        self._neutral_venue = None
        self._inning_description = None
        self._over_payout = None
        self._under_payout = None
        self._series_info = None
        self.discriminator = None
        if game_id is not None:
            self.game_id = game_id
        if season is not None:
            self.season = season
        if season_type is not None:
            self.season_type = season_type
        if status is not None:
            self.status = status
        if day is not None:
            self.day = day
        if date_time is not None:
            self.date_time = date_time
        if away_team is not None:
            self.away_team = away_team
        if home_team is not None:
            self.home_team = home_team
        if away_team_id is not None:
            self.away_team_id = away_team_id
        if home_team_id is not None:
            self.home_team_id = home_team_id
        if rescheduled_game_id is not None:
            self.rescheduled_game_id = rescheduled_game_id
        if stadium_id is not None:
            self.stadium_id = stadium_id
        if channel is not None:
            self.channel = channel
        if inning is not None:
            self.inning = inning
        if inning_half is not None:
            self.inning_half = inning_half
        if away_team_runs is not None:
            self.away_team_runs = away_team_runs
        if home_team_runs is not None:
            self.home_team_runs = home_team_runs
        if away_team_hits is not None:
            self.away_team_hits = away_team_hits
        if home_team_hits is not None:
            self.home_team_hits = home_team_hits
        if away_team_errors is not None:
            self.away_team_errors = away_team_errors
        if home_team_errors is not None:
            self.home_team_errors = home_team_errors
        if winning_pitcher_id is not None:
            self.winning_pitcher_id = winning_pitcher_id
        if losing_pitcher_id is not None:
            self.losing_pitcher_id = losing_pitcher_id
        if saving_pitcher_id is not None:
            self.saving_pitcher_id = saving_pitcher_id
        if attendance is not None:
            self.attendance = attendance
        if away_team_probable_pitcher_id is not None:
            self.away_team_probable_pitcher_id = away_team_probable_pitcher_id
        if home_team_probable_pitcher_id is not None:
            self.home_team_probable_pitcher_id = home_team_probable_pitcher_id
        if outs is not None:
            self.outs = outs
        if balls is not None:
            self.balls = balls
        if strikes is not None:
            self.strikes = strikes
        if current_pitcher_id is not None:
            self.current_pitcher_id = current_pitcher_id
        if current_hitter_id is not None:
            self.current_hitter_id = current_hitter_id
        if away_team_starting_pitcher_id is not None:
            self.away_team_starting_pitcher_id = away_team_starting_pitcher_id
        if home_team_starting_pitcher_id is not None:
            self.home_team_starting_pitcher_id = home_team_starting_pitcher_id
        if current_pitching_team_id is not None:
            self.current_pitching_team_id = current_pitching_team_id
        if current_hitting_team_id is not None:
            self.current_hitting_team_id = current_hitting_team_id
        if point_spread is not None:
            self.point_spread = point_spread
        if over_under is not None:
            self.over_under = over_under
        if away_team_money_line is not None:
            self.away_team_money_line = away_team_money_line
        if home_team_money_line is not None:
            self.home_team_money_line = home_team_money_line
        if forecast_temp_low is not None:
            self.forecast_temp_low = forecast_temp_low
        if forecast_temp_high is not None:
            self.forecast_temp_high = forecast_temp_high
        if forecast_description is not None:
            self.forecast_description = forecast_description
        if forecast_wind_chill is not None:
            self.forecast_wind_chill = forecast_wind_chill
        if forecast_wind_speed is not None:
            self.forecast_wind_speed = forecast_wind_speed
        if forecast_wind_direction is not None:
            self.forecast_wind_direction = forecast_wind_direction
        if rescheduled_from_game_id is not None:
            self.rescheduled_from_game_id = rescheduled_from_game_id
        if runner_on_first is not None:
            self.runner_on_first = runner_on_first
        if runner_on_second is not None:
            self.runner_on_second = runner_on_second
        if runner_on_third is not None:
            self.runner_on_third = runner_on_third
        if away_team_starting_pitcher is not None:
            self.away_team_starting_pitcher = away_team_starting_pitcher
        if home_team_starting_pitcher is not None:
            self.home_team_starting_pitcher = home_team_starting_pitcher
        if current_pitcher is not None:
            self.current_pitcher = current_pitcher
        if current_hitter is not None:
            self.current_hitter = current_hitter
        if winning_pitcher is not None:
            self.winning_pitcher = winning_pitcher
        if losing_pitcher is not None:
            self.losing_pitcher = losing_pitcher
        if saving_pitcher is not None:
            self.saving_pitcher = saving_pitcher
        if due_up_hitter_id1 is not None:
            self.due_up_hitter_id1 = due_up_hitter_id1
        if due_up_hitter_id2 is not None:
            self.due_up_hitter_id2 = due_up_hitter_id2
        if due_up_hitter_id3 is not None:
            self.due_up_hitter_id3 = due_up_hitter_id3
        if global_game_id is not None:
            self.global_game_id = global_game_id
        if global_away_team_id is not None:
            self.global_away_team_id = global_away_team_id
        if global_home_team_id is not None:
            self.global_home_team_id = global_home_team_id
        if point_spread_away_team_money_line is not None:
            self.point_spread_away_team_money_line = point_spread_away_team_money_line
        if point_spread_home_team_money_line is not None:
            self.point_spread_home_team_money_line = point_spread_home_team_money_line
        if last_play is not None:
            self.last_play = last_play
        if is_closed is not None:
            self.is_closed = is_closed
        if updated is not None:
            self.updated = updated
        if innings is not None:
            self.innings = innings
        if game_end_date_time is not None:
            self.game_end_date_time = game_end_date_time
        if home_rotation_number is not None:
            self.home_rotation_number = home_rotation_number
        if away_rotation_number is not None:
            self.away_rotation_number = away_rotation_number
        if neutral_venue is not None:
            self.neutral_venue = neutral_venue
        if inning_description is not None:
            self.inning_description = inning_description
        if over_payout is not None:
            self.over_payout = over_payout
        if under_payout is not None:
            self.under_payout = under_payout
        if series_info is not None:
            self.series_info = series_info

    @property
    def game_id(self):
        """Gets the game_id of this MlbStatsGame.  # noqa: E501


        :return: The game_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this MlbStatsGame.


        :param game_id: The game_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._game_id = game_id

    @property
    def season(self):
        """Gets the season of this MlbStatsGame.  # noqa: E501


        :return: The season of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this MlbStatsGame.


        :param season: The season of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this MlbStatsGame.  # noqa: E501


        :return: The season_type of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this MlbStatsGame.


        :param season_type: The season_type of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._season_type = season_type

    @property
    def status(self):
        """Gets the status of this MlbStatsGame.  # noqa: E501


        :return: The status of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MlbStatsGame.


        :param status: The status of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def day(self):
        """Gets the day of this MlbStatsGame.  # noqa: E501


        :return: The day of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this MlbStatsGame.


        :param day: The day of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._day = day

    @property
    def date_time(self):
        """Gets the date_time of this MlbStatsGame.  # noqa: E501


        :return: The date_time of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this MlbStatsGame.


        :param date_time: The date_time of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._date_time = date_time

    @property
    def away_team(self):
        """Gets the away_team of this MlbStatsGame.  # noqa: E501


        :return: The away_team of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._away_team

    @away_team.setter
    def away_team(self, away_team):
        """Sets the away_team of this MlbStatsGame.


        :param away_team: The away_team of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._away_team = away_team

    @property
    def home_team(self):
        """Gets the home_team of this MlbStatsGame.  # noqa: E501


        :return: The home_team of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._home_team

    @home_team.setter
    def home_team(self, home_team):
        """Sets the home_team of this MlbStatsGame.


        :param home_team: The home_team of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._home_team = home_team

    @property
    def away_team_id(self):
        """Gets the away_team_id of this MlbStatsGame.  # noqa: E501


        :return: The away_team_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_id

    @away_team_id.setter
    def away_team_id(self, away_team_id):
        """Sets the away_team_id of this MlbStatsGame.


        :param away_team_id: The away_team_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._away_team_id = away_team_id

    @property
    def home_team_id(self):
        """Gets the home_team_id of this MlbStatsGame.  # noqa: E501


        :return: The home_team_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_id

    @home_team_id.setter
    def home_team_id(self, home_team_id):
        """Sets the home_team_id of this MlbStatsGame.


        :param home_team_id: The home_team_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._home_team_id = home_team_id

    @property
    def rescheduled_game_id(self):
        """Gets the rescheduled_game_id of this MlbStatsGame.  # noqa: E501


        :return: The rescheduled_game_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._rescheduled_game_id

    @rescheduled_game_id.setter
    def rescheduled_game_id(self, rescheduled_game_id):
        """Sets the rescheduled_game_id of this MlbStatsGame.


        :param rescheduled_game_id: The rescheduled_game_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._rescheduled_game_id = rescheduled_game_id

    @property
    def stadium_id(self):
        """Gets the stadium_id of this MlbStatsGame.  # noqa: E501


        :return: The stadium_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._stadium_id

    @stadium_id.setter
    def stadium_id(self, stadium_id):
        """Sets the stadium_id of this MlbStatsGame.


        :param stadium_id: The stadium_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._stadium_id = stadium_id

    @property
    def channel(self):
        """Gets the channel of this MlbStatsGame.  # noqa: E501


        :return: The channel of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this MlbStatsGame.


        :param channel: The channel of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._channel = channel

    @property
    def inning(self):
        """Gets the inning of this MlbStatsGame.  # noqa: E501


        :return: The inning of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._inning

    @inning.setter
    def inning(self, inning):
        """Sets the inning of this MlbStatsGame.


        :param inning: The inning of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._inning = inning

    @property
    def inning_half(self):
        """Gets the inning_half of this MlbStatsGame.  # noqa: E501


        :return: The inning_half of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._inning_half

    @inning_half.setter
    def inning_half(self, inning_half):
        """Sets the inning_half of this MlbStatsGame.


        :param inning_half: The inning_half of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._inning_half = inning_half

    @property
    def away_team_runs(self):
        """Gets the away_team_runs of this MlbStatsGame.  # noqa: E501


        :return: The away_team_runs of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_runs

    @away_team_runs.setter
    def away_team_runs(self, away_team_runs):
        """Sets the away_team_runs of this MlbStatsGame.


        :param away_team_runs: The away_team_runs of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._away_team_runs = away_team_runs

    @property
    def home_team_runs(self):
        """Gets the home_team_runs of this MlbStatsGame.  # noqa: E501


        :return: The home_team_runs of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_runs

    @home_team_runs.setter
    def home_team_runs(self, home_team_runs):
        """Sets the home_team_runs of this MlbStatsGame.


        :param home_team_runs: The home_team_runs of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._home_team_runs = home_team_runs

    @property
    def away_team_hits(self):
        """Gets the away_team_hits of this MlbStatsGame.  # noqa: E501


        :return: The away_team_hits of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_hits

    @away_team_hits.setter
    def away_team_hits(self, away_team_hits):
        """Sets the away_team_hits of this MlbStatsGame.


        :param away_team_hits: The away_team_hits of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._away_team_hits = away_team_hits

    @property
    def home_team_hits(self):
        """Gets the home_team_hits of this MlbStatsGame.  # noqa: E501


        :return: The home_team_hits of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_hits

    @home_team_hits.setter
    def home_team_hits(self, home_team_hits):
        """Sets the home_team_hits of this MlbStatsGame.


        :param home_team_hits: The home_team_hits of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._home_team_hits = home_team_hits

    @property
    def away_team_errors(self):
        """Gets the away_team_errors of this MlbStatsGame.  # noqa: E501


        :return: The away_team_errors of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_errors

    @away_team_errors.setter
    def away_team_errors(self, away_team_errors):
        """Sets the away_team_errors of this MlbStatsGame.


        :param away_team_errors: The away_team_errors of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._away_team_errors = away_team_errors

    @property
    def home_team_errors(self):
        """Gets the home_team_errors of this MlbStatsGame.  # noqa: E501


        :return: The home_team_errors of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_errors

    @home_team_errors.setter
    def home_team_errors(self, home_team_errors):
        """Sets the home_team_errors of this MlbStatsGame.


        :param home_team_errors: The home_team_errors of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._home_team_errors = home_team_errors

    @property
    def winning_pitcher_id(self):
        """Gets the winning_pitcher_id of this MlbStatsGame.  # noqa: E501


        :return: The winning_pitcher_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._winning_pitcher_id

    @winning_pitcher_id.setter
    def winning_pitcher_id(self, winning_pitcher_id):
        """Sets the winning_pitcher_id of this MlbStatsGame.


        :param winning_pitcher_id: The winning_pitcher_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._winning_pitcher_id = winning_pitcher_id

    @property
    def losing_pitcher_id(self):
        """Gets the losing_pitcher_id of this MlbStatsGame.  # noqa: E501


        :return: The losing_pitcher_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._losing_pitcher_id

    @losing_pitcher_id.setter
    def losing_pitcher_id(self, losing_pitcher_id):
        """Sets the losing_pitcher_id of this MlbStatsGame.


        :param losing_pitcher_id: The losing_pitcher_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._losing_pitcher_id = losing_pitcher_id

    @property
    def saving_pitcher_id(self):
        """Gets the saving_pitcher_id of this MlbStatsGame.  # noqa: E501


        :return: The saving_pitcher_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._saving_pitcher_id

    @saving_pitcher_id.setter
    def saving_pitcher_id(self, saving_pitcher_id):
        """Sets the saving_pitcher_id of this MlbStatsGame.


        :param saving_pitcher_id: The saving_pitcher_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._saving_pitcher_id = saving_pitcher_id

    @property
    def attendance(self):
        """Gets the attendance of this MlbStatsGame.  # noqa: E501


        :return: The attendance of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._attendance

    @attendance.setter
    def attendance(self, attendance):
        """Sets the attendance of this MlbStatsGame.


        :param attendance: The attendance of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._attendance = attendance

    @property
    def away_team_probable_pitcher_id(self):
        """Gets the away_team_probable_pitcher_id of this MlbStatsGame.  # noqa: E501


        :return: The away_team_probable_pitcher_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_probable_pitcher_id

    @away_team_probable_pitcher_id.setter
    def away_team_probable_pitcher_id(self, away_team_probable_pitcher_id):
        """Sets the away_team_probable_pitcher_id of this MlbStatsGame.


        :param away_team_probable_pitcher_id: The away_team_probable_pitcher_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._away_team_probable_pitcher_id = away_team_probable_pitcher_id

    @property
    def home_team_probable_pitcher_id(self):
        """Gets the home_team_probable_pitcher_id of this MlbStatsGame.  # noqa: E501


        :return: The home_team_probable_pitcher_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_probable_pitcher_id

    @home_team_probable_pitcher_id.setter
    def home_team_probable_pitcher_id(self, home_team_probable_pitcher_id):
        """Sets the home_team_probable_pitcher_id of this MlbStatsGame.


        :param home_team_probable_pitcher_id: The home_team_probable_pitcher_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._home_team_probable_pitcher_id = home_team_probable_pitcher_id

    @property
    def outs(self):
        """Gets the outs of this MlbStatsGame.  # noqa: E501


        :return: The outs of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._outs

    @outs.setter
    def outs(self, outs):
        """Sets the outs of this MlbStatsGame.


        :param outs: The outs of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._outs = outs

    @property
    def balls(self):
        """Gets the balls of this MlbStatsGame.  # noqa: E501


        :return: The balls of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._balls

    @balls.setter
    def balls(self, balls):
        """Sets the balls of this MlbStatsGame.


        :param balls: The balls of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._balls = balls

    @property
    def strikes(self):
        """Gets the strikes of this MlbStatsGame.  # noqa: E501


        :return: The strikes of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._strikes

    @strikes.setter
    def strikes(self, strikes):
        """Sets the strikes of this MlbStatsGame.


        :param strikes: The strikes of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._strikes = strikes

    @property
    def current_pitcher_id(self):
        """Gets the current_pitcher_id of this MlbStatsGame.  # noqa: E501


        :return: The current_pitcher_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._current_pitcher_id

    @current_pitcher_id.setter
    def current_pitcher_id(self, current_pitcher_id):
        """Sets the current_pitcher_id of this MlbStatsGame.


        :param current_pitcher_id: The current_pitcher_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._current_pitcher_id = current_pitcher_id

    @property
    def current_hitter_id(self):
        """Gets the current_hitter_id of this MlbStatsGame.  # noqa: E501


        :return: The current_hitter_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._current_hitter_id

    @current_hitter_id.setter
    def current_hitter_id(self, current_hitter_id):
        """Sets the current_hitter_id of this MlbStatsGame.


        :param current_hitter_id: The current_hitter_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._current_hitter_id = current_hitter_id

    @property
    def away_team_starting_pitcher_id(self):
        """Gets the away_team_starting_pitcher_id of this MlbStatsGame.  # noqa: E501


        :return: The away_team_starting_pitcher_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_starting_pitcher_id

    @away_team_starting_pitcher_id.setter
    def away_team_starting_pitcher_id(self, away_team_starting_pitcher_id):
        """Sets the away_team_starting_pitcher_id of this MlbStatsGame.


        :param away_team_starting_pitcher_id: The away_team_starting_pitcher_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._away_team_starting_pitcher_id = away_team_starting_pitcher_id

    @property
    def home_team_starting_pitcher_id(self):
        """Gets the home_team_starting_pitcher_id of this MlbStatsGame.  # noqa: E501


        :return: The home_team_starting_pitcher_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_starting_pitcher_id

    @home_team_starting_pitcher_id.setter
    def home_team_starting_pitcher_id(self, home_team_starting_pitcher_id):
        """Sets the home_team_starting_pitcher_id of this MlbStatsGame.


        :param home_team_starting_pitcher_id: The home_team_starting_pitcher_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._home_team_starting_pitcher_id = home_team_starting_pitcher_id

    @property
    def current_pitching_team_id(self):
        """Gets the current_pitching_team_id of this MlbStatsGame.  # noqa: E501


        :return: The current_pitching_team_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._current_pitching_team_id

    @current_pitching_team_id.setter
    def current_pitching_team_id(self, current_pitching_team_id):
        """Sets the current_pitching_team_id of this MlbStatsGame.


        :param current_pitching_team_id: The current_pitching_team_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._current_pitching_team_id = current_pitching_team_id

    @property
    def current_hitting_team_id(self):
        """Gets the current_hitting_team_id of this MlbStatsGame.  # noqa: E501


        :return: The current_hitting_team_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._current_hitting_team_id

    @current_hitting_team_id.setter
    def current_hitting_team_id(self, current_hitting_team_id):
        """Sets the current_hitting_team_id of this MlbStatsGame.


        :param current_hitting_team_id: The current_hitting_team_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._current_hitting_team_id = current_hitting_team_id

    @property
    def point_spread(self):
        """Gets the point_spread of this MlbStatsGame.  # noqa: E501


        :return: The point_spread of this MlbStatsGame.  # noqa: E501
        :rtype: float
        """
        return self._point_spread

    @point_spread.setter
    def point_spread(self, point_spread):
        """Sets the point_spread of this MlbStatsGame.


        :param point_spread: The point_spread of this MlbStatsGame.  # noqa: E501
        :type: float
        """

        self._point_spread = point_spread

    @property
    def over_under(self):
        """Gets the over_under of this MlbStatsGame.  # noqa: E501


        :return: The over_under of this MlbStatsGame.  # noqa: E501
        :rtype: float
        """
        return self._over_under

    @over_under.setter
    def over_under(self, over_under):
        """Sets the over_under of this MlbStatsGame.


        :param over_under: The over_under of this MlbStatsGame.  # noqa: E501
        :type: float
        """

        self._over_under = over_under

    @property
    def away_team_money_line(self):
        """Gets the away_team_money_line of this MlbStatsGame.  # noqa: E501


        :return: The away_team_money_line of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_money_line

    @away_team_money_line.setter
    def away_team_money_line(self, away_team_money_line):
        """Sets the away_team_money_line of this MlbStatsGame.


        :param away_team_money_line: The away_team_money_line of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._away_team_money_line = away_team_money_line

    @property
    def home_team_money_line(self):
        """Gets the home_team_money_line of this MlbStatsGame.  # noqa: E501


        :return: The home_team_money_line of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_money_line

    @home_team_money_line.setter
    def home_team_money_line(self, home_team_money_line):
        """Sets the home_team_money_line of this MlbStatsGame.


        :param home_team_money_line: The home_team_money_line of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._home_team_money_line = home_team_money_line

    @property
    def forecast_temp_low(self):
        """Gets the forecast_temp_low of this MlbStatsGame.  # noqa: E501


        :return: The forecast_temp_low of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._forecast_temp_low

    @forecast_temp_low.setter
    def forecast_temp_low(self, forecast_temp_low):
        """Sets the forecast_temp_low of this MlbStatsGame.


        :param forecast_temp_low: The forecast_temp_low of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._forecast_temp_low = forecast_temp_low

    @property
    def forecast_temp_high(self):
        """Gets the forecast_temp_high of this MlbStatsGame.  # noqa: E501


        :return: The forecast_temp_high of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._forecast_temp_high

    @forecast_temp_high.setter
    def forecast_temp_high(self, forecast_temp_high):
        """Sets the forecast_temp_high of this MlbStatsGame.


        :param forecast_temp_high: The forecast_temp_high of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._forecast_temp_high = forecast_temp_high

    @property
    def forecast_description(self):
        """Gets the forecast_description of this MlbStatsGame.  # noqa: E501


        :return: The forecast_description of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._forecast_description

    @forecast_description.setter
    def forecast_description(self, forecast_description):
        """Sets the forecast_description of this MlbStatsGame.


        :param forecast_description: The forecast_description of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._forecast_description = forecast_description

    @property
    def forecast_wind_chill(self):
        """Gets the forecast_wind_chill of this MlbStatsGame.  # noqa: E501


        :return: The forecast_wind_chill of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._forecast_wind_chill

    @forecast_wind_chill.setter
    def forecast_wind_chill(self, forecast_wind_chill):
        """Sets the forecast_wind_chill of this MlbStatsGame.


        :param forecast_wind_chill: The forecast_wind_chill of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._forecast_wind_chill = forecast_wind_chill

    @property
    def forecast_wind_speed(self):
        """Gets the forecast_wind_speed of this MlbStatsGame.  # noqa: E501


        :return: The forecast_wind_speed of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._forecast_wind_speed

    @forecast_wind_speed.setter
    def forecast_wind_speed(self, forecast_wind_speed):
        """Sets the forecast_wind_speed of this MlbStatsGame.


        :param forecast_wind_speed: The forecast_wind_speed of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._forecast_wind_speed = forecast_wind_speed

    @property
    def forecast_wind_direction(self):
        """Gets the forecast_wind_direction of this MlbStatsGame.  # noqa: E501


        :return: The forecast_wind_direction of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._forecast_wind_direction

    @forecast_wind_direction.setter
    def forecast_wind_direction(self, forecast_wind_direction):
        """Sets the forecast_wind_direction of this MlbStatsGame.


        :param forecast_wind_direction: The forecast_wind_direction of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._forecast_wind_direction = forecast_wind_direction

    @property
    def rescheduled_from_game_id(self):
        """Gets the rescheduled_from_game_id of this MlbStatsGame.  # noqa: E501


        :return: The rescheduled_from_game_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._rescheduled_from_game_id

    @rescheduled_from_game_id.setter
    def rescheduled_from_game_id(self, rescheduled_from_game_id):
        """Sets the rescheduled_from_game_id of this MlbStatsGame.


        :param rescheduled_from_game_id: The rescheduled_from_game_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._rescheduled_from_game_id = rescheduled_from_game_id

    @property
    def runner_on_first(self):
        """Gets the runner_on_first of this MlbStatsGame.  # noqa: E501


        :return: The runner_on_first of this MlbStatsGame.  # noqa: E501
        :rtype: bool
        """
        return self._runner_on_first

    @runner_on_first.setter
    def runner_on_first(self, runner_on_first):
        """Sets the runner_on_first of this MlbStatsGame.


        :param runner_on_first: The runner_on_first of this MlbStatsGame.  # noqa: E501
        :type: bool
        """

        self._runner_on_first = runner_on_first

    @property
    def runner_on_second(self):
        """Gets the runner_on_second of this MlbStatsGame.  # noqa: E501


        :return: The runner_on_second of this MlbStatsGame.  # noqa: E501
        :rtype: bool
        """
        return self._runner_on_second

    @runner_on_second.setter
    def runner_on_second(self, runner_on_second):
        """Sets the runner_on_second of this MlbStatsGame.


        :param runner_on_second: The runner_on_second of this MlbStatsGame.  # noqa: E501
        :type: bool
        """

        self._runner_on_second = runner_on_second

    @property
    def runner_on_third(self):
        """Gets the runner_on_third of this MlbStatsGame.  # noqa: E501


        :return: The runner_on_third of this MlbStatsGame.  # noqa: E501
        :rtype: bool
        """
        return self._runner_on_third

    @runner_on_third.setter
    def runner_on_third(self, runner_on_third):
        """Sets the runner_on_third of this MlbStatsGame.


        :param runner_on_third: The runner_on_third of this MlbStatsGame.  # noqa: E501
        :type: bool
        """

        self._runner_on_third = runner_on_third

    @property
    def away_team_starting_pitcher(self):
        """Gets the away_team_starting_pitcher of this MlbStatsGame.  # noqa: E501


        :return: The away_team_starting_pitcher of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._away_team_starting_pitcher

    @away_team_starting_pitcher.setter
    def away_team_starting_pitcher(self, away_team_starting_pitcher):
        """Sets the away_team_starting_pitcher of this MlbStatsGame.


        :param away_team_starting_pitcher: The away_team_starting_pitcher of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._away_team_starting_pitcher = away_team_starting_pitcher

    @property
    def home_team_starting_pitcher(self):
        """Gets the home_team_starting_pitcher of this MlbStatsGame.  # noqa: E501


        :return: The home_team_starting_pitcher of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._home_team_starting_pitcher

    @home_team_starting_pitcher.setter
    def home_team_starting_pitcher(self, home_team_starting_pitcher):
        """Sets the home_team_starting_pitcher of this MlbStatsGame.


        :param home_team_starting_pitcher: The home_team_starting_pitcher of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._home_team_starting_pitcher = home_team_starting_pitcher

    @property
    def current_pitcher(self):
        """Gets the current_pitcher of this MlbStatsGame.  # noqa: E501


        :return: The current_pitcher of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._current_pitcher

    @current_pitcher.setter
    def current_pitcher(self, current_pitcher):
        """Sets the current_pitcher of this MlbStatsGame.


        :param current_pitcher: The current_pitcher of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._current_pitcher = current_pitcher

    @property
    def current_hitter(self):
        """Gets the current_hitter of this MlbStatsGame.  # noqa: E501


        :return: The current_hitter of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._current_hitter

    @current_hitter.setter
    def current_hitter(self, current_hitter):
        """Sets the current_hitter of this MlbStatsGame.


        :param current_hitter: The current_hitter of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._current_hitter = current_hitter

    @property
    def winning_pitcher(self):
        """Gets the winning_pitcher of this MlbStatsGame.  # noqa: E501


        :return: The winning_pitcher of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._winning_pitcher

    @winning_pitcher.setter
    def winning_pitcher(self, winning_pitcher):
        """Sets the winning_pitcher of this MlbStatsGame.


        :param winning_pitcher: The winning_pitcher of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._winning_pitcher = winning_pitcher

    @property
    def losing_pitcher(self):
        """Gets the losing_pitcher of this MlbStatsGame.  # noqa: E501


        :return: The losing_pitcher of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._losing_pitcher

    @losing_pitcher.setter
    def losing_pitcher(self, losing_pitcher):
        """Sets the losing_pitcher of this MlbStatsGame.


        :param losing_pitcher: The losing_pitcher of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._losing_pitcher = losing_pitcher

    @property
    def saving_pitcher(self):
        """Gets the saving_pitcher of this MlbStatsGame.  # noqa: E501


        :return: The saving_pitcher of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._saving_pitcher

    @saving_pitcher.setter
    def saving_pitcher(self, saving_pitcher):
        """Sets the saving_pitcher of this MlbStatsGame.


        :param saving_pitcher: The saving_pitcher of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._saving_pitcher = saving_pitcher

    @property
    def due_up_hitter_id1(self):
        """Gets the due_up_hitter_id1 of this MlbStatsGame.  # noqa: E501


        :return: The due_up_hitter_id1 of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._due_up_hitter_id1

    @due_up_hitter_id1.setter
    def due_up_hitter_id1(self, due_up_hitter_id1):
        """Sets the due_up_hitter_id1 of this MlbStatsGame.


        :param due_up_hitter_id1: The due_up_hitter_id1 of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._due_up_hitter_id1 = due_up_hitter_id1

    @property
    def due_up_hitter_id2(self):
        """Gets the due_up_hitter_id2 of this MlbStatsGame.  # noqa: E501


        :return: The due_up_hitter_id2 of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._due_up_hitter_id2

    @due_up_hitter_id2.setter
    def due_up_hitter_id2(self, due_up_hitter_id2):
        """Sets the due_up_hitter_id2 of this MlbStatsGame.


        :param due_up_hitter_id2: The due_up_hitter_id2 of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._due_up_hitter_id2 = due_up_hitter_id2

    @property
    def due_up_hitter_id3(self):
        """Gets the due_up_hitter_id3 of this MlbStatsGame.  # noqa: E501


        :return: The due_up_hitter_id3 of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._due_up_hitter_id3

    @due_up_hitter_id3.setter
    def due_up_hitter_id3(self, due_up_hitter_id3):
        """Sets the due_up_hitter_id3 of this MlbStatsGame.


        :param due_up_hitter_id3: The due_up_hitter_id3 of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._due_up_hitter_id3 = due_up_hitter_id3

    @property
    def global_game_id(self):
        """Gets the global_game_id of this MlbStatsGame.  # noqa: E501


        :return: The global_game_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._global_game_id

    @global_game_id.setter
    def global_game_id(self, global_game_id):
        """Sets the global_game_id of this MlbStatsGame.


        :param global_game_id: The global_game_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._global_game_id = global_game_id

    @property
    def global_away_team_id(self):
        """Gets the global_away_team_id of this MlbStatsGame.  # noqa: E501


        :return: The global_away_team_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._global_away_team_id

    @global_away_team_id.setter
    def global_away_team_id(self, global_away_team_id):
        """Sets the global_away_team_id of this MlbStatsGame.


        :param global_away_team_id: The global_away_team_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._global_away_team_id = global_away_team_id

    @property
    def global_home_team_id(self):
        """Gets the global_home_team_id of this MlbStatsGame.  # noqa: E501


        :return: The global_home_team_id of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._global_home_team_id

    @global_home_team_id.setter
    def global_home_team_id(self, global_home_team_id):
        """Sets the global_home_team_id of this MlbStatsGame.


        :param global_home_team_id: The global_home_team_id of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._global_home_team_id = global_home_team_id

    @property
    def point_spread_away_team_money_line(self):
        """Gets the point_spread_away_team_money_line of this MlbStatsGame.  # noqa: E501


        :return: The point_spread_away_team_money_line of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._point_spread_away_team_money_line

    @point_spread_away_team_money_line.setter
    def point_spread_away_team_money_line(self, point_spread_away_team_money_line):
        """Sets the point_spread_away_team_money_line of this MlbStatsGame.


        :param point_spread_away_team_money_line: The point_spread_away_team_money_line of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._point_spread_away_team_money_line = point_spread_away_team_money_line

    @property
    def point_spread_home_team_money_line(self):
        """Gets the point_spread_home_team_money_line of this MlbStatsGame.  # noqa: E501


        :return: The point_spread_home_team_money_line of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._point_spread_home_team_money_line

    @point_spread_home_team_money_line.setter
    def point_spread_home_team_money_line(self, point_spread_home_team_money_line):
        """Sets the point_spread_home_team_money_line of this MlbStatsGame.


        :param point_spread_home_team_money_line: The point_spread_home_team_money_line of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._point_spread_home_team_money_line = point_spread_home_team_money_line

    @property
    def last_play(self):
        """Gets the last_play of this MlbStatsGame.  # noqa: E501


        :return: The last_play of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._last_play

    @last_play.setter
    def last_play(self, last_play):
        """Sets the last_play of this MlbStatsGame.


        :param last_play: The last_play of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._last_play = last_play

    @property
    def is_closed(self):
        """Gets the is_closed of this MlbStatsGame.  # noqa: E501


        :return: The is_closed of this MlbStatsGame.  # noqa: E501
        :rtype: bool
        """
        return self._is_closed

    @is_closed.setter
    def is_closed(self, is_closed):
        """Sets the is_closed of this MlbStatsGame.


        :param is_closed: The is_closed of this MlbStatsGame.  # noqa: E501
        :type: bool
        """

        self._is_closed = is_closed

    @property
    def updated(self):
        """Gets the updated of this MlbStatsGame.  # noqa: E501


        :return: The updated of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this MlbStatsGame.


        :param updated: The updated of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._updated = updated

    @property
    def innings(self):
        """Gets the innings of this MlbStatsGame.  # noqa: E501


        :return: The innings of this MlbStatsGame.  # noqa: E501
        :rtype: list[MlbStatsInning]
        """
        return self._innings

    @innings.setter
    def innings(self, innings):
        """Sets the innings of this MlbStatsGame.


        :param innings: The innings of this MlbStatsGame.  # noqa: E501
        :type: list[MlbStatsInning]
        """

        self._innings = innings

    @property
    def game_end_date_time(self):
        """Gets the game_end_date_time of this MlbStatsGame.  # noqa: E501


        :return: The game_end_date_time of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._game_end_date_time

    @game_end_date_time.setter
    def game_end_date_time(self, game_end_date_time):
        """Sets the game_end_date_time of this MlbStatsGame.


        :param game_end_date_time: The game_end_date_time of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._game_end_date_time = game_end_date_time

    @property
    def home_rotation_number(self):
        """Gets the home_rotation_number of this MlbStatsGame.  # noqa: E501


        :return: The home_rotation_number of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_rotation_number

    @home_rotation_number.setter
    def home_rotation_number(self, home_rotation_number):
        """Sets the home_rotation_number of this MlbStatsGame.


        :param home_rotation_number: The home_rotation_number of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._home_rotation_number = home_rotation_number

    @property
    def away_rotation_number(self):
        """Gets the away_rotation_number of this MlbStatsGame.  # noqa: E501


        :return: The away_rotation_number of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_rotation_number

    @away_rotation_number.setter
    def away_rotation_number(self, away_rotation_number):
        """Sets the away_rotation_number of this MlbStatsGame.


        :param away_rotation_number: The away_rotation_number of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._away_rotation_number = away_rotation_number

    @property
    def neutral_venue(self):
        """Gets the neutral_venue of this MlbStatsGame.  # noqa: E501


        :return: The neutral_venue of this MlbStatsGame.  # noqa: E501
        :rtype: bool
        """
        return self._neutral_venue

    @neutral_venue.setter
    def neutral_venue(self, neutral_venue):
        """Sets the neutral_venue of this MlbStatsGame.


        :param neutral_venue: The neutral_venue of this MlbStatsGame.  # noqa: E501
        :type: bool
        """

        self._neutral_venue = neutral_venue

    @property
    def inning_description(self):
        """Gets the inning_description of this MlbStatsGame.  # noqa: E501


        :return: The inning_description of this MlbStatsGame.  # noqa: E501
        :rtype: str
        """
        return self._inning_description

    @inning_description.setter
    def inning_description(self, inning_description):
        """Sets the inning_description of this MlbStatsGame.


        :param inning_description: The inning_description of this MlbStatsGame.  # noqa: E501
        :type: str
        """

        self._inning_description = inning_description

    @property
    def over_payout(self):
        """Gets the over_payout of this MlbStatsGame.  # noqa: E501


        :return: The over_payout of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._over_payout

    @over_payout.setter
    def over_payout(self, over_payout):
        """Sets the over_payout of this MlbStatsGame.


        :param over_payout: The over_payout of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._over_payout = over_payout

    @property
    def under_payout(self):
        """Gets the under_payout of this MlbStatsGame.  # noqa: E501


        :return: The under_payout of this MlbStatsGame.  # noqa: E501
        :rtype: int
        """
        return self._under_payout

    @under_payout.setter
    def under_payout(self, under_payout):
        """Sets the under_payout of this MlbStatsGame.


        :param under_payout: The under_payout of this MlbStatsGame.  # noqa: E501
        :type: int
        """

        self._under_payout = under_payout

    @property
    def series_info(self):
        """Gets the series_info of this MlbStatsGame.  # noqa: E501


        :return: The series_info of this MlbStatsGame.  # noqa: E501
        :rtype: MlbStatsSeries
        """
        return self._series_info

    @series_info.setter
    def series_info(self, series_info):
        """Sets the series_info of this MlbStatsGame.


        :param series_info: The series_info of this MlbStatsGame.  # noqa: E501
        :type: MlbStatsSeries
        """

        self._series_info = series_info

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MlbStatsGame, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MlbStatsGame):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
