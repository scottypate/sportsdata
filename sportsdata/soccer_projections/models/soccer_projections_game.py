# coding: utf-8

"""
    Soccer v3 Projections

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SoccerProjectionsGame(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'game_id': 'int',
        'round_id': 'int',
        'season': 'int',
        'season_type': 'int',
        'group': 'str',
        'away_team_id': 'int',
        'home_team_id': 'int',
        'venue_id': 'int',
        'day': 'str',
        'date_time': 'str',
        'status': 'str',
        'week': 'int',
        'period': 'str',
        'clock': 'int',
        'winner': 'str',
        'venue_type': 'str',
        'away_team_key': 'str',
        'away_team_name': 'str',
        'away_team_country_code': 'str',
        'away_team_score': 'int',
        'away_team_score_period1': 'int',
        'away_team_score_period2': 'int',
        'away_team_score_extra_time': 'int',
        'away_team_score_penalty': 'int',
        'home_team_key': 'str',
        'home_team_name': 'str',
        'home_team_country_code': 'str',
        'home_team_score': 'int',
        'home_team_score_period1': 'int',
        'home_team_score_period2': 'int',
        'home_team_score_extra_time': 'int',
        'home_team_score_penalty': 'int',
        'home_team_money_line': 'int',
        'away_team_money_line': 'int',
        'draw_money_line': 'int',
        'point_spread': 'float',
        'home_team_point_spread_payout': 'int',
        'away_team_point_spread_payout': 'int',
        'over_under': 'float',
        'over_payout': 'int',
        'under_payout': 'int',
        'attendance': 'int',
        'updated': 'str',
        'updated_utc': 'str',
        'global_game_id': 'int',
        'global_away_team_id': 'int',
        'global_home_team_id': 'int',
        'clock_extra': 'int',
        'clock_display': 'str',
        'is_closed': 'bool',
        'home_team_formation': 'str',
        'away_team_formation': 'str',
        'playoff_aggregate_score': 'SoccerProjectionsPlayoffAggregateScore'
    }

    attribute_map = {
        'game_id': 'GameId',
        'round_id': 'RoundId',
        'season': 'Season',
        'season_type': 'SeasonType',
        'group': 'Group',
        'away_team_id': 'AwayTeamId',
        'home_team_id': 'HomeTeamId',
        'venue_id': 'VenueId',
        'day': 'Day',
        'date_time': 'DateTime',
        'status': 'Status',
        'week': 'Week',
        'period': 'Period',
        'clock': 'Clock',
        'winner': 'Winner',
        'venue_type': 'VenueType',
        'away_team_key': 'AwayTeamKey',
        'away_team_name': 'AwayTeamName',
        'away_team_country_code': 'AwayTeamCountryCode',
        'away_team_score': 'AwayTeamScore',
        'away_team_score_period1': 'AwayTeamScorePeriod1',
        'away_team_score_period2': 'AwayTeamScorePeriod2',
        'away_team_score_extra_time': 'AwayTeamScoreExtraTime',
        'away_team_score_penalty': 'AwayTeamScorePenalty',
        'home_team_key': 'HomeTeamKey',
        'home_team_name': 'HomeTeamName',
        'home_team_country_code': 'HomeTeamCountryCode',
        'home_team_score': 'HomeTeamScore',
        'home_team_score_period1': 'HomeTeamScorePeriod1',
        'home_team_score_period2': 'HomeTeamScorePeriod2',
        'home_team_score_extra_time': 'HomeTeamScoreExtraTime',
        'home_team_score_penalty': 'HomeTeamScorePenalty',
        'home_team_money_line': 'HomeTeamMoneyLine',
        'away_team_money_line': 'AwayTeamMoneyLine',
        'draw_money_line': 'DrawMoneyLine',
        'point_spread': 'PointSpread',
        'home_team_point_spread_payout': 'HomeTeamPointSpreadPayout',
        'away_team_point_spread_payout': 'AwayTeamPointSpreadPayout',
        'over_under': 'OverUnder',
        'over_payout': 'OverPayout',
        'under_payout': 'UnderPayout',
        'attendance': 'Attendance',
        'updated': 'Updated',
        'updated_utc': 'UpdatedUtc',
        'global_game_id': 'GlobalGameId',
        'global_away_team_id': 'GlobalAwayTeamId',
        'global_home_team_id': 'GlobalHomeTeamId',
        'clock_extra': 'ClockExtra',
        'clock_display': 'ClockDisplay',
        'is_closed': 'IsClosed',
        'home_team_formation': 'HomeTeamFormation',
        'away_team_formation': 'AwayTeamFormation',
        'playoff_aggregate_score': 'PlayoffAggregateScore'
    }

    def __init__(self, game_id=None, round_id=None, season=None, season_type=None, group=None, away_team_id=None, home_team_id=None, venue_id=None, day=None, date_time=None, status=None, week=None, period=None, clock=None, winner=None, venue_type=None, away_team_key=None, away_team_name=None, away_team_country_code=None, away_team_score=None, away_team_score_period1=None, away_team_score_period2=None, away_team_score_extra_time=None, away_team_score_penalty=None, home_team_key=None, home_team_name=None, home_team_country_code=None, home_team_score=None, home_team_score_period1=None, home_team_score_period2=None, home_team_score_extra_time=None, home_team_score_penalty=None, home_team_money_line=None, away_team_money_line=None, draw_money_line=None, point_spread=None, home_team_point_spread_payout=None, away_team_point_spread_payout=None, over_under=None, over_payout=None, under_payout=None, attendance=None, updated=None, updated_utc=None, global_game_id=None, global_away_team_id=None, global_home_team_id=None, clock_extra=None, clock_display=None, is_closed=None, home_team_formation=None, away_team_formation=None, playoff_aggregate_score=None):  # noqa: E501
        """SoccerProjectionsGame - a model defined in Swagger"""  # noqa: E501
        self._game_id = None
        self._round_id = None
        self._season = None
        self._season_type = None
        self._group = None
        self._away_team_id = None
        self._home_team_id = None
        self._venue_id = None
        self._day = None
        self._date_time = None
        self._status = None
        self._week = None
        self._period = None
        self._clock = None
        self._winner = None
        self._venue_type = None
        self._away_team_key = None
        self._away_team_name = None
        self._away_team_country_code = None
        self._away_team_score = None
        self._away_team_score_period1 = None
        self._away_team_score_period2 = None
        self._away_team_score_extra_time = None
        self._away_team_score_penalty = None
        self._home_team_key = None
        self._home_team_name = None
        self._home_team_country_code = None
        self._home_team_score = None
        self._home_team_score_period1 = None
        self._home_team_score_period2 = None
        self._home_team_score_extra_time = None
        self._home_team_score_penalty = None
        self._home_team_money_line = None
        self._away_team_money_line = None
        self._draw_money_line = None
        self._point_spread = None
        self._home_team_point_spread_payout = None
        self._away_team_point_spread_payout = None
        self._over_under = None
        self._over_payout = None
        self._under_payout = None
        self._attendance = None
        self._updated = None
        self._updated_utc = None
        self._global_game_id = None
        self._global_away_team_id = None
        self._global_home_team_id = None
        self._clock_extra = None
        self._clock_display = None
        self._is_closed = None
        self._home_team_formation = None
        self._away_team_formation = None
        self._playoff_aggregate_score = None
        self.discriminator = None
        if game_id is not None:
            self.game_id = game_id
        if round_id is not None:
            self.round_id = round_id
        if season is not None:
            self.season = season
        if season_type is not None:
            self.season_type = season_type
        if group is not None:
            self.group = group
        if away_team_id is not None:
            self.away_team_id = away_team_id
        if home_team_id is not None:
            self.home_team_id = home_team_id
        if venue_id is not None:
            self.venue_id = venue_id
        if day is not None:
            self.day = day
        if date_time is not None:
            self.date_time = date_time
        if status is not None:
            self.status = status
        if week is not None:
            self.week = week
        if period is not None:
            self.period = period
        if clock is not None:
            self.clock = clock
        if winner is not None:
            self.winner = winner
        if venue_type is not None:
            self.venue_type = venue_type
        if away_team_key is not None:
            self.away_team_key = away_team_key
        if away_team_name is not None:
            self.away_team_name = away_team_name
        if away_team_country_code is not None:
            self.away_team_country_code = away_team_country_code
        if away_team_score is not None:
            self.away_team_score = away_team_score
        if away_team_score_period1 is not None:
            self.away_team_score_period1 = away_team_score_period1
        if away_team_score_period2 is not None:
            self.away_team_score_period2 = away_team_score_period2
        if away_team_score_extra_time is not None:
            self.away_team_score_extra_time = away_team_score_extra_time
        if away_team_score_penalty is not None:
            self.away_team_score_penalty = away_team_score_penalty
        if home_team_key is not None:
            self.home_team_key = home_team_key
        if home_team_name is not None:
            self.home_team_name = home_team_name
        if home_team_country_code is not None:
            self.home_team_country_code = home_team_country_code
        if home_team_score is not None:
            self.home_team_score = home_team_score
        if home_team_score_period1 is not None:
            self.home_team_score_period1 = home_team_score_period1
        if home_team_score_period2 is not None:
            self.home_team_score_period2 = home_team_score_period2
        if home_team_score_extra_time is not None:
            self.home_team_score_extra_time = home_team_score_extra_time
        if home_team_score_penalty is not None:
            self.home_team_score_penalty = home_team_score_penalty
        if home_team_money_line is not None:
            self.home_team_money_line = home_team_money_line
        if away_team_money_line is not None:
            self.away_team_money_line = away_team_money_line
        if draw_money_line is not None:
            self.draw_money_line = draw_money_line
        if point_spread is not None:
            self.point_spread = point_spread
        if home_team_point_spread_payout is not None:
            self.home_team_point_spread_payout = home_team_point_spread_payout
        if away_team_point_spread_payout is not None:
            self.away_team_point_spread_payout = away_team_point_spread_payout
        if over_under is not None:
            self.over_under = over_under
        if over_payout is not None:
            self.over_payout = over_payout
        if under_payout is not None:
            self.under_payout = under_payout
        if attendance is not None:
            self.attendance = attendance
        if updated is not None:
            self.updated = updated
        if updated_utc is not None:
            self.updated_utc = updated_utc
        if global_game_id is not None:
            self.global_game_id = global_game_id
        if global_away_team_id is not None:
            self.global_away_team_id = global_away_team_id
        if global_home_team_id is not None:
            self.global_home_team_id = global_home_team_id
        if clock_extra is not None:
            self.clock_extra = clock_extra
        if clock_display is not None:
            self.clock_display = clock_display
        if is_closed is not None:
            self.is_closed = is_closed
        if home_team_formation is not None:
            self.home_team_formation = home_team_formation
        if away_team_formation is not None:
            self.away_team_formation = away_team_formation
        if playoff_aggregate_score is not None:
            self.playoff_aggregate_score = playoff_aggregate_score

    @property
    def game_id(self):
        """Gets the game_id of this SoccerProjectionsGame.  # noqa: E501


        :return: The game_id of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id):
        """Sets the game_id of this SoccerProjectionsGame.


        :param game_id: The game_id of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._game_id = game_id

    @property
    def round_id(self):
        """Gets the round_id of this SoccerProjectionsGame.  # noqa: E501


        :return: The round_id of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._round_id

    @round_id.setter
    def round_id(self, round_id):
        """Sets the round_id of this SoccerProjectionsGame.


        :param round_id: The round_id of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._round_id = round_id

    @property
    def season(self):
        """Gets the season of this SoccerProjectionsGame.  # noqa: E501


        :return: The season of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this SoccerProjectionsGame.


        :param season: The season of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._season = season

    @property
    def season_type(self):
        """Gets the season_type of this SoccerProjectionsGame.  # noqa: E501


        :return: The season_type of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._season_type

    @season_type.setter
    def season_type(self, season_type):
        """Sets the season_type of this SoccerProjectionsGame.


        :param season_type: The season_type of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._season_type = season_type

    @property
    def group(self):
        """Gets the group of this SoccerProjectionsGame.  # noqa: E501


        :return: The group of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this SoccerProjectionsGame.


        :param group: The group of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._group = group

    @property
    def away_team_id(self):
        """Gets the away_team_id of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_id of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_id

    @away_team_id.setter
    def away_team_id(self, away_team_id):
        """Sets the away_team_id of this SoccerProjectionsGame.


        :param away_team_id: The away_team_id of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._away_team_id = away_team_id

    @property
    def home_team_id(self):
        """Gets the home_team_id of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_id of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_id

    @home_team_id.setter
    def home_team_id(self, home_team_id):
        """Sets the home_team_id of this SoccerProjectionsGame.


        :param home_team_id: The home_team_id of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._home_team_id = home_team_id

    @property
    def venue_id(self):
        """Gets the venue_id of this SoccerProjectionsGame.  # noqa: E501


        :return: The venue_id of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._venue_id

    @venue_id.setter
    def venue_id(self, venue_id):
        """Sets the venue_id of this SoccerProjectionsGame.


        :param venue_id: The venue_id of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._venue_id = venue_id

    @property
    def day(self):
        """Gets the day of this SoccerProjectionsGame.  # noqa: E501


        :return: The day of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this SoccerProjectionsGame.


        :param day: The day of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._day = day

    @property
    def date_time(self):
        """Gets the date_time of this SoccerProjectionsGame.  # noqa: E501


        :return: The date_time of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this SoccerProjectionsGame.


        :param date_time: The date_time of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._date_time = date_time

    @property
    def status(self):
        """Gets the status of this SoccerProjectionsGame.  # noqa: E501


        :return: The status of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SoccerProjectionsGame.


        :param status: The status of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def week(self):
        """Gets the week of this SoccerProjectionsGame.  # noqa: E501


        :return: The week of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this SoccerProjectionsGame.


        :param week: The week of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._week = week

    @property
    def period(self):
        """Gets the period of this SoccerProjectionsGame.  # noqa: E501


        :return: The period of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this SoccerProjectionsGame.


        :param period: The period of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._period = period

    @property
    def clock(self):
        """Gets the clock of this SoccerProjectionsGame.  # noqa: E501


        :return: The clock of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._clock

    @clock.setter
    def clock(self, clock):
        """Sets the clock of this SoccerProjectionsGame.


        :param clock: The clock of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._clock = clock

    @property
    def winner(self):
        """Gets the winner of this SoccerProjectionsGame.  # noqa: E501


        :return: The winner of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._winner

    @winner.setter
    def winner(self, winner):
        """Sets the winner of this SoccerProjectionsGame.


        :param winner: The winner of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._winner = winner

    @property
    def venue_type(self):
        """Gets the venue_type of this SoccerProjectionsGame.  # noqa: E501


        :return: The venue_type of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._venue_type

    @venue_type.setter
    def venue_type(self, venue_type):
        """Sets the venue_type of this SoccerProjectionsGame.


        :param venue_type: The venue_type of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._venue_type = venue_type

    @property
    def away_team_key(self):
        """Gets the away_team_key of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_key of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._away_team_key

    @away_team_key.setter
    def away_team_key(self, away_team_key):
        """Sets the away_team_key of this SoccerProjectionsGame.


        :param away_team_key: The away_team_key of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._away_team_key = away_team_key

    @property
    def away_team_name(self):
        """Gets the away_team_name of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_name of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._away_team_name

    @away_team_name.setter
    def away_team_name(self, away_team_name):
        """Sets the away_team_name of this SoccerProjectionsGame.


        :param away_team_name: The away_team_name of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._away_team_name = away_team_name

    @property
    def away_team_country_code(self):
        """Gets the away_team_country_code of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_country_code of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._away_team_country_code

    @away_team_country_code.setter
    def away_team_country_code(self, away_team_country_code):
        """Sets the away_team_country_code of this SoccerProjectionsGame.


        :param away_team_country_code: The away_team_country_code of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._away_team_country_code = away_team_country_code

    @property
    def away_team_score(self):
        """Gets the away_team_score of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_score of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_score

    @away_team_score.setter
    def away_team_score(self, away_team_score):
        """Sets the away_team_score of this SoccerProjectionsGame.


        :param away_team_score: The away_team_score of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._away_team_score = away_team_score

    @property
    def away_team_score_period1(self):
        """Gets the away_team_score_period1 of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_score_period1 of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_score_period1

    @away_team_score_period1.setter
    def away_team_score_period1(self, away_team_score_period1):
        """Sets the away_team_score_period1 of this SoccerProjectionsGame.


        :param away_team_score_period1: The away_team_score_period1 of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._away_team_score_period1 = away_team_score_period1

    @property
    def away_team_score_period2(self):
        """Gets the away_team_score_period2 of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_score_period2 of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_score_period2

    @away_team_score_period2.setter
    def away_team_score_period2(self, away_team_score_period2):
        """Sets the away_team_score_period2 of this SoccerProjectionsGame.


        :param away_team_score_period2: The away_team_score_period2 of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._away_team_score_period2 = away_team_score_period2

    @property
    def away_team_score_extra_time(self):
        """Gets the away_team_score_extra_time of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_score_extra_time of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_score_extra_time

    @away_team_score_extra_time.setter
    def away_team_score_extra_time(self, away_team_score_extra_time):
        """Sets the away_team_score_extra_time of this SoccerProjectionsGame.


        :param away_team_score_extra_time: The away_team_score_extra_time of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._away_team_score_extra_time = away_team_score_extra_time

    @property
    def away_team_score_penalty(self):
        """Gets the away_team_score_penalty of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_score_penalty of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_score_penalty

    @away_team_score_penalty.setter
    def away_team_score_penalty(self, away_team_score_penalty):
        """Sets the away_team_score_penalty of this SoccerProjectionsGame.


        :param away_team_score_penalty: The away_team_score_penalty of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._away_team_score_penalty = away_team_score_penalty

    @property
    def home_team_key(self):
        """Gets the home_team_key of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_key of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._home_team_key

    @home_team_key.setter
    def home_team_key(self, home_team_key):
        """Sets the home_team_key of this SoccerProjectionsGame.


        :param home_team_key: The home_team_key of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._home_team_key = home_team_key

    @property
    def home_team_name(self):
        """Gets the home_team_name of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_name of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._home_team_name

    @home_team_name.setter
    def home_team_name(self, home_team_name):
        """Sets the home_team_name of this SoccerProjectionsGame.


        :param home_team_name: The home_team_name of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._home_team_name = home_team_name

    @property
    def home_team_country_code(self):
        """Gets the home_team_country_code of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_country_code of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._home_team_country_code

    @home_team_country_code.setter
    def home_team_country_code(self, home_team_country_code):
        """Sets the home_team_country_code of this SoccerProjectionsGame.


        :param home_team_country_code: The home_team_country_code of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._home_team_country_code = home_team_country_code

    @property
    def home_team_score(self):
        """Gets the home_team_score of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_score of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_score

    @home_team_score.setter
    def home_team_score(self, home_team_score):
        """Sets the home_team_score of this SoccerProjectionsGame.


        :param home_team_score: The home_team_score of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._home_team_score = home_team_score

    @property
    def home_team_score_period1(self):
        """Gets the home_team_score_period1 of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_score_period1 of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_score_period1

    @home_team_score_period1.setter
    def home_team_score_period1(self, home_team_score_period1):
        """Sets the home_team_score_period1 of this SoccerProjectionsGame.


        :param home_team_score_period1: The home_team_score_period1 of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._home_team_score_period1 = home_team_score_period1

    @property
    def home_team_score_period2(self):
        """Gets the home_team_score_period2 of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_score_period2 of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_score_period2

    @home_team_score_period2.setter
    def home_team_score_period2(self, home_team_score_period2):
        """Sets the home_team_score_period2 of this SoccerProjectionsGame.


        :param home_team_score_period2: The home_team_score_period2 of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._home_team_score_period2 = home_team_score_period2

    @property
    def home_team_score_extra_time(self):
        """Gets the home_team_score_extra_time of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_score_extra_time of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_score_extra_time

    @home_team_score_extra_time.setter
    def home_team_score_extra_time(self, home_team_score_extra_time):
        """Sets the home_team_score_extra_time of this SoccerProjectionsGame.


        :param home_team_score_extra_time: The home_team_score_extra_time of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._home_team_score_extra_time = home_team_score_extra_time

    @property
    def home_team_score_penalty(self):
        """Gets the home_team_score_penalty of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_score_penalty of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_score_penalty

    @home_team_score_penalty.setter
    def home_team_score_penalty(self, home_team_score_penalty):
        """Sets the home_team_score_penalty of this SoccerProjectionsGame.


        :param home_team_score_penalty: The home_team_score_penalty of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._home_team_score_penalty = home_team_score_penalty

    @property
    def home_team_money_line(self):
        """Gets the home_team_money_line of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_money_line of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_money_line

    @home_team_money_line.setter
    def home_team_money_line(self, home_team_money_line):
        """Sets the home_team_money_line of this SoccerProjectionsGame.


        :param home_team_money_line: The home_team_money_line of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._home_team_money_line = home_team_money_line

    @property
    def away_team_money_line(self):
        """Gets the away_team_money_line of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_money_line of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_money_line

    @away_team_money_line.setter
    def away_team_money_line(self, away_team_money_line):
        """Sets the away_team_money_line of this SoccerProjectionsGame.


        :param away_team_money_line: The away_team_money_line of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._away_team_money_line = away_team_money_line

    @property
    def draw_money_line(self):
        """Gets the draw_money_line of this SoccerProjectionsGame.  # noqa: E501


        :return: The draw_money_line of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._draw_money_line

    @draw_money_line.setter
    def draw_money_line(self, draw_money_line):
        """Sets the draw_money_line of this SoccerProjectionsGame.


        :param draw_money_line: The draw_money_line of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._draw_money_line = draw_money_line

    @property
    def point_spread(self):
        """Gets the point_spread of this SoccerProjectionsGame.  # noqa: E501


        :return: The point_spread of this SoccerProjectionsGame.  # noqa: E501
        :rtype: float
        """
        return self._point_spread

    @point_spread.setter
    def point_spread(self, point_spread):
        """Sets the point_spread of this SoccerProjectionsGame.


        :param point_spread: The point_spread of this SoccerProjectionsGame.  # noqa: E501
        :type: float
        """

        self._point_spread = point_spread

    @property
    def home_team_point_spread_payout(self):
        """Gets the home_team_point_spread_payout of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_point_spread_payout of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._home_team_point_spread_payout

    @home_team_point_spread_payout.setter
    def home_team_point_spread_payout(self, home_team_point_spread_payout):
        """Sets the home_team_point_spread_payout of this SoccerProjectionsGame.


        :param home_team_point_spread_payout: The home_team_point_spread_payout of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._home_team_point_spread_payout = home_team_point_spread_payout

    @property
    def away_team_point_spread_payout(self):
        """Gets the away_team_point_spread_payout of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_point_spread_payout of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._away_team_point_spread_payout

    @away_team_point_spread_payout.setter
    def away_team_point_spread_payout(self, away_team_point_spread_payout):
        """Sets the away_team_point_spread_payout of this SoccerProjectionsGame.


        :param away_team_point_spread_payout: The away_team_point_spread_payout of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._away_team_point_spread_payout = away_team_point_spread_payout

    @property
    def over_under(self):
        """Gets the over_under of this SoccerProjectionsGame.  # noqa: E501


        :return: The over_under of this SoccerProjectionsGame.  # noqa: E501
        :rtype: float
        """
        return self._over_under

    @over_under.setter
    def over_under(self, over_under):
        """Sets the over_under of this SoccerProjectionsGame.


        :param over_under: The over_under of this SoccerProjectionsGame.  # noqa: E501
        :type: float
        """

        self._over_under = over_under

    @property
    def over_payout(self):
        """Gets the over_payout of this SoccerProjectionsGame.  # noqa: E501


        :return: The over_payout of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._over_payout

    @over_payout.setter
    def over_payout(self, over_payout):
        """Sets the over_payout of this SoccerProjectionsGame.


        :param over_payout: The over_payout of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._over_payout = over_payout

    @property
    def under_payout(self):
        """Gets the under_payout of this SoccerProjectionsGame.  # noqa: E501


        :return: The under_payout of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._under_payout

    @under_payout.setter
    def under_payout(self, under_payout):
        """Sets the under_payout of this SoccerProjectionsGame.


        :param under_payout: The under_payout of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._under_payout = under_payout

    @property
    def attendance(self):
        """Gets the attendance of this SoccerProjectionsGame.  # noqa: E501


        :return: The attendance of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._attendance

    @attendance.setter
    def attendance(self, attendance):
        """Sets the attendance of this SoccerProjectionsGame.


        :param attendance: The attendance of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._attendance = attendance

    @property
    def updated(self):
        """Gets the updated of this SoccerProjectionsGame.  # noqa: E501


        :return: The updated of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this SoccerProjectionsGame.


        :param updated: The updated of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._updated = updated

    @property
    def updated_utc(self):
        """Gets the updated_utc of this SoccerProjectionsGame.  # noqa: E501


        :return: The updated_utc of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._updated_utc

    @updated_utc.setter
    def updated_utc(self, updated_utc):
        """Sets the updated_utc of this SoccerProjectionsGame.


        :param updated_utc: The updated_utc of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._updated_utc = updated_utc

    @property
    def global_game_id(self):
        """Gets the global_game_id of this SoccerProjectionsGame.  # noqa: E501


        :return: The global_game_id of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._global_game_id

    @global_game_id.setter
    def global_game_id(self, global_game_id):
        """Sets the global_game_id of this SoccerProjectionsGame.


        :param global_game_id: The global_game_id of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._global_game_id = global_game_id

    @property
    def global_away_team_id(self):
        """Gets the global_away_team_id of this SoccerProjectionsGame.  # noqa: E501


        :return: The global_away_team_id of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._global_away_team_id

    @global_away_team_id.setter
    def global_away_team_id(self, global_away_team_id):
        """Sets the global_away_team_id of this SoccerProjectionsGame.


        :param global_away_team_id: The global_away_team_id of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._global_away_team_id = global_away_team_id

    @property
    def global_home_team_id(self):
        """Gets the global_home_team_id of this SoccerProjectionsGame.  # noqa: E501


        :return: The global_home_team_id of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._global_home_team_id

    @global_home_team_id.setter
    def global_home_team_id(self, global_home_team_id):
        """Sets the global_home_team_id of this SoccerProjectionsGame.


        :param global_home_team_id: The global_home_team_id of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._global_home_team_id = global_home_team_id

    @property
    def clock_extra(self):
        """Gets the clock_extra of this SoccerProjectionsGame.  # noqa: E501


        :return: The clock_extra of this SoccerProjectionsGame.  # noqa: E501
        :rtype: int
        """
        return self._clock_extra

    @clock_extra.setter
    def clock_extra(self, clock_extra):
        """Sets the clock_extra of this SoccerProjectionsGame.


        :param clock_extra: The clock_extra of this SoccerProjectionsGame.  # noqa: E501
        :type: int
        """

        self._clock_extra = clock_extra

    @property
    def clock_display(self):
        """Gets the clock_display of this SoccerProjectionsGame.  # noqa: E501


        :return: The clock_display of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._clock_display

    @clock_display.setter
    def clock_display(self, clock_display):
        """Sets the clock_display of this SoccerProjectionsGame.


        :param clock_display: The clock_display of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._clock_display = clock_display

    @property
    def is_closed(self):
        """Gets the is_closed of this SoccerProjectionsGame.  # noqa: E501


        :return: The is_closed of this SoccerProjectionsGame.  # noqa: E501
        :rtype: bool
        """
        return self._is_closed

    @is_closed.setter
    def is_closed(self, is_closed):
        """Sets the is_closed of this SoccerProjectionsGame.


        :param is_closed: The is_closed of this SoccerProjectionsGame.  # noqa: E501
        :type: bool
        """

        self._is_closed = is_closed

    @property
    def home_team_formation(self):
        """Gets the home_team_formation of this SoccerProjectionsGame.  # noqa: E501


        :return: The home_team_formation of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._home_team_formation

    @home_team_formation.setter
    def home_team_formation(self, home_team_formation):
        """Sets the home_team_formation of this SoccerProjectionsGame.


        :param home_team_formation: The home_team_formation of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._home_team_formation = home_team_formation

    @property
    def away_team_formation(self):
        """Gets the away_team_formation of this SoccerProjectionsGame.  # noqa: E501


        :return: The away_team_formation of this SoccerProjectionsGame.  # noqa: E501
        :rtype: str
        """
        return self._away_team_formation

    @away_team_formation.setter
    def away_team_formation(self, away_team_formation):
        """Sets the away_team_formation of this SoccerProjectionsGame.


        :param away_team_formation: The away_team_formation of this SoccerProjectionsGame.  # noqa: E501
        :type: str
        """

        self._away_team_formation = away_team_formation

    @property
    def playoff_aggregate_score(self):
        """Gets the playoff_aggregate_score of this SoccerProjectionsGame.  # noqa: E501


        :return: The playoff_aggregate_score of this SoccerProjectionsGame.  # noqa: E501
        :rtype: SoccerProjectionsPlayoffAggregateScore
        """
        return self._playoff_aggregate_score

    @playoff_aggregate_score.setter
    def playoff_aggregate_score(self, playoff_aggregate_score):
        """Sets the playoff_aggregate_score of this SoccerProjectionsGame.


        :param playoff_aggregate_score: The playoff_aggregate_score of this SoccerProjectionsGame.  # noqa: E501
        :type: SoccerProjectionsPlayoffAggregateScore
        """

        self._playoff_aggregate_score = playoff_aggregate_score

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SoccerProjectionsGame, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SoccerProjectionsGame):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
